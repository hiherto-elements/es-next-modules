[
  {
    "__docId__": 0,
    "kind": "file",
    "name": "esi/Alliance.js",
    "content": "/** @module Alliance */\n// Auto-generated, edits will be overwritten\nimport * as gateway from './gateway'\n\n/**\n * List all active player alliances\n * \n * ---\n * Alternate route: `/dev/alliances/`\n * \n * Alternate route: `/legacy/alliances/`\n * \n * Alternate route: `/v1/alliances/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} List of Alliance IDs\n */\nexport function get_alliances(options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_alliancesOperation, parameters)\n}\n\n/**\n * Public information about an alliance\n * \n * ---\n * Alternate route: `/dev/alliances/{alliance_id}/`\n * \n * Alternate route: `/v3/alliances/{alliance_id}/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {number} allianceId An EVE alliance ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} Public data about an alliance\n */\nexport function get_alliances_alliance_id(allianceId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      alliance_id: allianceId\n    },\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_alliances_alliance_idOperation, parameters)\n}\n\n/**\n * List all current member corporations of an alliance\n * \n * ---\n * Alternate route: `/dev/alliances/{alliance_id}/corporations/`\n * \n * Alternate route: `/legacy/alliances/{alliance_id}/corporations/`\n * \n * Alternate route: `/v1/alliances/{alliance_id}/corporations/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {number} allianceId An EVE alliance ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} List of corporation IDs\n */\nexport function get_alliances_alliance_id_corporations(allianceId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      alliance_id: allianceId\n    },\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_alliances_alliance_id_corporationsOperation, parameters)\n}\n\n/**\n * Get the icon urls for a alliance\n * \n * ---\n * Alternate route: `/dev/alliances/{alliance_id}/icons/`\n * \n * Alternate route: `/legacy/alliances/{alliance_id}/icons/`\n * \n * Alternate route: `/v1/alliances/{alliance_id}/icons/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {number} allianceId An EVE alliance ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} Icon URLs for the given alliance id and server\n */\nexport function get_alliances_alliance_id_icons(allianceId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      alliance_id: allianceId\n    },\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_alliances_alliance_id_iconsOperation, parameters)\n}\n\nconst get_alliancesOperation = {\n  path: '/alliances/',\n  method: 'get'\n}\n\nconst get_alliances_alliance_idOperation = {\n  path: '/alliances/{alliance_id}/',\n  method: 'get'\n}\n\nconst get_alliances_alliance_id_corporationsOperation = {\n  path: '/alliances/{alliance_id}/corporations/',\n  method: 'get'\n}\n\nconst get_alliances_alliance_id_iconsOperation = {\n  path: '/alliances/{alliance_id}/icons/',\n  method: 'get'\n}\n",
    "static": true,
    "longname": "/Users/sebs/projects/opensource/es-next-modules/packages/esi/Alliance.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1,
    "kind": "function",
    "name": "get_alliances",
    "memberof": "esi/Alliance.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Alliance.js~get_alliances",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Alliance.js",
    "importStyle": "{get_alliances}",
    "description": "List all active player alliances\n\n---\nAlternate route: `/dev/alliances/`\n\nAlternate route: `/legacy/alliances/`\n\nAlternate route: `/v1/alliances/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "List of Alliance IDs"
    }
  },
  {
    "__docId__": 2,
    "kind": "function",
    "name": "get_alliances_alliance_id",
    "memberof": "esi/Alliance.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Alliance.js~get_alliances_alliance_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Alliance.js",
    "importStyle": "{get_alliances_alliance_id}",
    "description": "Public information about an alliance\n\n---\nAlternate route: `/dev/alliances/{alliance_id}/`\n\nAlternate route: `/v3/alliances/{alliance_id}/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 53,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "allianceId",
        "description": "An EVE alliance ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Public data about an alliance"
    }
  },
  {
    "__docId__": 3,
    "kind": "function",
    "name": "get_alliances_alliance_id_corporations",
    "memberof": "esi/Alliance.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Alliance.js~get_alliances_alliance_id_corporations",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Alliance.js",
    "importStyle": "{get_alliances_alliance_id_corporations}",
    "description": "List all current member corporations of an alliance\n\n---\nAlternate route: `/dev/alliances/{alliance_id}/corporations/`\n\nAlternate route: `/legacy/alliances/{alliance_id}/corporations/`\n\nAlternate route: `/v1/alliances/{alliance_id}/corporations/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 88,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "allianceId",
        "description": "An EVE alliance ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "List of corporation IDs"
    }
  },
  {
    "__docId__": 4,
    "kind": "function",
    "name": "get_alliances_alliance_id_icons",
    "memberof": "esi/Alliance.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Alliance.js~get_alliances_alliance_id_icons",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Alliance.js",
    "importStyle": "{get_alliances_alliance_id_icons}",
    "description": "Get the icon urls for a alliance\n\n---\nAlternate route: `/dev/alliances/{alliance_id}/icons/`\n\nAlternate route: `/legacy/alliances/{alliance_id}/icons/`\n\nAlternate route: `/v1/alliances/{alliance_id}/icons/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 123,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "allianceId",
        "description": "An EVE alliance ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Icon URLs for the given alliance id and server"
    }
  },
  {
    "__docId__": 5,
    "kind": "variable",
    "name": "get_alliancesOperation",
    "memberof": "esi/Alliance.js",
    "static": true,
    "longname": "esi/Alliance.js~get_alliancesOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Alliance.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 139,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 6,
    "kind": "variable",
    "name": "get_alliances_alliance_idOperation",
    "memberof": "esi/Alliance.js",
    "static": true,
    "longname": "esi/Alliance.js~get_alliances_alliance_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Alliance.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 144,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 7,
    "kind": "variable",
    "name": "get_alliances_alliance_id_corporationsOperation",
    "memberof": "esi/Alliance.js",
    "static": true,
    "longname": "esi/Alliance.js~get_alliances_alliance_id_corporationsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Alliance.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 149,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 8,
    "kind": "variable",
    "name": "get_alliances_alliance_id_iconsOperation",
    "memberof": "esi/Alliance.js",
    "static": true,
    "longname": "esi/Alliance.js~get_alliances_alliance_id_iconsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Alliance.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 154,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 9,
    "kind": "file",
    "name": "esi/Assets.js",
    "content": "/** @module Assets */\n// Auto-generated, edits will be overwritten\nimport * as gateway from './gateway'\n\n/**\n * Return a list of the characters assets\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/assets/`\n * \n * Alternate route: `/v3/characters/{character_id}/assets/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.page] Which page of results to return\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A flat list of the users assets\n */\nexport function get_characters_character_id_assets(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      page: options.page,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_assetsOperation, parameters)\n}\n\n/**\n * Return locations for a set of item ids, which you can get from character assets endpoint. Coordinates for items in hangars or stations are set to (0,0,0)\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/assets/locations/`\n * \n * Alternate route: `/v2/characters/{character_id}/assets/locations/`\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} List of asset locations\n */\nexport function post_characters_character_id_assets_locations(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    }\n  }\n  return gateway.request(post_characters_character_id_assets_locationsOperation, parameters)\n}\n\n/**\n * Return names for a set of item ids, which you can get from character assets endpoint. Typically used for items that can customize names, like containers or ships.\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/assets/names/`\n * \n * Alternate route: `/legacy/characters/{character_id}/assets/names/`\n * \n * Alternate route: `/v1/characters/{character_id}/assets/names/`\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} List of asset names\n */\nexport function post_characters_character_id_assets_names(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    }\n  }\n  return gateway.request(post_characters_character_id_assets_namesOperation, parameters)\n}\n\n/**\n * Return a list of the corporation assets\n * \n * ---\n * Alternate route: `/dev/corporations/{corporation_id}/assets/`\n * \n * Alternate route: `/v3/corporations/{corporation_id}/assets/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * ---\n * Requires one of the following EVE corporation role(s): Director\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.page] Which page of results to return\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A list of assets\n */\nexport function get_corporations_corporation_id_assets(corporationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      corporation_id: corporationId\n    },\n    query: {\n      datasource: options.datasource,\n      page: options.page,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_corporations_corporation_id_assetsOperation, parameters)\n}\n\n/**\n * Return locations for a set of item ids, which you can get from corporation assets endpoint. Coordinates for items in hangars or stations are set to (0,0,0)\n * \n * ---\n * Alternate route: `/dev/corporations/{corporation_id}/assets/locations/`\n * \n * Alternate route: `/v2/corporations/{corporation_id}/assets/locations/`\n * \n * \n * ---\n * Requires one of the following EVE corporation role(s): Director\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} List of asset locations\n */\nexport function post_corporations_corporation_id_assets_locations(corporationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      corporation_id: corporationId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    }\n  }\n  return gateway.request(post_corporations_corporation_id_assets_locationsOperation, parameters)\n}\n\n/**\n * Return names for a set of item ids, which you can get from corporation assets endpoint. Only valid for items that can customize names, like containers or ships\n * \n * ---\n * Alternate route: `/dev/corporations/{corporation_id}/assets/names/`\n * \n * Alternate route: `/legacy/corporations/{corporation_id}/assets/names/`\n * \n * Alternate route: `/v1/corporations/{corporation_id}/assets/names/`\n * \n * \n * ---\n * Requires one of the following EVE corporation role(s): Director\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} List of asset names\n */\nexport function post_corporations_corporation_id_assets_names(corporationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      corporation_id: corporationId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    }\n  }\n  return gateway.request(post_corporations_corporation_id_assets_namesOperation, parameters)\n}\n\nconst get_characters_character_id_assetsOperation = {\n  path: '/characters/{character_id}/assets/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-assets.read_assets.v1']\n    }\n  ]\n}\n\nconst post_characters_character_id_assets_locationsOperation = {\n  path: '/characters/{character_id}/assets/locations/',\n  method: 'post',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-assets.read_assets.v1']\n    }\n  ]\n}\n\nconst post_characters_character_id_assets_namesOperation = {\n  path: '/characters/{character_id}/assets/names/',\n  method: 'post',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-assets.read_assets.v1']\n    }\n  ]\n}\n\nconst get_corporations_corporation_id_assetsOperation = {\n  path: '/corporations/{corporation_id}/assets/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-assets.read_corporation_assets.v1']\n    }\n  ]\n}\n\nconst post_corporations_corporation_id_assets_locationsOperation = {\n  path: '/corporations/{corporation_id}/assets/locations/',\n  method: 'post',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-assets.read_corporation_assets.v1']\n    }\n  ]\n}\n\nconst post_corporations_corporation_id_assets_namesOperation = {\n  path: '/corporations/{corporation_id}/assets/names/',\n  method: 'post',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-assets.read_corporation_assets.v1']\n    }\n  ]\n}\n",
    "static": true,
    "longname": "/Users/sebs/projects/opensource/es-next-modules/packages/esi/Assets.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 10,
    "kind": "function",
    "name": "get_characters_character_id_assets",
    "memberof": "esi/Assets.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Assets.js~get_characters_character_id_assets",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Assets.js",
    "importStyle": "{get_characters_character_id_assets}",
    "description": "Return a list of the characters assets\n\n---\nAlternate route: `/dev/characters/{character_id}/assets/`\n\nAlternate route: `/v3/characters/{character_id}/assets/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A flat list of the users assets"
    }
  },
  {
    "__docId__": 11,
    "kind": "function",
    "name": "post_characters_character_id_assets_locations",
    "memberof": "esi/Assets.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Assets.js~post_characters_character_id_assets_locations",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Assets.js",
    "importStyle": "{post_characters_character_id_assets_locations}",
    "description": "Return locations for a set of item ids, which you can get from character assets endpoint. Coordinates for items in hangars or stations are set to (0,0,0)\n\n---\nAlternate route: `/dev/characters/{character_id}/assets/locations/`\n\nAlternate route: `/v2/characters/{character_id}/assets/locations/`",
    "lineNumber": 56,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "List of asset locations"
    }
  },
  {
    "__docId__": 12,
    "kind": "function",
    "name": "post_characters_character_id_assets_names",
    "memberof": "esi/Assets.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Assets.js~post_characters_character_id_assets_names",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Assets.js",
    "importStyle": "{post_characters_character_id_assets_names}",
    "description": "Return names for a set of item ids, which you can get from character assets endpoint. Typically used for items that can customize names, like containers or ships.\n\n---\nAlternate route: `/dev/characters/{character_id}/assets/names/`\n\nAlternate route: `/legacy/characters/{character_id}/assets/names/`\n\nAlternate route: `/v1/characters/{character_id}/assets/names/`",
    "lineNumber": 86,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "List of asset names"
    }
  },
  {
    "__docId__": 13,
    "kind": "function",
    "name": "get_corporations_corporation_id_assets",
    "memberof": "esi/Assets.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Assets.js~get_corporations_corporation_id_assets",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Assets.js",
    "importStyle": "{get_corporations_corporation_id_assets}",
    "description": "Return a list of the corporation assets\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/assets/`\n\nAlternate route: `/v3/corporations/{corporation_id}/assets/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Director",
    "lineNumber": 122,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of assets"
    }
  },
  {
    "__docId__": 14,
    "kind": "function",
    "name": "post_corporations_corporation_id_assets_locations",
    "memberof": "esi/Assets.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Assets.js~post_corporations_corporation_id_assets_locations",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Assets.js",
    "importStyle": "{post_corporations_corporation_id_assets_locations}",
    "description": "Return locations for a set of item ids, which you can get from corporation assets endpoint. Coordinates for items in hangars or stations are set to (0,0,0)\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/assets/locations/`\n\nAlternate route: `/v2/corporations/{corporation_id}/assets/locations/`\n\n\n---\nRequires one of the following EVE corporation role(s): Director",
    "lineNumber": 158,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "List of asset locations"
    }
  },
  {
    "__docId__": 15,
    "kind": "function",
    "name": "post_corporations_corporation_id_assets_names",
    "memberof": "esi/Assets.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Assets.js~post_corporations_corporation_id_assets_names",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Assets.js",
    "importStyle": "{post_corporations_corporation_id_assets_names}",
    "description": "Return names for a set of item ids, which you can get from corporation assets endpoint. Only valid for items that can customize names, like containers or ships\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/assets/names/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/assets/names/`\n\nAlternate route: `/v1/corporations/{corporation_id}/assets/names/`\n\n\n---\nRequires one of the following EVE corporation role(s): Director",
    "lineNumber": 192,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "List of asset names"
    }
  },
  {
    "__docId__": 16,
    "kind": "variable",
    "name": "get_characters_character_id_assetsOperation",
    "memberof": "esi/Assets.js",
    "static": true,
    "longname": "esi/Assets.js~get_characters_character_id_assetsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Assets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 206,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 17,
    "kind": "variable",
    "name": "post_characters_character_id_assets_locationsOperation",
    "memberof": "esi/Assets.js",
    "static": true,
    "longname": "esi/Assets.js~post_characters_character_id_assets_locationsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Assets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 217,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 18,
    "kind": "variable",
    "name": "post_characters_character_id_assets_namesOperation",
    "memberof": "esi/Assets.js",
    "static": true,
    "longname": "esi/Assets.js~post_characters_character_id_assets_namesOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Assets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 228,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 19,
    "kind": "variable",
    "name": "get_corporations_corporation_id_assetsOperation",
    "memberof": "esi/Assets.js",
    "static": true,
    "longname": "esi/Assets.js~get_corporations_corporation_id_assetsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Assets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 239,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 20,
    "kind": "variable",
    "name": "post_corporations_corporation_id_assets_locationsOperation",
    "memberof": "esi/Assets.js",
    "static": true,
    "longname": "esi/Assets.js~post_corporations_corporation_id_assets_locationsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Assets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 250,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 21,
    "kind": "variable",
    "name": "post_corporations_corporation_id_assets_namesOperation",
    "memberof": "esi/Assets.js",
    "static": true,
    "longname": "esi/Assets.js~post_corporations_corporation_id_assets_namesOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Assets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 261,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 22,
    "kind": "file",
    "name": "esi/Bookmarks.js",
    "content": "/** @module Bookmarks */\n// Auto-generated, edits will be overwritten\nimport * as gateway from './gateway'\n\n/**\n * A list of your character's personal bookmarks\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/bookmarks/`\n * \n * Alternate route: `/v2/characters/{character_id}/bookmarks/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.page] Which page of results to return\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A list of bookmarks\n */\nexport function get_characters_character_id_bookmarks(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      page: options.page,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_bookmarksOperation, parameters)\n}\n\n/**\n * A list of your character's personal bookmark folders\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/bookmarks/folders/`\n * \n * Alternate route: `/v2/characters/{character_id}/bookmarks/folders/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.page] Which page of results to return\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} List of bookmark folders\n */\nexport function get_characters_character_id_bookmarks_folders(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      page: options.page,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_bookmarks_foldersOperation, parameters)\n}\n\n/**\n * A list of your corporation's bookmarks\n * \n * ---\n * Alternate route: `/dev/corporations/{corporation_id}/bookmarks/`\n * \n * Alternate route: `/legacy/corporations/{corporation_id}/bookmarks/`\n * \n * Alternate route: `/v1/corporations/{corporation_id}/bookmarks/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.page] Which page of results to return\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} List of corporation owned bookmarks\n */\nexport function get_corporations_corporation_id_bookmarks(corporationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      corporation_id: corporationId\n    },\n    query: {\n      datasource: options.datasource,\n      page: options.page,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_corporations_corporation_id_bookmarksOperation, parameters)\n}\n\n/**\n * A list of your corporation's bookmark folders\n * \n * ---\n * Alternate route: `/dev/corporations/{corporation_id}/bookmarks/folders/`\n * \n * Alternate route: `/legacy/corporations/{corporation_id}/bookmarks/folders/`\n * \n * Alternate route: `/v1/corporations/{corporation_id}/bookmarks/folders/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.page] Which page of results to return\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} List of corporation owned bookmark folders\n */\nexport function get_corporations_corporation_id_bookmarks_folders(corporationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      corporation_id: corporationId\n    },\n    query: {\n      datasource: options.datasource,\n      page: options.page,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_corporations_corporation_id_bookmarks_foldersOperation, parameters)\n}\n\nconst get_characters_character_id_bookmarksOperation = {\n  path: '/characters/{character_id}/bookmarks/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-bookmarks.read_character_bookmarks.v1']\n    }\n  ]\n}\n\nconst get_characters_character_id_bookmarks_foldersOperation = {\n  path: '/characters/{character_id}/bookmarks/folders/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-bookmarks.read_character_bookmarks.v1']\n    }\n  ]\n}\n\nconst get_corporations_corporation_id_bookmarksOperation = {\n  path: '/corporations/{corporation_id}/bookmarks/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-bookmarks.read_corporation_bookmarks.v1']\n    }\n  ]\n}\n\nconst get_corporations_corporation_id_bookmarks_foldersOperation = {\n  path: '/corporations/{corporation_id}/bookmarks/folders/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-bookmarks.read_corporation_bookmarks.v1']\n    }\n  ]\n}\n",
    "static": true,
    "longname": "/Users/sebs/projects/opensource/es-next-modules/packages/esi/Bookmarks.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 23,
    "kind": "function",
    "name": "get_characters_character_id_bookmarks",
    "memberof": "esi/Bookmarks.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Bookmarks.js~get_characters_character_id_bookmarks",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Bookmarks.js",
    "importStyle": "{get_characters_character_id_bookmarks}",
    "description": "A list of your character's personal bookmarks\n\n---\nAlternate route: `/dev/characters/{character_id}/bookmarks/`\n\nAlternate route: `/v2/characters/{character_id}/bookmarks/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of bookmarks"
    }
  },
  {
    "__docId__": 24,
    "kind": "function",
    "name": "get_characters_character_id_bookmarks_folders",
    "memberof": "esi/Bookmarks.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Bookmarks.js~get_characters_character_id_bookmarks_folders",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Bookmarks.js",
    "importStyle": "{get_characters_character_id_bookmarks_folders}",
    "description": "A list of your character's personal bookmark folders\n\n---\nAlternate route: `/dev/characters/{character_id}/bookmarks/folders/`\n\nAlternate route: `/v2/characters/{character_id}/bookmarks/folders/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 61,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "List of bookmark folders"
    }
  },
  {
    "__docId__": 25,
    "kind": "function",
    "name": "get_corporations_corporation_id_bookmarks",
    "memberof": "esi/Bookmarks.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Bookmarks.js~get_corporations_corporation_id_bookmarks",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Bookmarks.js",
    "importStyle": "{get_corporations_corporation_id_bookmarks}",
    "description": "A list of your corporation's bookmarks\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/bookmarks/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/bookmarks/`\n\nAlternate route: `/v1/corporations/{corporation_id}/bookmarks/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 100,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "List of corporation owned bookmarks"
    }
  },
  {
    "__docId__": 26,
    "kind": "function",
    "name": "get_corporations_corporation_id_bookmarks_folders",
    "memberof": "esi/Bookmarks.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Bookmarks.js~get_corporations_corporation_id_bookmarks_folders",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Bookmarks.js",
    "importStyle": "{get_corporations_corporation_id_bookmarks_folders}",
    "description": "A list of your corporation's bookmark folders\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/bookmarks/folders/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/bookmarks/folders/`\n\nAlternate route: `/v1/corporations/{corporation_id}/bookmarks/folders/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 139,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "List of corporation owned bookmark folders"
    }
  },
  {
    "__docId__": 27,
    "kind": "variable",
    "name": "get_characters_character_id_bookmarksOperation",
    "memberof": "esi/Bookmarks.js",
    "static": true,
    "longname": "esi/Bookmarks.js~get_characters_character_id_bookmarksOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Bookmarks.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 157,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 28,
    "kind": "variable",
    "name": "get_characters_character_id_bookmarks_foldersOperation",
    "memberof": "esi/Bookmarks.js",
    "static": true,
    "longname": "esi/Bookmarks.js~get_characters_character_id_bookmarks_foldersOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Bookmarks.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 168,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 29,
    "kind": "variable",
    "name": "get_corporations_corporation_id_bookmarksOperation",
    "memberof": "esi/Bookmarks.js",
    "static": true,
    "longname": "esi/Bookmarks.js~get_corporations_corporation_id_bookmarksOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Bookmarks.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 179,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 30,
    "kind": "variable",
    "name": "get_corporations_corporation_id_bookmarks_foldersOperation",
    "memberof": "esi/Bookmarks.js",
    "static": true,
    "longname": "esi/Bookmarks.js~get_corporations_corporation_id_bookmarks_foldersOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Bookmarks.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 190,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 31,
    "kind": "file",
    "name": "esi/Calendar.js",
    "content": "/** @module Calendar */\n// Auto-generated, edits will be overwritten\nimport * as gateway from './gateway'\n\n/**\n * Get 50 event summaries from the calendar. If no from_event ID is given, the resource will return the next 50 chronological event summaries from now. If a from_event ID is specified, it will return the next 50 chronological event summaries from after that event\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/calendar/`\n * \n * Alternate route: `/legacy/characters/{character_id}/calendar/`\n * \n * Alternate route: `/v1/characters/{character_id}/calendar/`\n * \n * ---\n * This route is cached for up to 5 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {number} [options.fromEvent] The event ID to retrieve events from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A collection of event summaries\n */\nexport function get_characters_character_id_calendar(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      from_event: options.fromEvent,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_calendarOperation, parameters)\n}\n\n/**\n * Get all the information for a specific event\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/calendar/{event_id}/`\n * \n * Alternate route: `/v3/characters/{character_id}/calendar/{event_id}/`\n * \n * ---\n * This route is cached for up to 5 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {number} eventId The id of the event requested\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Full details of a specific event\n */\nexport function get_characters_character_id_calendar_event_id(characterId, eventId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId,\n      event_id: eventId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_calendar_event_idOperation, parameters)\n}\n\n/**\n * Set your response status to an event\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/calendar/{event_id}/`\n * \n * Alternate route: `/v3/characters/{character_id}/calendar/{event_id}/`\n * \n * @param {number} characterId An EVE character ID\n * @param {number} eventId The ID of the event requested\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Event updated\n */\nexport function put_characters_character_id_calendar_event_id(characterId, eventId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId,\n      event_id: eventId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    }\n  }\n  return gateway.request(put_characters_character_id_calendar_event_idOperation, parameters)\n}\n\n/**\n * Get all invited attendees for a given event\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/calendar/{event_id}/attendees/`\n * \n * Alternate route: `/legacy/characters/{character_id}/calendar/{event_id}/attendees/`\n * \n * Alternate route: `/v1/characters/{character_id}/calendar/{event_id}/attendees/`\n * \n * ---\n * This route is cached for up to 600 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {number} eventId The id of the event requested\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} List of attendees\n */\nexport function get_characters_character_id_calendar_event_id_attendees(characterId, eventId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId,\n      event_id: eventId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_calendar_event_id_attendeesOperation, parameters)\n}\n\nconst get_characters_character_id_calendarOperation = {\n  path: '/characters/{character_id}/calendar/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-calendar.read_calendar_events.v1']\n    }\n  ]\n}\n\nconst get_characters_character_id_calendar_event_idOperation = {\n  path: '/characters/{character_id}/calendar/{event_id}/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-calendar.read_calendar_events.v1']\n    }\n  ]\n}\n\nconst put_characters_character_id_calendar_event_idOperation = {\n  path: '/characters/{character_id}/calendar/{event_id}/',\n  method: 'put',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-calendar.respond_calendar_events.v1']\n    }\n  ]\n}\n\nconst get_characters_character_id_calendar_event_id_attendeesOperation = {\n  path: '/characters/{character_id}/calendar/{event_id}/attendees/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-calendar.read_calendar_events.v1']\n    }\n  ]\n}\n",
    "static": true,
    "longname": "/Users/sebs/projects/opensource/es-next-modules/packages/esi/Calendar.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 32,
    "kind": "function",
    "name": "get_characters_character_id_calendar",
    "memberof": "esi/Calendar.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Calendar.js~get_characters_character_id_calendar",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Calendar.js",
    "importStyle": "{get_characters_character_id_calendar}",
    "description": "Get 50 event summaries from the calendar. If no from_event ID is given, the resource will return the next 50 chronological event summaries from now. If a from_event ID is specified, it will return the next 50 chronological event summaries from after that event\n\n---\nAlternate route: `/dev/characters/{character_id}/calendar/`\n\nAlternate route: `/legacy/characters/{character_id}/calendar/`\n\nAlternate route: `/v1/characters/{character_id}/calendar/`\n\n---\nThis route is cached for up to 5 seconds",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.fromEvent",
        "description": "The event ID to retrieve events from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A collection of event summaries"
    }
  },
  {
    "__docId__": 33,
    "kind": "function",
    "name": "get_characters_character_id_calendar_event_id",
    "memberof": "esi/Calendar.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Calendar.js~get_characters_character_id_calendar_event_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Calendar.js",
    "importStyle": "{get_characters_character_id_calendar_event_id}",
    "description": "Get all the information for a specific event\n\n---\nAlternate route: `/dev/characters/{character_id}/calendar/{event_id}/`\n\nAlternate route: `/v3/characters/{character_id}/calendar/{event_id}/`\n\n---\nThis route is cached for up to 5 seconds",
    "lineNumber": 63,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "eventId",
        "description": "The id of the event requested"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Full details of a specific event"
    }
  },
  {
    "__docId__": 34,
    "kind": "function",
    "name": "put_characters_character_id_calendar_event_id",
    "memberof": "esi/Calendar.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Calendar.js~put_characters_character_id_calendar_event_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Calendar.js",
    "importStyle": "{put_characters_character_id_calendar_event_id}",
    "description": "Set your response status to an event\n\n---\nAlternate route: `/dev/characters/{character_id}/calendar/{event_id}/`\n\nAlternate route: `/v3/characters/{character_id}/calendar/{event_id}/`",
    "lineNumber": 96,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "eventId",
        "description": "The ID of the event requested"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Event updated"
    }
  },
  {
    "__docId__": 35,
    "kind": "function",
    "name": "get_characters_character_id_calendar_event_id_attendees",
    "memberof": "esi/Calendar.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Calendar.js~get_characters_character_id_calendar_event_id_attendees",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Calendar.js",
    "importStyle": "{get_characters_character_id_calendar_event_id_attendees}",
    "description": "Get all invited attendees for a given event\n\n---\nAlternate route: `/dev/characters/{character_id}/calendar/{event_id}/attendees/`\n\nAlternate route: `/legacy/characters/{character_id}/calendar/{event_id}/attendees/`\n\nAlternate route: `/v1/characters/{character_id}/calendar/{event_id}/attendees/`\n\n---\nThis route is cached for up to 600 seconds",
    "lineNumber": 132,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "eventId",
        "description": "The id of the event requested"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "List of attendees"
    }
  },
  {
    "__docId__": 36,
    "kind": "variable",
    "name": "get_characters_character_id_calendarOperation",
    "memberof": "esi/Calendar.js",
    "static": true,
    "longname": "esi/Calendar.js~get_characters_character_id_calendarOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Calendar.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 150,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 37,
    "kind": "variable",
    "name": "get_characters_character_id_calendar_event_idOperation",
    "memberof": "esi/Calendar.js",
    "static": true,
    "longname": "esi/Calendar.js~get_characters_character_id_calendar_event_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Calendar.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 161,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 38,
    "kind": "variable",
    "name": "put_characters_character_id_calendar_event_idOperation",
    "memberof": "esi/Calendar.js",
    "static": true,
    "longname": "esi/Calendar.js~put_characters_character_id_calendar_event_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Calendar.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 172,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 39,
    "kind": "variable",
    "name": "get_characters_character_id_calendar_event_id_attendeesOperation",
    "memberof": "esi/Calendar.js",
    "static": true,
    "longname": "esi/Calendar.js~get_characters_character_id_calendar_event_id_attendeesOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Calendar.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 183,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 40,
    "kind": "file",
    "name": "esi/Character.js",
    "content": "/** @module Character */\n// Auto-generated, edits will be overwritten\nimport * as gateway from './gateway'\n\n/**\n * Bulk lookup of character IDs to corporation, alliance and faction\n * \n * ---\n * Alternate route: `/dev/characters/affiliation/`\n * \n * Alternate route: `/legacy/characters/affiliation/`\n * \n * Alternate route: `/v1/characters/affiliation/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @return {Promise<object>} Character corporation, alliance and faction IDs\n */\nexport function post_characters_affiliation(options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource\n    }\n  }\n  return gateway.request(post_characters_affiliationOperation, parameters)\n}\n\n/**\n * Public information about a character\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/`\n * \n * Alternate route: `/v4/characters/{character_id}/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} Public data for the given character\n */\nexport function get_characters_character_id(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_idOperation, parameters)\n}\n\n/**\n * Return a list of agents research information for a character. The formula for finding the current research points with an agent is: currentPoints = remainderPoints + pointsPerDay * days(currentTime - researchStartDate)\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/agents_research/`\n * \n * Alternate route: `/legacy/characters/{character_id}/agents_research/`\n * \n * Alternate route: `/v1/characters/{character_id}/agents_research/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A list of agents research information\n */\nexport function get_characters_character_id_agents_research(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_agents_researchOperation, parameters)\n}\n\n/**\n * Return a list of blueprints the character owns\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/blueprints/`\n * \n * Alternate route: `/v2/characters/{character_id}/blueprints/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.page] Which page of results to return\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A list of blueprints\n */\nexport function get_characters_character_id_blueprints(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      page: options.page,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_blueprintsOperation, parameters)\n}\n\n/**\n * Get a list of all the corporations a character has been a member of\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/corporationhistory/`\n * \n * Alternate route: `/legacy/characters/{character_id}/corporationhistory/`\n * \n * Alternate route: `/v1/characters/{character_id}/corporationhistory/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} Corporation history for the given character\n */\nexport function get_characters_character_id_corporationhistory(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_corporationhistoryOperation, parameters)\n}\n\n/**\n * Takes a source character ID in the url and a set of target character ID's in the body, returns a CSPA charge cost\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/cspa/`\n * \n * Alternate route: `/v4/characters/{character_id}/cspa/`\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Aggregate cost of sending a mail from the source character to the target characters, in ISK\n */\nexport function post_characters_character_id_cspa(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    }\n  }\n  return gateway.request(post_characters_character_id_cspaOperation, parameters)\n}\n\n/**\n * Return a character's jump activation and fatigue information\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/fatigue/`\n * \n * Alternate route: `/legacy/characters/{character_id}/fatigue/`\n * \n * Alternate route: `/v1/characters/{character_id}/fatigue/`\n * \n * ---\n * This route is cached for up to 300 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Jump activation and fatigue information\n */\nexport function get_characters_character_id_fatigue(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_fatigueOperation, parameters)\n}\n\n/**\n * Return a list of medals the character has\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/medals/`\n * \n * Alternate route: `/legacy/characters/{character_id}/medals/`\n * \n * Alternate route: `/v1/characters/{character_id}/medals/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A list of medals\n */\nexport function get_characters_character_id_medals(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_medalsOperation, parameters)\n}\n\n/**\n * Return character notifications\n * \n * ---\n * Alternate route: `/v2/characters/{character_id}/notifications/`\n * \n * ---\n * This route is cached for up to 600 seconds\n * \n * ---\n * Warning: This route has an upgrade available\n * \n * ---\n * [Diff of the upcoming changes](https://esi.evetech.net/diff/latest/dev/#GET-/characters/{character_id}/notifications/)\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Returns your recent notifications\n */\nexport function get_characters_character_id_notifications(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_notificationsOperation, parameters)\n}\n\n/**\n * Return notifications about having been added to someone's contact list\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/notifications/contacts/`\n * \n * Alternate route: `/legacy/characters/{character_id}/notifications/contacts/`\n * \n * Alternate route: `/v1/characters/{character_id}/notifications/contacts/`\n * \n * ---\n * This route is cached for up to 600 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A list of contact notifications\n */\nexport function get_characters_character_id_notifications_contacts(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_notifications_contactsOperation, parameters)\n}\n\n/**\n * Get portrait urls for a character\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/portrait/`\n * \n * Alternate route: `/v2/characters/{character_id}/portrait/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} Public data for the given character\n */\nexport function get_characters_character_id_portrait(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_portraitOperation, parameters)\n}\n\n/**\n * Returns a character's corporation roles\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/roles/`\n * \n * Alternate route: `/v2/characters/{character_id}/roles/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} The character's roles in thier corporation\n */\nexport function get_characters_character_id_roles(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_rolesOperation, parameters)\n}\n\n/**\n * Return character standings from agents, NPC corporations, and factions\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/standings/`\n * \n * Alternate route: `/legacy/characters/{character_id}/standings/`\n * \n * Alternate route: `/v1/characters/{character_id}/standings/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A list of standings\n */\nexport function get_characters_character_id_standings(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_standingsOperation, parameters)\n}\n\n/**\n * Returns aggregate yearly stats for a character\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/stats/`\n * \n * Alternate route: `/v2/characters/{character_id}/stats/`\n * \n * ---\n * This route is cached for up to 86400 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Character stats\n */\nexport function get_characters_character_id_stats(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_statsOperation, parameters)\n}\n\n/**\n * Returns a character's titles\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/titles/`\n * \n * Alternate route: `/legacy/characters/{character_id}/titles/`\n * \n * Alternate route: `/v1/characters/{character_id}/titles/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A list of titles\n */\nexport function get_characters_character_id_titles(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_titlesOperation, parameters)\n}\n\nconst post_characters_affiliationOperation = {\n  path: '/characters/affiliation/',\n  method: 'post'\n}\n\nconst get_characters_character_idOperation = {\n  path: '/characters/{character_id}/',\n  method: 'get'\n}\n\nconst get_characters_character_id_agents_researchOperation = {\n  path: '/characters/{character_id}/agents_research/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-characters.read_agents_research.v1']\n    }\n  ]\n}\n\nconst get_characters_character_id_blueprintsOperation = {\n  path: '/characters/{character_id}/blueprints/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-characters.read_blueprints.v1']\n    }\n  ]\n}\n\nconst get_characters_character_id_corporationhistoryOperation = {\n  path: '/characters/{character_id}/corporationhistory/',\n  method: 'get'\n}\n\nconst post_characters_character_id_cspaOperation = {\n  path: '/characters/{character_id}/cspa/',\n  method: 'post',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-characters.read_contacts.v1']\n    }\n  ]\n}\n\nconst get_characters_character_id_fatigueOperation = {\n  path: '/characters/{character_id}/fatigue/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-characters.read_fatigue.v1']\n    }\n  ]\n}\n\nconst get_characters_character_id_medalsOperation = {\n  path: '/characters/{character_id}/medals/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-characters.read_medals.v1']\n    }\n  ]\n}\n\nconst get_characters_character_id_notificationsOperation = {\n  path: '/characters/{character_id}/notifications/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-characters.read_notifications.v1']\n    }\n  ]\n}\n\nconst get_characters_character_id_notifications_contactsOperation = {\n  path: '/characters/{character_id}/notifications/contacts/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-characters.read_notifications.v1']\n    }\n  ]\n}\n\nconst get_characters_character_id_portraitOperation = {\n  path: '/characters/{character_id}/portrait/',\n  method: 'get'\n}\n\nconst get_characters_character_id_rolesOperation = {\n  path: '/characters/{character_id}/roles/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-characters.read_corporation_roles.v1']\n    }\n  ]\n}\n\nconst get_characters_character_id_standingsOperation = {\n  path: '/characters/{character_id}/standings/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-characters.read_standings.v1']\n    }\n  ]\n}\n\nconst get_characters_character_id_statsOperation = {\n  path: '/characters/{character_id}/stats/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-characterstats.read.v1']\n    }\n  ]\n}\n\nconst get_characters_character_id_titlesOperation = {\n  path: '/characters/{character_id}/titles/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-characters.read_titles.v1']\n    }\n  ]\n}\n",
    "static": true,
    "longname": "/Users/sebs/projects/opensource/es-next-modules/packages/esi/Character.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 41,
    "kind": "function",
    "name": "post_characters_affiliation",
    "memberof": "esi/Character.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Character.js~post_characters_affiliation",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Character.js",
    "importStyle": "{post_characters_affiliation}",
    "description": "Bulk lookup of character IDs to corporation, alliance and faction\n\n---\nAlternate route: `/dev/characters/affiliation/`\n\nAlternate route: `/legacy/characters/affiliation/`\n\nAlternate route: `/v1/characters/affiliation/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Character corporation, alliance and faction IDs"
    }
  },
  {
    "__docId__": 42,
    "kind": "function",
    "name": "get_characters_character_id",
    "memberof": "esi/Character.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Character.js~get_characters_character_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Character.js",
    "importStyle": "{get_characters_character_id}",
    "description": "Public information about a character\n\n---\nAlternate route: `/dev/characters/{character_id}/`\n\nAlternate route: `/v4/characters/{character_id}/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 49,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Public data for the given character"
    }
  },
  {
    "__docId__": 43,
    "kind": "function",
    "name": "get_characters_character_id_agents_research",
    "memberof": "esi/Character.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Character.js~get_characters_character_id_agents_research",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Character.js",
    "importStyle": "{get_characters_character_id_agents_research}",
    "description": "Return a list of agents research information for a character. The formula for finding the current research points with an agent is: currentPoints = remainderPoints + pointsPerDay * days(currentTime - researchStartDate)\n\n---\nAlternate route: `/dev/characters/{character_id}/agents_research/`\n\nAlternate route: `/legacy/characters/{character_id}/agents_research/`\n\nAlternate route: `/v1/characters/{character_id}/agents_research/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 85,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of agents research information"
    }
  },
  {
    "__docId__": 44,
    "kind": "function",
    "name": "get_characters_character_id_blueprints",
    "memberof": "esi/Character.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Character.js~get_characters_character_id_blueprints",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Character.js",
    "importStyle": "{get_characters_character_id_blueprints}",
    "description": "Return a list of blueprints the character owns\n\n---\nAlternate route: `/dev/characters/{character_id}/blueprints/`\n\nAlternate route: `/v2/characters/{character_id}/blueprints/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 121,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of blueprints"
    }
  },
  {
    "__docId__": 45,
    "kind": "function",
    "name": "get_characters_character_id_corporationhistory",
    "memberof": "esi/Character.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Character.js~get_characters_character_id_corporationhistory",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Character.js",
    "importStyle": "{get_characters_character_id_corporationhistory}",
    "description": "Get a list of all the corporations a character has been a member of\n\n---\nAlternate route: `/dev/characters/{character_id}/corporationhistory/`\n\nAlternate route: `/legacy/characters/{character_id}/corporationhistory/`\n\nAlternate route: `/v1/characters/{character_id}/corporationhistory/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 158,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Corporation history for the given character"
    }
  },
  {
    "__docId__": 46,
    "kind": "function",
    "name": "post_characters_character_id_cspa",
    "memberof": "esi/Character.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Character.js~post_characters_character_id_cspa",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Character.js",
    "importStyle": "{post_characters_character_id_cspa}",
    "description": "Takes a source character ID in the url and a set of target character ID's in the body, returns a CSPA charge cost\n\n---\nAlternate route: `/dev/characters/{character_id}/cspa/`\n\nAlternate route: `/v4/characters/{character_id}/cspa/`",
    "lineNumber": 188,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Aggregate cost of sending a mail from the source character to the target characters, in ISK"
    }
  },
  {
    "__docId__": 47,
    "kind": "function",
    "name": "get_characters_character_id_fatigue",
    "memberof": "esi/Character.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Character.js~get_characters_character_id_fatigue",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Character.js",
    "importStyle": "{get_characters_character_id_fatigue}",
    "description": "Return a character's jump activation and fatigue information\n\n---\nAlternate route: `/dev/characters/{character_id}/fatigue/`\n\nAlternate route: `/legacy/characters/{character_id}/fatigue/`\n\nAlternate route: `/v1/characters/{character_id}/fatigue/`\n\n---\nThis route is cached for up to 300 seconds",
    "lineNumber": 222,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Jump activation and fatigue information"
    }
  },
  {
    "__docId__": 48,
    "kind": "function",
    "name": "get_characters_character_id_medals",
    "memberof": "esi/Character.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Character.js~get_characters_character_id_medals",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Character.js",
    "importStyle": "{get_characters_character_id_medals}",
    "description": "Return a list of medals the character has\n\n---\nAlternate route: `/dev/characters/{character_id}/medals/`\n\nAlternate route: `/legacy/characters/{character_id}/medals/`\n\nAlternate route: `/v1/characters/{character_id}/medals/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 259,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of medals"
    }
  },
  {
    "__docId__": 49,
    "kind": "function",
    "name": "get_characters_character_id_notifications",
    "memberof": "esi/Character.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Character.js~get_characters_character_id_notifications",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Character.js",
    "importStyle": "{get_characters_character_id_notifications}",
    "description": "Return character notifications\n\n---\nAlternate route: `/v2/characters/{character_id}/notifications/`\n\n---\nThis route is cached for up to 600 seconds\n\n---\nWarning: This route has an upgrade available\n\n---\n[Diff of the upcoming changes](https://esi.evetech.net/diff/latest/dev/#GET-/characters/{character_id}/notifications/)",
    "lineNumber": 298,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Returns your recent notifications"
    }
  },
  {
    "__docId__": 50,
    "kind": "function",
    "name": "get_characters_character_id_notifications_contacts",
    "memberof": "esi/Character.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Character.js~get_characters_character_id_notifications_contacts",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Character.js",
    "importStyle": "{get_characters_character_id_notifications_contacts}",
    "description": "Return notifications about having been added to someone's contact list\n\n---\nAlternate route: `/dev/characters/{character_id}/notifications/contacts/`\n\nAlternate route: `/legacy/characters/{character_id}/notifications/contacts/`\n\nAlternate route: `/v1/characters/{character_id}/notifications/contacts/`\n\n---\nThis route is cached for up to 600 seconds",
    "lineNumber": 335,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of contact notifications"
    }
  },
  {
    "__docId__": 51,
    "kind": "function",
    "name": "get_characters_character_id_portrait",
    "memberof": "esi/Character.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Character.js~get_characters_character_id_portrait",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Character.js",
    "importStyle": "{get_characters_character_id_portrait}",
    "description": "Get portrait urls for a character\n\n---\nAlternate route: `/dev/characters/{character_id}/portrait/`\n\nAlternate route: `/v2/characters/{character_id}/portrait/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 369,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Public data for the given character"
    }
  },
  {
    "__docId__": 52,
    "kind": "function",
    "name": "get_characters_character_id_roles",
    "memberof": "esi/Character.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Character.js~get_characters_character_id_roles",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Character.js",
    "importStyle": "{get_characters_character_id_roles}",
    "description": "Returns a character's corporation roles\n\n---\nAlternate route: `/dev/characters/{character_id}/roles/`\n\nAlternate route: `/v2/characters/{character_id}/roles/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 403,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "The character's roles in thier corporation"
    }
  },
  {
    "__docId__": 53,
    "kind": "function",
    "name": "get_characters_character_id_standings",
    "memberof": "esi/Character.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Character.js~get_characters_character_id_standings",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Character.js",
    "importStyle": "{get_characters_character_id_standings}",
    "description": "Return character standings from agents, NPC corporations, and factions\n\n---\nAlternate route: `/dev/characters/{character_id}/standings/`\n\nAlternate route: `/legacy/characters/{character_id}/standings/`\n\nAlternate route: `/v1/characters/{character_id}/standings/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 440,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of standings"
    }
  },
  {
    "__docId__": 54,
    "kind": "function",
    "name": "get_characters_character_id_stats",
    "memberof": "esi/Character.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Character.js~get_characters_character_id_stats",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Character.js",
    "importStyle": "{get_characters_character_id_stats}",
    "description": "Returns aggregate yearly stats for a character\n\n---\nAlternate route: `/dev/characters/{character_id}/stats/`\n\nAlternate route: `/v2/characters/{character_id}/stats/`\n\n---\nThis route is cached for up to 86400 seconds",
    "lineNumber": 475,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Character stats"
    }
  },
  {
    "__docId__": 55,
    "kind": "function",
    "name": "get_characters_character_id_titles",
    "memberof": "esi/Character.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Character.js~get_characters_character_id_titles",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Character.js",
    "importStyle": "{get_characters_character_id_titles}",
    "description": "Returns a character's titles\n\n---\nAlternate route: `/dev/characters/{character_id}/titles/`\n\nAlternate route: `/legacy/characters/{character_id}/titles/`\n\nAlternate route: `/v1/characters/{character_id}/titles/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 512,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of titles"
    }
  },
  {
    "__docId__": 56,
    "kind": "variable",
    "name": "post_characters_affiliationOperation",
    "memberof": "esi/Character.js",
    "static": true,
    "longname": "esi/Character.js~post_characters_affiliationOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Character.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 529,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 57,
    "kind": "variable",
    "name": "get_characters_character_idOperation",
    "memberof": "esi/Character.js",
    "static": true,
    "longname": "esi/Character.js~get_characters_character_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Character.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 534,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 58,
    "kind": "variable",
    "name": "get_characters_character_id_agents_researchOperation",
    "memberof": "esi/Character.js",
    "static": true,
    "longname": "esi/Character.js~get_characters_character_id_agents_researchOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Character.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 539,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 59,
    "kind": "variable",
    "name": "get_characters_character_id_blueprintsOperation",
    "memberof": "esi/Character.js",
    "static": true,
    "longname": "esi/Character.js~get_characters_character_id_blueprintsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Character.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 550,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 60,
    "kind": "variable",
    "name": "get_characters_character_id_corporationhistoryOperation",
    "memberof": "esi/Character.js",
    "static": true,
    "longname": "esi/Character.js~get_characters_character_id_corporationhistoryOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Character.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 561,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 61,
    "kind": "variable",
    "name": "post_characters_character_id_cspaOperation",
    "memberof": "esi/Character.js",
    "static": true,
    "longname": "esi/Character.js~post_characters_character_id_cspaOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Character.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 566,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 62,
    "kind": "variable",
    "name": "get_characters_character_id_fatigueOperation",
    "memberof": "esi/Character.js",
    "static": true,
    "longname": "esi/Character.js~get_characters_character_id_fatigueOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Character.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 577,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 63,
    "kind": "variable",
    "name": "get_characters_character_id_medalsOperation",
    "memberof": "esi/Character.js",
    "static": true,
    "longname": "esi/Character.js~get_characters_character_id_medalsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Character.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 588,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 64,
    "kind": "variable",
    "name": "get_characters_character_id_notificationsOperation",
    "memberof": "esi/Character.js",
    "static": true,
    "longname": "esi/Character.js~get_characters_character_id_notificationsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Character.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 599,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 65,
    "kind": "variable",
    "name": "get_characters_character_id_notifications_contactsOperation",
    "memberof": "esi/Character.js",
    "static": true,
    "longname": "esi/Character.js~get_characters_character_id_notifications_contactsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Character.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 610,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 66,
    "kind": "variable",
    "name": "get_characters_character_id_portraitOperation",
    "memberof": "esi/Character.js",
    "static": true,
    "longname": "esi/Character.js~get_characters_character_id_portraitOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Character.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 621,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 67,
    "kind": "variable",
    "name": "get_characters_character_id_rolesOperation",
    "memberof": "esi/Character.js",
    "static": true,
    "longname": "esi/Character.js~get_characters_character_id_rolesOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Character.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 626,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 68,
    "kind": "variable",
    "name": "get_characters_character_id_standingsOperation",
    "memberof": "esi/Character.js",
    "static": true,
    "longname": "esi/Character.js~get_characters_character_id_standingsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Character.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 637,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 69,
    "kind": "variable",
    "name": "get_characters_character_id_statsOperation",
    "memberof": "esi/Character.js",
    "static": true,
    "longname": "esi/Character.js~get_characters_character_id_statsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Character.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 648,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 70,
    "kind": "variable",
    "name": "get_characters_character_id_titlesOperation",
    "memberof": "esi/Character.js",
    "static": true,
    "longname": "esi/Character.js~get_characters_character_id_titlesOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Character.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 659,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 71,
    "kind": "file",
    "name": "esi/Clones.js",
    "content": "/** @module Clones */\n// Auto-generated, edits will be overwritten\nimport * as gateway from './gateway'\n\n/**\n * A list of the character's clones\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/clones/`\n * \n * Alternate route: `/v3/characters/{character_id}/clones/`\n * \n * ---\n * This route is cached for up to 120 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Clone information for the given character\n */\nexport function get_characters_character_id_clones(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_clonesOperation, parameters)\n}\n\n/**\n * Return implants on the active clone of a character\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/implants/`\n * \n * Alternate route: `/legacy/characters/{character_id}/implants/`\n * \n * Alternate route: `/v1/characters/{character_id}/implants/`\n * \n * ---\n * This route is cached for up to 300 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A list of implant type ids\n */\nexport function get_characters_character_id_implants(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_implantsOperation, parameters)\n}\n\nconst get_characters_character_id_clonesOperation = {\n  path: '/characters/{character_id}/clones/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-clones.read_clones.v1']\n    }\n  ]\n}\n\nconst get_characters_character_id_implantsOperation = {\n  path: '/characters/{character_id}/implants/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-clones.read_implants.v1']\n    }\n  ]\n}\n",
    "static": true,
    "longname": "/Users/sebs/projects/opensource/es-next-modules/packages/esi/Clones.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 72,
    "kind": "function",
    "name": "get_characters_character_id_clones",
    "memberof": "esi/Clones.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Clones.js~get_characters_character_id_clones",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Clones.js",
    "importStyle": "{get_characters_character_id_clones}",
    "description": "A list of the character's clones\n\n---\nAlternate route: `/dev/characters/{character_id}/clones/`\n\nAlternate route: `/v3/characters/{character_id}/clones/`\n\n---\nThis route is cached for up to 120 seconds",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Clone information for the given character"
    }
  },
  {
    "__docId__": 73,
    "kind": "function",
    "name": "get_characters_character_id_implants",
    "memberof": "esi/Clones.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Clones.js~get_characters_character_id_implants",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Clones.js",
    "importStyle": "{get_characters_character_id_implants}",
    "description": "Return implants on the active clone of a character\n\n---\nAlternate route: `/dev/characters/{character_id}/implants/`\n\nAlternate route: `/legacy/characters/{character_id}/implants/`\n\nAlternate route: `/v1/characters/{character_id}/implants/`\n\n---\nThis route is cached for up to 300 seconds",
    "lineNumber": 60,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of implant type ids"
    }
  },
  {
    "__docId__": 74,
    "kind": "variable",
    "name": "get_characters_character_id_clonesOperation",
    "memberof": "esi/Clones.js",
    "static": true,
    "longname": "esi/Clones.js~get_characters_character_id_clonesOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Clones.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 77,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 75,
    "kind": "variable",
    "name": "get_characters_character_id_implantsOperation",
    "memberof": "esi/Clones.js",
    "static": true,
    "longname": "esi/Clones.js~get_characters_character_id_implantsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Clones.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 88,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 76,
    "kind": "file",
    "name": "esi/Contacts.js",
    "content": "/** @module Contacts */\n// Auto-generated, edits will be overwritten\nimport * as gateway from './gateway'\n\n/**\n * Return contacts of an alliance\n * \n * ---\n * Alternate route: `/dev/alliances/{alliance_id}/contacts/`\n * \n * Alternate route: `/v2/alliances/{alliance_id}/contacts/`\n * \n * ---\n * This route is cached for up to 300 seconds\n * \n * @param {number} allianceId An EVE alliance ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.page] Which page of results to return\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A list of contacts\n */\nexport function get_alliances_alliance_id_contacts(allianceId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      alliance_id: allianceId\n    },\n    query: {\n      datasource: options.datasource,\n      page: options.page,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_alliances_alliance_id_contactsOperation, parameters)\n}\n\n/**\n * Return custom labels for an alliance's contacts\n * \n * ---\n * Alternate route: `/dev/alliances/{alliance_id}/contacts/labels/`\n * \n * Alternate route: `/legacy/alliances/{alliance_id}/contacts/labels/`\n * \n * Alternate route: `/v1/alliances/{alliance_id}/contacts/labels/`\n * \n * ---\n * This route is cached for up to 300 seconds\n * \n * @param {number} allianceId An EVE alliance ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A list of alliance contact labels\n */\nexport function get_alliances_alliance_id_contacts_labels(allianceId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      alliance_id: allianceId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_alliances_alliance_id_contacts_labelsOperation, parameters)\n}\n\n/**\n * Bulk delete contacts\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/contacts/`\n * \n * Alternate route: `/v2/characters/{character_id}/contacts/`\n * \n * @param {number} characterId An EVE character ID\n * @param {number[]} contactIds A list of contacts to delete\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Contacts deleted\n */\nexport function delete_characters_character_id_contacts(characterId, contactIds, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      contact_ids: contactIds,\n      datasource: options.datasource,\n      token: options.token\n    }\n  }\n  return gateway.request(delete_characters_character_id_contactsOperation, parameters)\n}\n\n/**\n * Return contacts of a character\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/contacts/`\n * \n * Alternate route: `/v2/characters/{character_id}/contacts/`\n * \n * ---\n * This route is cached for up to 300 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.page] Which page of results to return\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A list of contacts\n */\nexport function get_characters_character_id_contacts(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      page: options.page,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_contactsOperation, parameters)\n}\n\n/**\n * Bulk add contacts with same settings\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/contacts/`\n * \n * Alternate route: `/v2/characters/{character_id}/contacts/`\n * \n * @param {number} characterId An EVE character ID\n * @param {number} standing Standing for the contact\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {number[]} [options.labelIds] Add custom labels to the new contact\n * @param {string} [options.token] Access token to use if unable to set a header\n * @param {boolean} [options.watched] Whether the contact should be watched, note this is only effective on characters\n * @return {Promise<object>} A list of contact ids that successfully created\n */\nexport function post_characters_character_id_contacts(characterId, standing, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      label_ids: options.labelIds,\n      standing,\n      token: options.token,\n      watched: options.watched\n    }\n  }\n  return gateway.request(post_characters_character_id_contactsOperation, parameters)\n}\n\n/**\n * Bulk edit contacts with same settings\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/contacts/`\n * \n * Alternate route: `/v2/characters/{character_id}/contacts/`\n * \n * @param {number} characterId An EVE character ID\n * @param {number} standing Standing for the contact\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {number[]} [options.labelIds] Add custom labels to the contact\n * @param {string} [options.token] Access token to use if unable to set a header\n * @param {boolean} [options.watched] Whether the contact should be watched, note this is only effective on characters\n * @return {Promise<object>} Contacts updated\n */\nexport function put_characters_character_id_contacts(characterId, standing, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      label_ids: options.labelIds,\n      standing,\n      token: options.token,\n      watched: options.watched\n    }\n  }\n  return gateway.request(put_characters_character_id_contactsOperation, parameters)\n}\n\n/**\n * Return custom labels for a character's contacts\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/contacts/labels/`\n * \n * Alternate route: `/legacy/characters/{character_id}/contacts/labels/`\n * \n * Alternate route: `/v1/characters/{character_id}/contacts/labels/`\n * \n * ---\n * This route is cached for up to 300 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A list of contact labels\n */\nexport function get_characters_character_id_contacts_labels(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_contacts_labelsOperation, parameters)\n}\n\n/**\n * Return contacts of a corporation\n * \n * ---\n * Alternate route: `/dev/corporations/{corporation_id}/contacts/`\n * \n * Alternate route: `/v2/corporations/{corporation_id}/contacts/`\n * \n * ---\n * This route is cached for up to 300 seconds\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.page] Which page of results to return\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A list of contacts\n */\nexport function get_corporations_corporation_id_contacts(corporationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      corporation_id: corporationId\n    },\n    query: {\n      datasource: options.datasource,\n      page: options.page,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_corporations_corporation_id_contactsOperation, parameters)\n}\n\n/**\n * Return custom labels for a corporation's contacts\n * \n * ---\n * Alternate route: `/dev/corporations/{corporation_id}/contacts/labels/`\n * \n * Alternate route: `/legacy/corporations/{corporation_id}/contacts/labels/`\n * \n * Alternate route: `/v1/corporations/{corporation_id}/contacts/labels/`\n * \n * ---\n * This route is cached for up to 300 seconds\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A list of corporation contact labels\n */\nexport function get_corporations_corporation_id_contacts_labels(corporationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      corporation_id: corporationId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_corporations_corporation_id_contacts_labelsOperation, parameters)\n}\n\nconst get_alliances_alliance_id_contactsOperation = {\n  path: '/alliances/{alliance_id}/contacts/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-alliances.read_contacts.v1']\n    }\n  ]\n}\n\nconst get_alliances_alliance_id_contacts_labelsOperation = {\n  path: '/alliances/{alliance_id}/contacts/labels/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-alliances.read_contacts.v1']\n    }\n  ]\n}\n\nconst delete_characters_character_id_contactsOperation = {\n  path: '/characters/{character_id}/contacts/',\n  method: 'delete',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-characters.write_contacts.v1']\n    }\n  ]\n}\n\nconst get_characters_character_id_contactsOperation = {\n  path: '/characters/{character_id}/contacts/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-characters.read_contacts.v1']\n    }\n  ]\n}\n\nconst post_characters_character_id_contactsOperation = {\n  path: '/characters/{character_id}/contacts/',\n  method: 'post',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-characters.write_contacts.v1']\n    }\n  ]\n}\n\nconst put_characters_character_id_contactsOperation = {\n  path: '/characters/{character_id}/contacts/',\n  method: 'put',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-characters.write_contacts.v1']\n    }\n  ]\n}\n\nconst get_characters_character_id_contacts_labelsOperation = {\n  path: '/characters/{character_id}/contacts/labels/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-characters.read_contacts.v1']\n    }\n  ]\n}\n\nconst get_corporations_corporation_id_contactsOperation = {\n  path: '/corporations/{corporation_id}/contacts/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-corporations.read_contacts.v1']\n    }\n  ]\n}\n\nconst get_corporations_corporation_id_contacts_labelsOperation = {\n  path: '/corporations/{corporation_id}/contacts/labels/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-corporations.read_contacts.v1']\n    }\n  ]\n}\n",
    "static": true,
    "longname": "/Users/sebs/projects/opensource/es-next-modules/packages/esi/Contacts.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 77,
    "kind": "function",
    "name": "get_alliances_alliance_id_contacts",
    "memberof": "esi/Contacts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Contacts.js~get_alliances_alliance_id_contacts",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Contacts.js",
    "importStyle": "{get_alliances_alliance_id_contacts}",
    "description": "Return contacts of an alliance\n\n---\nAlternate route: `/dev/alliances/{alliance_id}/contacts/`\n\nAlternate route: `/v2/alliances/{alliance_id}/contacts/`\n\n---\nThis route is cached for up to 300 seconds",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "allianceId",
        "description": "An EVE alliance ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of contacts"
    }
  },
  {
    "__docId__": 78,
    "kind": "function",
    "name": "get_alliances_alliance_id_contacts_labels",
    "memberof": "esi/Contacts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Contacts.js~get_alliances_alliance_id_contacts_labels",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Contacts.js",
    "importStyle": "{get_alliances_alliance_id_contacts_labels}",
    "description": "Return custom labels for an alliance's contacts\n\n---\nAlternate route: `/dev/alliances/{alliance_id}/contacts/labels/`\n\nAlternate route: `/legacy/alliances/{alliance_id}/contacts/labels/`\n\nAlternate route: `/v1/alliances/{alliance_id}/contacts/labels/`\n\n---\nThis route is cached for up to 300 seconds",
    "lineNumber": 62,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "allianceId",
        "description": "An EVE alliance ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of alliance contact labels"
    }
  },
  {
    "__docId__": 79,
    "kind": "function",
    "name": "delete_characters_character_id_contacts",
    "memberof": "esi/Contacts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Contacts.js~delete_characters_character_id_contacts",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Contacts.js",
    "importStyle": "{delete_characters_character_id_contacts}",
    "description": "Bulk delete contacts\n\n---\nAlternate route: `/dev/characters/{character_id}/contacts/`\n\nAlternate route: `/v2/characters/{character_id}/contacts/`",
    "lineNumber": 94,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "number[]"
        ],
        "spread": false,
        "optional": false,
        "name": "contactIds",
        "description": "A list of contacts to delete"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Contacts deleted"
    }
  },
  {
    "__docId__": 80,
    "kind": "function",
    "name": "get_characters_character_id_contacts",
    "memberof": "esi/Contacts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Contacts.js~get_characters_character_id_contacts",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Contacts.js",
    "importStyle": "{get_characters_character_id_contacts}",
    "description": "Return contacts of a character\n\n---\nAlternate route: `/dev/characters/{character_id}/contacts/`\n\nAlternate route: `/v2/characters/{character_id}/contacts/`\n\n---\nThis route is cached for up to 300 seconds",
    "lineNumber": 128,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of contacts"
    }
  },
  {
    "__docId__": 81,
    "kind": "function",
    "name": "post_characters_character_id_contacts",
    "memberof": "esi/Contacts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Contacts.js~post_characters_character_id_contacts",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Contacts.js",
    "importStyle": "{post_characters_character_id_contacts}",
    "description": "Bulk add contacts with same settings\n\n---\nAlternate route: `/dev/characters/{character_id}/contacts/`\n\nAlternate route: `/v2/characters/{character_id}/contacts/`",
    "lineNumber": 163,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "standing",
        "description": "Standing for the contact"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "number[]"
        ],
        "spread": false,
        "optional": true,
        "name": "options.labelIds",
        "description": "Add custom labels to the new contact"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.watched",
        "description": "Whether the contact should be watched, note this is only effective on characters"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of contact ids that successfully created"
    }
  },
  {
    "__docId__": 82,
    "kind": "function",
    "name": "put_characters_character_id_contacts",
    "memberof": "esi/Contacts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Contacts.js~put_characters_character_id_contacts",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Contacts.js",
    "importStyle": "{put_characters_character_id_contacts}",
    "description": "Bulk edit contacts with same settings\n\n---\nAlternate route: `/dev/characters/{character_id}/contacts/`\n\nAlternate route: `/v2/characters/{character_id}/contacts/`",
    "lineNumber": 197,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "standing",
        "description": "Standing for the contact"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "number[]"
        ],
        "spread": false,
        "optional": true,
        "name": "options.labelIds",
        "description": "Add custom labels to the contact"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.watched",
        "description": "Whether the contact should be watched, note this is only effective on characters"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Contacts updated"
    }
  },
  {
    "__docId__": 83,
    "kind": "function",
    "name": "get_characters_character_id_contacts_labels",
    "memberof": "esi/Contacts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Contacts.js~get_characters_character_id_contacts_labels",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Contacts.js",
    "importStyle": "{get_characters_character_id_contacts_labels}",
    "description": "Return custom labels for a character's contacts\n\n---\nAlternate route: `/dev/characters/{character_id}/contacts/labels/`\n\nAlternate route: `/legacy/characters/{character_id}/contacts/labels/`\n\nAlternate route: `/v1/characters/{character_id}/contacts/labels/`\n\n---\nThis route is cached for up to 300 seconds",
    "lineNumber": 234,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of contact labels"
    }
  },
  {
    "__docId__": 84,
    "kind": "function",
    "name": "get_corporations_corporation_id_contacts",
    "memberof": "esi/Contacts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Contacts.js~get_corporations_corporation_id_contacts",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Contacts.js",
    "importStyle": "{get_corporations_corporation_id_contacts}",
    "description": "Return contacts of a corporation\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/contacts/`\n\nAlternate route: `/v2/corporations/{corporation_id}/contacts/`\n\n---\nThis route is cached for up to 300 seconds",
    "lineNumber": 270,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of contacts"
    }
  },
  {
    "__docId__": 85,
    "kind": "function",
    "name": "get_corporations_corporation_id_contacts_labels",
    "memberof": "esi/Contacts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Contacts.js~get_corporations_corporation_id_contacts_labels",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Contacts.js",
    "importStyle": "{get_corporations_corporation_id_contacts_labels}",
    "description": "Return custom labels for a corporation's contacts\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/contacts/labels/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/contacts/labels/`\n\nAlternate route: `/v1/corporations/{corporation_id}/contacts/labels/`\n\n---\nThis route is cached for up to 300 seconds",
    "lineNumber": 308,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of corporation contact labels"
    }
  },
  {
    "__docId__": 86,
    "kind": "variable",
    "name": "get_alliances_alliance_id_contactsOperation",
    "memberof": "esi/Contacts.js",
    "static": true,
    "longname": "esi/Contacts.js~get_alliances_alliance_id_contactsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Contacts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 325,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 87,
    "kind": "variable",
    "name": "get_alliances_alliance_id_contacts_labelsOperation",
    "memberof": "esi/Contacts.js",
    "static": true,
    "longname": "esi/Contacts.js~get_alliances_alliance_id_contacts_labelsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Contacts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 336,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 88,
    "kind": "variable",
    "name": "delete_characters_character_id_contactsOperation",
    "memberof": "esi/Contacts.js",
    "static": true,
    "longname": "esi/Contacts.js~delete_characters_character_id_contactsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Contacts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 347,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 89,
    "kind": "variable",
    "name": "get_characters_character_id_contactsOperation",
    "memberof": "esi/Contacts.js",
    "static": true,
    "longname": "esi/Contacts.js~get_characters_character_id_contactsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Contacts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 358,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 90,
    "kind": "variable",
    "name": "post_characters_character_id_contactsOperation",
    "memberof": "esi/Contacts.js",
    "static": true,
    "longname": "esi/Contacts.js~post_characters_character_id_contactsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Contacts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 369,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 91,
    "kind": "variable",
    "name": "put_characters_character_id_contactsOperation",
    "memberof": "esi/Contacts.js",
    "static": true,
    "longname": "esi/Contacts.js~put_characters_character_id_contactsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Contacts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 380,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 92,
    "kind": "variable",
    "name": "get_characters_character_id_contacts_labelsOperation",
    "memberof": "esi/Contacts.js",
    "static": true,
    "longname": "esi/Contacts.js~get_characters_character_id_contacts_labelsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Contacts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 391,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 93,
    "kind": "variable",
    "name": "get_corporations_corporation_id_contactsOperation",
    "memberof": "esi/Contacts.js",
    "static": true,
    "longname": "esi/Contacts.js~get_corporations_corporation_id_contactsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Contacts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 402,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 94,
    "kind": "variable",
    "name": "get_corporations_corporation_id_contacts_labelsOperation",
    "memberof": "esi/Contacts.js",
    "static": true,
    "longname": "esi/Contacts.js~get_corporations_corporation_id_contacts_labelsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Contacts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 413,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 95,
    "kind": "file",
    "name": "esi/Contracts.js",
    "content": "/** @module Contracts */\n// Auto-generated, edits will be overwritten\nimport * as gateway from './gateway'\n\n/**\n * Returns contracts available to a character, only if the character is issuer, acceptor or assignee. Only returns contracts no older than 30 days, or if the status is \"in_progress\".\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/contracts/`\n * \n * Alternate route: `/legacy/characters/{character_id}/contracts/`\n * \n * Alternate route: `/v1/characters/{character_id}/contracts/`\n * \n * ---\n * This route is cached for up to 300 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.page] Which page of results to return\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A list of contracts\n */\nexport function get_characters_character_id_contracts(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      page: options.page,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_contractsOperation, parameters)\n}\n\n/**\n * Lists bids on a particular auction contract\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/contracts/{contract_id}/bids/`\n * \n * Alternate route: `/legacy/characters/{character_id}/contracts/{contract_id}/bids/`\n * \n * Alternate route: `/v1/characters/{character_id}/contracts/{contract_id}/bids/`\n * \n * ---\n * This route is cached for up to 300 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {number} contractId ID of a contract\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A list of bids\n */\nexport function get_characters_character_id_contracts_contract_id_bids(characterId, contractId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId,\n      contract_id: contractId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_contracts_contract_id_bidsOperation, parameters)\n}\n\n/**\n * Lists items of a particular contract\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/contracts/{contract_id}/items/`\n * \n * Alternate route: `/legacy/characters/{character_id}/contracts/{contract_id}/items/`\n * \n * Alternate route: `/v1/characters/{character_id}/contracts/{contract_id}/items/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {number} contractId ID of a contract\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A list of items in this contract\n */\nexport function get_characters_character_id_contracts_contract_id_items(characterId, contractId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId,\n      contract_id: contractId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_contracts_contract_id_itemsOperation, parameters)\n}\n\n/**\n * Lists bids on a public auction contract\n * \n * ---\n * Alternate route: `/dev/contracts/public/bids/{contract_id}/`\n * \n * Alternate route: `/legacy/contracts/public/bids/{contract_id}/`\n * \n * Alternate route: `/v1/contracts/public/bids/{contract_id}/`\n * \n * ---\n * This route is cached for up to 300 seconds\n * \n * @param {number} contractId ID of a contract\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.page] Which page of results to return\n * @return {Promise<object>} A list of bids\n */\nexport function get_contracts_public_bids_contract_id(contractId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      contract_id: contractId\n    },\n    query: {\n      datasource: options.datasource,\n      page: options.page\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_contracts_public_bids_contract_idOperation, parameters)\n}\n\n/**\n * Lists items of a public contract\n * \n * ---\n * Alternate route: `/dev/contracts/public/items/{contract_id}/`\n * \n * Alternate route: `/legacy/contracts/public/items/{contract_id}/`\n * \n * Alternate route: `/v1/contracts/public/items/{contract_id}/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {number} contractId ID of a contract\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.page] Which page of results to return\n * @return {Promise<object>} A list of items in this contract\n */\nexport function get_contracts_public_items_contract_id(contractId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      contract_id: contractId\n    },\n    query: {\n      datasource: options.datasource,\n      page: options.page\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_contracts_public_items_contract_idOperation, parameters)\n}\n\n/**\n * Returns a paginated list of all public contracts in the given region\n * \n * ---\n * Alternate route: `/dev/contracts/public/{region_id}/`\n * \n * Alternate route: `/legacy/contracts/public/{region_id}/`\n * \n * Alternate route: `/v1/contracts/public/{region_id}/`\n * \n * ---\n * This route is cached for up to 1800 seconds\n * \n * @param {number} regionId An EVE region id\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.page] Which page of results to return\n * @return {Promise<object>} A list of contracts\n */\nexport function get_contracts_public_region_id(regionId, options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource,\n      page: options.page\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    },\n    path: {\n      region_id: regionId\n    }\n  }\n  return gateway.request(get_contracts_public_region_idOperation, parameters)\n}\n\n/**\n * Returns contracts available to a corporation, only if the corporation is issuer, acceptor or assignee. Only returns contracts no older than 30 days, or if the status is \"in_progress\".\n * \n * ---\n * Alternate route: `/dev/corporations/{corporation_id}/contracts/`\n * \n * Alternate route: `/legacy/corporations/{corporation_id}/contracts/`\n * \n * Alternate route: `/v1/corporations/{corporation_id}/contracts/`\n * \n * ---\n * This route is cached for up to 300 seconds\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.page] Which page of results to return\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A list of contracts\n */\nexport function get_corporations_corporation_id_contracts(corporationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      corporation_id: corporationId\n    },\n    query: {\n      datasource: options.datasource,\n      page: options.page,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_corporations_corporation_id_contractsOperation, parameters)\n}\n\n/**\n * Lists bids on a particular auction contract\n * \n * ---\n * Alternate route: `/dev/corporations/{corporation_id}/contracts/{contract_id}/bids/`\n * \n * Alternate route: `/legacy/corporations/{corporation_id}/contracts/{contract_id}/bids/`\n * \n * Alternate route: `/v1/corporations/{corporation_id}/contracts/{contract_id}/bids/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {number} contractId ID of a contract\n * @param {number} corporationId An EVE corporation ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.page] Which page of results to return\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A list of bids\n */\nexport function get_corporations_corporation_id_contracts_contract_id_bids(contractId, corporationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      contract_id: contractId,\n      corporation_id: corporationId\n    },\n    query: {\n      datasource: options.datasource,\n      page: options.page,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_corporations_corporation_id_contracts_contract_id_bidsOperation, parameters)\n}\n\n/**\n * Lists items of a particular contract\n * \n * ---\n * Alternate route: `/dev/corporations/{corporation_id}/contracts/{contract_id}/items/`\n * \n * Alternate route: `/legacy/corporations/{corporation_id}/contracts/{contract_id}/items/`\n * \n * Alternate route: `/v1/corporations/{corporation_id}/contracts/{contract_id}/items/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {number} contractId ID of a contract\n * @param {number} corporationId An EVE corporation ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A list of items in this contract\n */\nexport function get_corporations_corporation_id_contracts_contract_id_items(contractId, corporationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      contract_id: contractId,\n      corporation_id: corporationId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_corporations_corporation_id_contracts_contract_id_itemsOperation, parameters)\n}\n\nconst get_characters_character_id_contractsOperation = {\n  path: '/characters/{character_id}/contracts/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-contracts.read_character_contracts.v1']\n    }\n  ]\n}\n\nconst get_characters_character_id_contracts_contract_id_bidsOperation = {\n  path: '/characters/{character_id}/contracts/{contract_id}/bids/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-contracts.read_character_contracts.v1']\n    }\n  ]\n}\n\nconst get_characters_character_id_contracts_contract_id_itemsOperation = {\n  path: '/characters/{character_id}/contracts/{contract_id}/items/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-contracts.read_character_contracts.v1']\n    }\n  ]\n}\n\nconst get_contracts_public_bids_contract_idOperation = {\n  path: '/contracts/public/bids/{contract_id}/',\n  method: 'get'\n}\n\nconst get_contracts_public_items_contract_idOperation = {\n  path: '/contracts/public/items/{contract_id}/',\n  method: 'get'\n}\n\nconst get_contracts_public_region_idOperation = {\n  path: '/contracts/public/{region_id}/',\n  method: 'get'\n}\n\nconst get_corporations_corporation_id_contractsOperation = {\n  path: '/corporations/{corporation_id}/contracts/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-contracts.read_corporation_contracts.v1']\n    }\n  ]\n}\n\nconst get_corporations_corporation_id_contracts_contract_id_bidsOperation = {\n  path: '/corporations/{corporation_id}/contracts/{contract_id}/bids/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-contracts.read_corporation_contracts.v1']\n    }\n  ]\n}\n\nconst get_corporations_corporation_id_contracts_contract_id_itemsOperation = {\n  path: '/corporations/{corporation_id}/contracts/{contract_id}/items/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-contracts.read_corporation_contracts.v1']\n    }\n  ]\n}\n",
    "static": true,
    "longname": "/Users/sebs/projects/opensource/es-next-modules/packages/esi/Contracts.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 96,
    "kind": "function",
    "name": "get_characters_character_id_contracts",
    "memberof": "esi/Contracts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Contracts.js~get_characters_character_id_contracts",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Contracts.js",
    "importStyle": "{get_characters_character_id_contracts}",
    "description": "Returns contracts available to a character, only if the character is issuer, acceptor or assignee. Only returns contracts no older than 30 days, or if the status is \"in_progress\".\n\n---\nAlternate route: `/dev/characters/{character_id}/contracts/`\n\nAlternate route: `/legacy/characters/{character_id}/contracts/`\n\nAlternate route: `/v1/characters/{character_id}/contracts/`\n\n---\nThis route is cached for up to 300 seconds",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of contracts"
    }
  },
  {
    "__docId__": 97,
    "kind": "function",
    "name": "get_characters_character_id_contracts_contract_id_bids",
    "memberof": "esi/Contracts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Contracts.js~get_characters_character_id_contracts_contract_id_bids",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Contracts.js",
    "importStyle": "{get_characters_character_id_contracts_contract_id_bids}",
    "description": "Lists bids on a particular auction contract\n\n---\nAlternate route: `/dev/characters/{character_id}/contracts/{contract_id}/bids/`\n\nAlternate route: `/legacy/characters/{character_id}/contracts/{contract_id}/bids/`\n\nAlternate route: `/v1/characters/{character_id}/contracts/{contract_id}/bids/`\n\n---\nThis route is cached for up to 300 seconds",
    "lineNumber": 65,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "contractId",
        "description": "ID of a contract"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of bids"
    }
  },
  {
    "__docId__": 98,
    "kind": "function",
    "name": "get_characters_character_id_contracts_contract_id_items",
    "memberof": "esi/Contracts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Contracts.js~get_characters_character_id_contracts_contract_id_items",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Contracts.js",
    "importStyle": "{get_characters_character_id_contracts_contract_id_items}",
    "description": "Lists items of a particular contract\n\n---\nAlternate route: `/dev/characters/{character_id}/contracts/{contract_id}/items/`\n\nAlternate route: `/legacy/characters/{character_id}/contracts/{contract_id}/items/`\n\nAlternate route: `/v1/characters/{character_id}/contracts/{contract_id}/items/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 104,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "contractId",
        "description": "ID of a contract"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of items in this contract"
    }
  },
  {
    "__docId__": 99,
    "kind": "function",
    "name": "get_contracts_public_bids_contract_id",
    "memberof": "esi/Contracts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Contracts.js~get_contracts_public_bids_contract_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Contracts.js",
    "importStyle": "{get_contracts_public_bids_contract_id}",
    "description": "Lists bids on a public auction contract\n\n---\nAlternate route: `/dev/contracts/public/bids/{contract_id}/`\n\nAlternate route: `/legacy/contracts/public/bids/{contract_id}/`\n\nAlternate route: `/v1/contracts/public/bids/{contract_id}/`\n\n---\nThis route is cached for up to 300 seconds",
    "lineNumber": 142,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "contractId",
        "description": "ID of a contract"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of bids"
    }
  },
  {
    "__docId__": 100,
    "kind": "function",
    "name": "get_contracts_public_items_contract_id",
    "memberof": "esi/Contracts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Contracts.js~get_contracts_public_items_contract_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Contracts.js",
    "importStyle": "{get_contracts_public_items_contract_id}",
    "description": "Lists items of a public contract\n\n---\nAlternate route: `/dev/contracts/public/items/{contract_id}/`\n\nAlternate route: `/legacy/contracts/public/items/{contract_id}/`\n\nAlternate route: `/v1/contracts/public/items/{contract_id}/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 179,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "contractId",
        "description": "ID of a contract"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of items in this contract"
    }
  },
  {
    "__docId__": 101,
    "kind": "function",
    "name": "get_contracts_public_region_id",
    "memberof": "esi/Contracts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Contracts.js~get_contracts_public_region_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Contracts.js",
    "importStyle": "{get_contracts_public_region_id}",
    "description": "Returns a paginated list of all public contracts in the given region\n\n---\nAlternate route: `/dev/contracts/public/{region_id}/`\n\nAlternate route: `/legacy/contracts/public/{region_id}/`\n\nAlternate route: `/v1/contracts/public/{region_id}/`\n\n---\nThis route is cached for up to 1800 seconds",
    "lineNumber": 216,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "regionId",
        "description": "An EVE region id"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of contracts"
    }
  },
  {
    "__docId__": 102,
    "kind": "function",
    "name": "get_corporations_corporation_id_contracts",
    "memberof": "esi/Contracts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Contracts.js~get_corporations_corporation_id_contracts",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Contracts.js",
    "importStyle": "{get_corporations_corporation_id_contracts}",
    "description": "Returns contracts available to a corporation, only if the corporation is issuer, acceptor or assignee. Only returns contracts no older than 30 days, or if the status is \"in_progress\".\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/contracts/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/contracts/`\n\nAlternate route: `/v1/corporations/{corporation_id}/contracts/`\n\n---\nThis route is cached for up to 300 seconds",
    "lineNumber": 254,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of contracts"
    }
  },
  {
    "__docId__": 103,
    "kind": "function",
    "name": "get_corporations_corporation_id_contracts_contract_id_bids",
    "memberof": "esi/Contracts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Contracts.js~get_corporations_corporation_id_contracts_contract_id_bids",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Contracts.js",
    "importStyle": "{get_corporations_corporation_id_contracts_contract_id_bids}",
    "description": "Lists bids on a particular auction contract\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/contracts/{contract_id}/bids/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/contracts/{contract_id}/bids/`\n\nAlternate route: `/v1/corporations/{corporation_id}/contracts/{contract_id}/bids/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 294,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "contractId",
        "description": "ID of a contract"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of bids"
    }
  },
  {
    "__docId__": 104,
    "kind": "function",
    "name": "get_corporations_corporation_id_contracts_contract_id_items",
    "memberof": "esi/Contracts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Contracts.js~get_corporations_corporation_id_contracts_contract_id_items",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Contracts.js",
    "importStyle": "{get_corporations_corporation_id_contracts_contract_id_items}",
    "description": "Lists items of a particular contract\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/contracts/{contract_id}/items/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/contracts/{contract_id}/items/`\n\nAlternate route: `/v1/corporations/{corporation_id}/contracts/{contract_id}/items/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 334,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "contractId",
        "description": "ID of a contract"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of items in this contract"
    }
  },
  {
    "__docId__": 105,
    "kind": "variable",
    "name": "get_characters_character_id_contractsOperation",
    "memberof": "esi/Contracts.js",
    "static": true,
    "longname": "esi/Contracts.js~get_characters_character_id_contractsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Contracts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 352,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 106,
    "kind": "variable",
    "name": "get_characters_character_id_contracts_contract_id_bidsOperation",
    "memberof": "esi/Contracts.js",
    "static": true,
    "longname": "esi/Contracts.js~get_characters_character_id_contracts_contract_id_bidsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Contracts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 363,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 107,
    "kind": "variable",
    "name": "get_characters_character_id_contracts_contract_id_itemsOperation",
    "memberof": "esi/Contracts.js",
    "static": true,
    "longname": "esi/Contracts.js~get_characters_character_id_contracts_contract_id_itemsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Contracts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 374,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 108,
    "kind": "variable",
    "name": "get_contracts_public_bids_contract_idOperation",
    "memberof": "esi/Contracts.js",
    "static": true,
    "longname": "esi/Contracts.js~get_contracts_public_bids_contract_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Contracts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 385,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 109,
    "kind": "variable",
    "name": "get_contracts_public_items_contract_idOperation",
    "memberof": "esi/Contracts.js",
    "static": true,
    "longname": "esi/Contracts.js~get_contracts_public_items_contract_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Contracts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 390,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 110,
    "kind": "variable",
    "name": "get_contracts_public_region_idOperation",
    "memberof": "esi/Contracts.js",
    "static": true,
    "longname": "esi/Contracts.js~get_contracts_public_region_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Contracts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 395,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 111,
    "kind": "variable",
    "name": "get_corporations_corporation_id_contractsOperation",
    "memberof": "esi/Contracts.js",
    "static": true,
    "longname": "esi/Contracts.js~get_corporations_corporation_id_contractsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Contracts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 400,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 112,
    "kind": "variable",
    "name": "get_corporations_corporation_id_contracts_contract_id_bidsOperation",
    "memberof": "esi/Contracts.js",
    "static": true,
    "longname": "esi/Contracts.js~get_corporations_corporation_id_contracts_contract_id_bidsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Contracts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 411,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 113,
    "kind": "variable",
    "name": "get_corporations_corporation_id_contracts_contract_id_itemsOperation",
    "memberof": "esi/Contracts.js",
    "static": true,
    "longname": "esi/Contracts.js~get_corporations_corporation_id_contracts_contract_id_itemsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Contracts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 422,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 114,
    "kind": "file",
    "name": "esi/Corporation.js",
    "content": "/** @module Corporation */\n// Auto-generated, edits will be overwritten\nimport * as gateway from './gateway'\n\n/**\n * Get a list of npc corporations\n * \n * ---\n * Alternate route: `/dev/corporations/npccorps/`\n * \n * Alternate route: `/legacy/corporations/npccorps/`\n * \n * Alternate route: `/v1/corporations/npccorps/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} A list of npc corporation ids\n */\nexport function get_corporations_npccorps(options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_corporations_npccorpsOperation, parameters)\n}\n\n/**\n * Public information about a corporation\n * \n * ---\n * Alternate route: `/dev/corporations/{corporation_id}/`\n * \n * Alternate route: `/v4/corporations/{corporation_id}/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} Public information about a corporation\n */\nexport function get_corporations_corporation_id(corporationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      corporation_id: corporationId\n    },\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_corporations_corporation_idOperation, parameters)\n}\n\n/**\n * Get a list of all the alliances a corporation has been a member of\n * \n * ---\n * Alternate route: `/dev/corporations/{corporation_id}/alliancehistory/`\n * \n * Alternate route: `/v2/corporations/{corporation_id}/alliancehistory/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} Alliance history for the given corporation\n */\nexport function get_corporations_corporation_id_alliancehistory(corporationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      corporation_id: corporationId\n    },\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_corporations_corporation_id_alliancehistoryOperation, parameters)\n}\n\n/**\n * Returns a list of blueprints the corporation owns\n * \n * ---\n * Alternate route: `/dev/corporations/{corporation_id}/blueprints/`\n * \n * Alternate route: `/v2/corporations/{corporation_id}/blueprints/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * ---\n * Requires one of the following EVE corporation role(s): Director\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.page] Which page of results to return\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} List of corporation blueprints\n */\nexport function get_corporations_corporation_id_blueprints(corporationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      corporation_id: corporationId\n    },\n    query: {\n      datasource: options.datasource,\n      page: options.page,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_corporations_corporation_id_blueprintsOperation, parameters)\n}\n\n/**\n * Returns logs recorded in the past seven days from all audit log secure containers (ALSC) owned by a given corporation\n * \n * ---\n * Alternate route: `/dev/corporations/{corporation_id}/containers/logs/`\n * \n * Alternate route: `/v2/corporations/{corporation_id}/containers/logs/`\n * \n * ---\n * This route is cached for up to 600 seconds\n * \n * ---\n * Requires one of the following EVE corporation role(s): Director\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.page] Which page of results to return\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} List of corporation ALSC logs\n */\nexport function get_corporations_corporation_id_containers_logs(corporationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      corporation_id: corporationId\n    },\n    query: {\n      datasource: options.datasource,\n      page: options.page,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_corporations_corporation_id_containers_logsOperation, parameters)\n}\n\n/**\n * Return corporation hangar and wallet division names, only show if a division is not using the default name\n * \n * ---\n * Alternate route: `/dev/corporations/{corporation_id}/divisions/`\n * \n * Alternate route: `/legacy/corporations/{corporation_id}/divisions/`\n * \n * Alternate route: `/v1/corporations/{corporation_id}/divisions/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * ---\n * Requires one of the following EVE corporation role(s): Director\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} List of corporation division names\n */\nexport function get_corporations_corporation_id_divisions(corporationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      corporation_id: corporationId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_corporations_corporation_id_divisionsOperation, parameters)\n}\n\n/**\n * Return a corporation's facilities\n * \n * ---\n * Alternate route: `/dev/corporations/{corporation_id}/facilities/`\n * \n * Alternate route: `/legacy/corporations/{corporation_id}/facilities/`\n * \n * Alternate route: `/v1/corporations/{corporation_id}/facilities/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * ---\n * Requires one of the following EVE corporation role(s): Factory_Manager\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} List of corporation facilities\n */\nexport function get_corporations_corporation_id_facilities(corporationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      corporation_id: corporationId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_corporations_corporation_id_facilitiesOperation, parameters)\n}\n\n/**\n * Get the icon urls for a corporation\n * \n * ---\n * Alternate route: `/dev/corporations/{corporation_id}/icons/`\n * \n * Alternate route: `/legacy/corporations/{corporation_id}/icons/`\n * \n * Alternate route: `/v1/corporations/{corporation_id}/icons/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} Urls for icons for the given corporation id and server\n */\nexport function get_corporations_corporation_id_icons(corporationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      corporation_id: corporationId\n    },\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_corporations_corporation_id_iconsOperation, parameters)\n}\n\n/**\n * Returns a corporation's medals\n * \n * ---\n * Alternate route: `/dev/corporations/{corporation_id}/medals/`\n * \n * Alternate route: `/legacy/corporations/{corporation_id}/medals/`\n * \n * Alternate route: `/v1/corporations/{corporation_id}/medals/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.page] Which page of results to return\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A list of medals\n */\nexport function get_corporations_corporation_id_medals(corporationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      corporation_id: corporationId\n    },\n    query: {\n      datasource: options.datasource,\n      page: options.page,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_corporations_corporation_id_medalsOperation, parameters)\n}\n\n/**\n * Returns medals issued by a corporation\n * \n * ---\n * Alternate route: `/dev/corporations/{corporation_id}/medals/issued/`\n * \n * Alternate route: `/legacy/corporations/{corporation_id}/medals/issued/`\n * \n * Alternate route: `/v1/corporations/{corporation_id}/medals/issued/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * ---\n * Requires one of the following EVE corporation role(s): Director\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.page] Which page of results to return\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A list of issued medals\n */\nexport function get_corporations_corporation_id_medals_issued(corporationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      corporation_id: corporationId\n    },\n    query: {\n      datasource: options.datasource,\n      page: options.page,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_corporations_corporation_id_medals_issuedOperation, parameters)\n}\n\n/**\n * Return the current member list of a corporation, the token's character need to be a member of the corporation.\n * \n * ---\n * Alternate route: `/dev/corporations/{corporation_id}/members/`\n * \n * Alternate route: `/v3/corporations/{corporation_id}/members/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} List of member character IDs\n */\nexport function get_corporations_corporation_id_members(corporationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      corporation_id: corporationId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_corporations_corporation_id_membersOperation, parameters)\n}\n\n/**\n * Return a corporation's member limit, not including CEO himself\n * \n * ---\n * Alternate route: `/dev/corporations/{corporation_id}/members/limit/`\n * \n * Alternate route: `/legacy/corporations/{corporation_id}/members/limit/`\n * \n * Alternate route: `/v1/corporations/{corporation_id}/members/limit/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * ---\n * Requires one of the following EVE corporation role(s): Director\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} The corporation's member limit\n */\nexport function get_corporations_corporation_id_members_limit(corporationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      corporation_id: corporationId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_corporations_corporation_id_members_limitOperation, parameters)\n}\n\n/**\n * Returns a corporation's members' titles\n * \n * ---\n * Alternate route: `/dev/corporations/{corporation_id}/members/titles/`\n * \n * Alternate route: `/legacy/corporations/{corporation_id}/members/titles/`\n * \n * Alternate route: `/v1/corporations/{corporation_id}/members/titles/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * ---\n * Requires one of the following EVE corporation role(s): Director\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A list of members and theirs titles\n */\nexport function get_corporations_corporation_id_members_titles(corporationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      corporation_id: corporationId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_corporations_corporation_id_members_titlesOperation, parameters)\n}\n\n/**\n * Returns additional information about a corporation's members which helps tracking their activities\n * \n * ---\n * Alternate route: `/dev/corporations/{corporation_id}/membertracking/`\n * \n * Alternate route: `/legacy/corporations/{corporation_id}/membertracking/`\n * \n * Alternate route: `/v1/corporations/{corporation_id}/membertracking/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * ---\n * Requires one of the following EVE corporation role(s): Director\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} List of member character IDs\n */\nexport function get_corporations_corporation_id_membertracking(corporationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      corporation_id: corporationId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_corporations_corporation_id_membertrackingOperation, parameters)\n}\n\n/**\n * Return the roles of all members if the character has the personnel manager role or any grantable role.\n * \n * ---\n * Alternate route: `/dev/corporations/{corporation_id}/roles/`\n * \n * Alternate route: `/legacy/corporations/{corporation_id}/roles/`\n * \n * Alternate route: `/v1/corporations/{corporation_id}/roles/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} List of member character ID's and roles\n */\nexport function get_corporations_corporation_id_roles(corporationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      corporation_id: corporationId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_corporations_corporation_id_rolesOperation, parameters)\n}\n\n/**\n * Return how roles have changed for a coporation's members, up to a month\n * \n * ---\n * Alternate route: `/dev/corporations/{corporation_id}/roles/history/`\n * \n * Alternate route: `/legacy/corporations/{corporation_id}/roles/history/`\n * \n * Alternate route: `/v1/corporations/{corporation_id}/roles/history/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * ---\n * Requires one of the following EVE corporation role(s): Director\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.page] Which page of results to return\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} List of role changes\n */\nexport function get_corporations_corporation_id_roles_history(corporationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      corporation_id: corporationId\n    },\n    query: {\n      datasource: options.datasource,\n      page: options.page,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_corporations_corporation_id_roles_historyOperation, parameters)\n}\n\n/**\n * Return the current shareholders of a corporation.\n * \n * ---\n * Alternate route: `/dev/corporations/{corporation_id}/shareholders/`\n * \n * Alternate route: `/legacy/corporations/{corporation_id}/shareholders/`\n * \n * Alternate route: `/v1/corporations/{corporation_id}/shareholders/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * ---\n * Requires one of the following EVE corporation role(s): Director\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.page] Which page of results to return\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} List of shareholders\n */\nexport function get_corporations_corporation_id_shareholders(corporationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      corporation_id: corporationId\n    },\n    query: {\n      datasource: options.datasource,\n      page: options.page,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_corporations_corporation_id_shareholdersOperation, parameters)\n}\n\n/**\n * Return corporation standings from agents, NPC corporations, and factions\n * \n * ---\n * Alternate route: `/dev/corporations/{corporation_id}/standings/`\n * \n * Alternate route: `/legacy/corporations/{corporation_id}/standings/`\n * \n * Alternate route: `/v1/corporations/{corporation_id}/standings/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.page] Which page of results to return\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A list of standings\n */\nexport function get_corporations_corporation_id_standings(corporationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      corporation_id: corporationId\n    },\n    query: {\n      datasource: options.datasource,\n      page: options.page,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_corporations_corporation_id_standingsOperation, parameters)\n}\n\n/**\n * Returns list of corporation starbases (POSes)\n * \n * ---\n * Alternate route: `/dev/corporations/{corporation_id}/starbases/`\n * \n * Alternate route: `/legacy/corporations/{corporation_id}/starbases/`\n * \n * Alternate route: `/v1/corporations/{corporation_id}/starbases/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * ---\n * Requires one of the following EVE corporation role(s): Director\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.page] Which page of results to return\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} List of starbases (POSes)\n */\nexport function get_corporations_corporation_id_starbases(corporationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      corporation_id: corporationId\n    },\n    query: {\n      datasource: options.datasource,\n      page: options.page,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_corporations_corporation_id_starbasesOperation, parameters)\n}\n\n/**\n * Returns various settings and fuels of a starbase (POS)\n * \n * ---\n * Alternate route: `/dev/corporations/{corporation_id}/starbases/{starbase_id}/`\n * \n * Alternate route: `/legacy/corporations/{corporation_id}/starbases/{starbase_id}/`\n * \n * Alternate route: `/v1/corporations/{corporation_id}/starbases/{starbase_id}/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * ---\n * Requires one of the following EVE corporation role(s): Director\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {number} starbaseId An EVE starbase (POS) ID\n * @param {number} systemId The solar system this starbase (POS) is located in,\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} List of starbases (POSes)\n */\nexport function get_corporations_corporation_id_starbases_starbase_id(corporationId, starbaseId, systemId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      corporation_id: corporationId,\n      starbase_id: starbaseId\n    },\n    query: {\n      datasource: options.datasource,\n      system_id: systemId,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_corporations_corporation_id_starbases_starbase_idOperation, parameters)\n}\n\n/**\n * Get a list of corporation structures. This route's version includes the changes to structures detailed in this blog: https://www.eveonline.com/article/upwell-2.0-structures-changes-coming-on-february-13th\n * \n * ---\n * Alternate route: `/dev/corporations/{corporation_id}/structures/`\n * \n * Alternate route: `/v2/corporations/{corporation_id}/structures/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * ---\n * Requires one of the following EVE corporation role(s): Station_Manager\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {object} options Optional options\n * @param {string} [options.AcceptLanguage] Language to use in the response\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.language] Language to use in the response, takes precedence over Accept-Language\n * @param {number} [options.page] Which page of results to return\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} List of corporation structures' information\n */\nexport function get_corporations_corporation_id_structures(corporationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    header: {\n      'Accept-Language': options.AcceptLanguage,\n      'If-None-Match': options.IfNoneMatch\n    },\n    path: {\n      corporation_id: corporationId\n    },\n    query: {\n      datasource: options.datasource,\n      language: options.language,\n      page: options.page,\n      token: options.token\n    }\n  }\n  return gateway.request(get_corporations_corporation_id_structuresOperation, parameters)\n}\n\n/**\n * Returns a corporation's titles\n * \n * ---\n * Alternate route: `/dev/corporations/{corporation_id}/titles/`\n * \n * Alternate route: `/legacy/corporations/{corporation_id}/titles/`\n * \n * Alternate route: `/v1/corporations/{corporation_id}/titles/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * ---\n * Requires one of the following EVE corporation role(s): Director\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A list of titles\n */\nexport function get_corporations_corporation_id_titles(corporationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      corporation_id: corporationId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_corporations_corporation_id_titlesOperation, parameters)\n}\n\nconst get_corporations_npccorpsOperation = {\n  path: '/corporations/npccorps/',\n  method: 'get'\n}\n\nconst get_corporations_corporation_idOperation = {\n  path: '/corporations/{corporation_id}/',\n  method: 'get'\n}\n\nconst get_corporations_corporation_id_alliancehistoryOperation = {\n  path: '/corporations/{corporation_id}/alliancehistory/',\n  method: 'get'\n}\n\nconst get_corporations_corporation_id_blueprintsOperation = {\n  path: '/corporations/{corporation_id}/blueprints/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-corporations.read_blueprints.v1']\n    }\n  ]\n}\n\nconst get_corporations_corporation_id_containers_logsOperation = {\n  path: '/corporations/{corporation_id}/containers/logs/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-corporations.read_container_logs.v1']\n    }\n  ]\n}\n\nconst get_corporations_corporation_id_divisionsOperation = {\n  path: '/corporations/{corporation_id}/divisions/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-corporations.read_divisions.v1']\n    }\n  ]\n}\n\nconst get_corporations_corporation_id_facilitiesOperation = {\n  path: '/corporations/{corporation_id}/facilities/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-corporations.read_facilities.v1']\n    }\n  ]\n}\n\nconst get_corporations_corporation_id_iconsOperation = {\n  path: '/corporations/{corporation_id}/icons/',\n  method: 'get'\n}\n\nconst get_corporations_corporation_id_medalsOperation = {\n  path: '/corporations/{corporation_id}/medals/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-corporations.read_medals.v1']\n    }\n  ]\n}\n\nconst get_corporations_corporation_id_medals_issuedOperation = {\n  path: '/corporations/{corporation_id}/medals/issued/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-corporations.read_medals.v1']\n    }\n  ]\n}\n\nconst get_corporations_corporation_id_membersOperation = {\n  path: '/corporations/{corporation_id}/members/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-corporations.read_corporation_membership.v1']\n    }\n  ]\n}\n\nconst get_corporations_corporation_id_members_limitOperation = {\n  path: '/corporations/{corporation_id}/members/limit/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-corporations.track_members.v1']\n    }\n  ]\n}\n\nconst get_corporations_corporation_id_members_titlesOperation = {\n  path: '/corporations/{corporation_id}/members/titles/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-corporations.read_titles.v1']\n    }\n  ]\n}\n\nconst get_corporations_corporation_id_membertrackingOperation = {\n  path: '/corporations/{corporation_id}/membertracking/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-corporations.track_members.v1']\n    }\n  ]\n}\n\nconst get_corporations_corporation_id_rolesOperation = {\n  path: '/corporations/{corporation_id}/roles/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-corporations.read_corporation_membership.v1']\n    }\n  ]\n}\n\nconst get_corporations_corporation_id_roles_historyOperation = {\n  path: '/corporations/{corporation_id}/roles/history/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-corporations.read_corporation_membership.v1']\n    }\n  ]\n}\n\nconst get_corporations_corporation_id_shareholdersOperation = {\n  path: '/corporations/{corporation_id}/shareholders/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-wallet.read_corporation_wallets.v1']\n    }\n  ]\n}\n\nconst get_corporations_corporation_id_standingsOperation = {\n  path: '/corporations/{corporation_id}/standings/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-corporations.read_standings.v1']\n    }\n  ]\n}\n\nconst get_corporations_corporation_id_starbasesOperation = {\n  path: '/corporations/{corporation_id}/starbases/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-corporations.read_starbases.v1']\n    }\n  ]\n}\n\nconst get_corporations_corporation_id_starbases_starbase_idOperation = {\n  path: '/corporations/{corporation_id}/starbases/{starbase_id}/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-corporations.read_starbases.v1']\n    }\n  ]\n}\n\nconst get_corporations_corporation_id_structuresOperation = {\n  path: '/corporations/{corporation_id}/structures/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-corporations.read_structures.v1']\n    }\n  ]\n}\n\nconst get_corporations_corporation_id_titlesOperation = {\n  path: '/corporations/{corporation_id}/titles/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-corporations.read_titles.v1']\n    }\n  ]\n}\n",
    "static": true,
    "longname": "/Users/sebs/projects/opensource/es-next-modules/packages/esi/Corporation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 115,
    "kind": "function",
    "name": "get_corporations_npccorps",
    "memberof": "esi/Corporation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_npccorps",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": "{get_corporations_npccorps}",
    "description": "Get a list of npc corporations\n\n---\nAlternate route: `/dev/corporations/npccorps/`\n\nAlternate route: `/legacy/corporations/npccorps/`\n\nAlternate route: `/v1/corporations/npccorps/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of npc corporation ids"
    }
  },
  {
    "__docId__": 116,
    "kind": "function",
    "name": "get_corporations_corporation_id",
    "memberof": "esi/Corporation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": "{get_corporations_corporation_id}",
    "description": "Public information about a corporation\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/`\n\nAlternate route: `/v4/corporations/{corporation_id}/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 53,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Public information about a corporation"
    }
  },
  {
    "__docId__": 117,
    "kind": "function",
    "name": "get_corporations_corporation_id_alliancehistory",
    "memberof": "esi/Corporation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id_alliancehistory",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": "{get_corporations_corporation_id_alliancehistory}",
    "description": "Get a list of all the alliances a corporation has been a member of\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/alliancehistory/`\n\nAlternate route: `/v2/corporations/{corporation_id}/alliancehistory/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 86,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Alliance history for the given corporation"
    }
  },
  {
    "__docId__": 118,
    "kind": "function",
    "name": "get_corporations_corporation_id_blueprints",
    "memberof": "esi/Corporation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id_blueprints",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": "{get_corporations_corporation_id_blueprints}",
    "description": "Returns a list of blueprints the corporation owns\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/blueprints/`\n\nAlternate route: `/v2/corporations/{corporation_id}/blueprints/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Director",
    "lineNumber": 124,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "List of corporation blueprints"
    }
  },
  {
    "__docId__": 119,
    "kind": "function",
    "name": "get_corporations_corporation_id_containers_logs",
    "memberof": "esi/Corporation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id_containers_logs",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": "{get_corporations_corporation_id_containers_logs}",
    "description": "Returns logs recorded in the past seven days from all audit log secure containers (ALSC) owned by a given corporation\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/containers/logs/`\n\nAlternate route: `/v2/corporations/{corporation_id}/containers/logs/`\n\n---\nThis route is cached for up to 600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Director",
    "lineNumber": 164,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "List of corporation ALSC logs"
    }
  },
  {
    "__docId__": 120,
    "kind": "function",
    "name": "get_corporations_corporation_id_divisions",
    "memberof": "esi/Corporation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id_divisions",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": "{get_corporations_corporation_id_divisions}",
    "description": "Return corporation hangar and wallet division names, only show if a division is not using the default name\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/divisions/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/divisions/`\n\nAlternate route: `/v1/corporations/{corporation_id}/divisions/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Director",
    "lineNumber": 205,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "List of corporation division names"
    }
  },
  {
    "__docId__": 121,
    "kind": "function",
    "name": "get_corporations_corporation_id_facilities",
    "memberof": "esi/Corporation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id_facilities",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": "{get_corporations_corporation_id_facilities}",
    "description": "Return a corporation's facilities\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/facilities/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/facilities/`\n\nAlternate route: `/v1/corporations/{corporation_id}/facilities/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Factory_Manager",
    "lineNumber": 245,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "List of corporation facilities"
    }
  },
  {
    "__docId__": 122,
    "kind": "function",
    "name": "get_corporations_corporation_id_icons",
    "memberof": "esi/Corporation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id_icons",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": "{get_corporations_corporation_id_icons}",
    "description": "Get the icon urls for a corporation\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/icons/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/icons/`\n\nAlternate route: `/v1/corporations/{corporation_id}/icons/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 281,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Urls for icons for the given corporation id and server"
    }
  },
  {
    "__docId__": 123,
    "kind": "function",
    "name": "get_corporations_corporation_id_medals",
    "memberof": "esi/Corporation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id_medals",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": "{get_corporations_corporation_id_medals}",
    "description": "Returns a corporation's medals\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/medals/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/medals/`\n\nAlternate route: `/v1/corporations/{corporation_id}/medals/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 318,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of medals"
    }
  },
  {
    "__docId__": 124,
    "kind": "function",
    "name": "get_corporations_corporation_id_medals_issued",
    "memberof": "esi/Corporation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id_medals_issued",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": "{get_corporations_corporation_id_medals_issued}",
    "description": "Returns medals issued by a corporation\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/medals/issued/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/medals/issued/`\n\nAlternate route: `/v1/corporations/{corporation_id}/medals/issued/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Director",
    "lineNumber": 360,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of issued medals"
    }
  },
  {
    "__docId__": 125,
    "kind": "function",
    "name": "get_corporations_corporation_id_members",
    "memberof": "esi/Corporation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id_members",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": "{get_corporations_corporation_id_members}",
    "description": "Return the current member list of a corporation, the token's character need to be a member of the corporation.\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/members/`\n\nAlternate route: `/v3/corporations/{corporation_id}/members/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 396,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "List of member character IDs"
    }
  },
  {
    "__docId__": 126,
    "kind": "function",
    "name": "get_corporations_corporation_id_members_limit",
    "memberof": "esi/Corporation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id_members_limit",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": "{get_corporations_corporation_id_members_limit}",
    "description": "Return a corporation's member limit, not including CEO himself\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/members/limit/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/members/limit/`\n\nAlternate route: `/v1/corporations/{corporation_id}/members/limit/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Director",
    "lineNumber": 436,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "The corporation's member limit"
    }
  },
  {
    "__docId__": 127,
    "kind": "function",
    "name": "get_corporations_corporation_id_members_titles",
    "memberof": "esi/Corporation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id_members_titles",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": "{get_corporations_corporation_id_members_titles}",
    "description": "Returns a corporation's members' titles\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/members/titles/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/members/titles/`\n\nAlternate route: `/v1/corporations/{corporation_id}/members/titles/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Director",
    "lineNumber": 476,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of members and theirs titles"
    }
  },
  {
    "__docId__": 128,
    "kind": "function",
    "name": "get_corporations_corporation_id_membertracking",
    "memberof": "esi/Corporation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id_membertracking",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": "{get_corporations_corporation_id_membertracking}",
    "description": "Returns additional information about a corporation's members which helps tracking their activities\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/membertracking/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/membertracking/`\n\nAlternate route: `/v1/corporations/{corporation_id}/membertracking/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Director",
    "lineNumber": 516,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "List of member character IDs"
    }
  },
  {
    "__docId__": 129,
    "kind": "function",
    "name": "get_corporations_corporation_id_roles",
    "memberof": "esi/Corporation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id_roles",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": "{get_corporations_corporation_id_roles}",
    "description": "Return the roles of all members if the character has the personnel manager role or any grantable role.\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/roles/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/roles/`\n\nAlternate route: `/v1/corporations/{corporation_id}/roles/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 553,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "List of member character ID's and roles"
    }
  },
  {
    "__docId__": 130,
    "kind": "function",
    "name": "get_corporations_corporation_id_roles_history",
    "memberof": "esi/Corporation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id_roles_history",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": "{get_corporations_corporation_id_roles_history}",
    "description": "Return how roles have changed for a coporation's members, up to a month\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/roles/history/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/roles/history/`\n\nAlternate route: `/v1/corporations/{corporation_id}/roles/history/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Director",
    "lineNumber": 594,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "List of role changes"
    }
  },
  {
    "__docId__": 131,
    "kind": "function",
    "name": "get_corporations_corporation_id_shareholders",
    "memberof": "esi/Corporation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id_shareholders",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": "{get_corporations_corporation_id_shareholders}",
    "description": "Return the current shareholders of a corporation.\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/shareholders/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/shareholders/`\n\nAlternate route: `/v1/corporations/{corporation_id}/shareholders/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Director",
    "lineNumber": 636,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "List of shareholders"
    }
  },
  {
    "__docId__": 132,
    "kind": "function",
    "name": "get_corporations_corporation_id_standings",
    "memberof": "esi/Corporation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id_standings",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": "{get_corporations_corporation_id_standings}",
    "description": "Return corporation standings from agents, NPC corporations, and factions\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/standings/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/standings/`\n\nAlternate route: `/v1/corporations/{corporation_id}/standings/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 675,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of standings"
    }
  },
  {
    "__docId__": 133,
    "kind": "function",
    "name": "get_corporations_corporation_id_starbases",
    "memberof": "esi/Corporation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id_starbases",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": "{get_corporations_corporation_id_starbases}",
    "description": "Returns list of corporation starbases (POSes)\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/starbases/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/starbases/`\n\nAlternate route: `/v1/corporations/{corporation_id}/starbases/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Director",
    "lineNumber": 717,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "List of starbases (POSes)"
    }
  },
  {
    "__docId__": 134,
    "kind": "function",
    "name": "get_corporations_corporation_id_starbases_starbase_id",
    "memberof": "esi/Corporation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id_starbases_starbase_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": "{get_corporations_corporation_id_starbases_starbase_id}",
    "description": "Returns various settings and fuels of a starbase (POS)\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/starbases/{starbase_id}/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/starbases/{starbase_id}/`\n\nAlternate route: `/v1/corporations/{corporation_id}/starbases/{starbase_id}/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Director",
    "lineNumber": 760,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "starbaseId",
        "description": "An EVE starbase (POS) ID"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "systemId",
        "description": "The solar system this starbase (POS) is located in,"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "List of starbases (POSes)"
    }
  },
  {
    "__docId__": 135,
    "kind": "function",
    "name": "get_corporations_corporation_id_structures",
    "memberof": "esi/Corporation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id_structures",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": "{get_corporations_corporation_id_structures}",
    "description": "Get a list of corporation structures. This route's version includes the changes to structures detailed in this blog: https://www.eveonline.com/article/upwell-2.0-structures-changes-coming-on-february-13th\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/structures/`\n\nAlternate route: `/v2/corporations/{corporation_id}/structures/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Station_Manager",
    "lineNumber": 803,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.AcceptLanguage",
        "description": "Language to use in the response"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.language",
        "description": "Language to use in the response, takes precedence over Accept-Language"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "List of corporation structures' information"
    }
  },
  {
    "__docId__": 136,
    "kind": "function",
    "name": "get_corporations_corporation_id_titles",
    "memberof": "esi/Corporation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id_titles",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": "{get_corporations_corporation_id_titles}",
    "description": "Returns a corporation's titles\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/titles/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/titles/`\n\nAlternate route: `/v1/corporations/{corporation_id}/titles/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Director",
    "lineNumber": 846,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of titles"
    }
  },
  {
    "__docId__": 137,
    "kind": "variable",
    "name": "get_corporations_npccorpsOperation",
    "memberof": "esi/Corporation.js",
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_npccorpsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 863,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 138,
    "kind": "variable",
    "name": "get_corporations_corporation_idOperation",
    "memberof": "esi/Corporation.js",
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 868,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 139,
    "kind": "variable",
    "name": "get_corporations_corporation_id_alliancehistoryOperation",
    "memberof": "esi/Corporation.js",
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id_alliancehistoryOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 873,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 140,
    "kind": "variable",
    "name": "get_corporations_corporation_id_blueprintsOperation",
    "memberof": "esi/Corporation.js",
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id_blueprintsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 878,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 141,
    "kind": "variable",
    "name": "get_corporations_corporation_id_containers_logsOperation",
    "memberof": "esi/Corporation.js",
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id_containers_logsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 889,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 142,
    "kind": "variable",
    "name": "get_corporations_corporation_id_divisionsOperation",
    "memberof": "esi/Corporation.js",
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id_divisionsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 900,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 143,
    "kind": "variable",
    "name": "get_corporations_corporation_id_facilitiesOperation",
    "memberof": "esi/Corporation.js",
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id_facilitiesOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 911,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 144,
    "kind": "variable",
    "name": "get_corporations_corporation_id_iconsOperation",
    "memberof": "esi/Corporation.js",
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id_iconsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 922,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 145,
    "kind": "variable",
    "name": "get_corporations_corporation_id_medalsOperation",
    "memberof": "esi/Corporation.js",
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id_medalsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 927,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 146,
    "kind": "variable",
    "name": "get_corporations_corporation_id_medals_issuedOperation",
    "memberof": "esi/Corporation.js",
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id_medals_issuedOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 938,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 147,
    "kind": "variable",
    "name": "get_corporations_corporation_id_membersOperation",
    "memberof": "esi/Corporation.js",
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id_membersOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 949,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 148,
    "kind": "variable",
    "name": "get_corporations_corporation_id_members_limitOperation",
    "memberof": "esi/Corporation.js",
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id_members_limitOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 960,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 149,
    "kind": "variable",
    "name": "get_corporations_corporation_id_members_titlesOperation",
    "memberof": "esi/Corporation.js",
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id_members_titlesOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 971,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 150,
    "kind": "variable",
    "name": "get_corporations_corporation_id_membertrackingOperation",
    "memberof": "esi/Corporation.js",
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id_membertrackingOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 982,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 151,
    "kind": "variable",
    "name": "get_corporations_corporation_id_rolesOperation",
    "memberof": "esi/Corporation.js",
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id_rolesOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 993,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 152,
    "kind": "variable",
    "name": "get_corporations_corporation_id_roles_historyOperation",
    "memberof": "esi/Corporation.js",
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id_roles_historyOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1004,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 153,
    "kind": "variable",
    "name": "get_corporations_corporation_id_shareholdersOperation",
    "memberof": "esi/Corporation.js",
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id_shareholdersOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1015,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 154,
    "kind": "variable",
    "name": "get_corporations_corporation_id_standingsOperation",
    "memberof": "esi/Corporation.js",
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id_standingsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1026,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 155,
    "kind": "variable",
    "name": "get_corporations_corporation_id_starbasesOperation",
    "memberof": "esi/Corporation.js",
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id_starbasesOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1037,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 156,
    "kind": "variable",
    "name": "get_corporations_corporation_id_starbases_starbase_idOperation",
    "memberof": "esi/Corporation.js",
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id_starbases_starbase_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1048,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 157,
    "kind": "variable",
    "name": "get_corporations_corporation_id_structuresOperation",
    "memberof": "esi/Corporation.js",
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id_structuresOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1059,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 158,
    "kind": "variable",
    "name": "get_corporations_corporation_id_titlesOperation",
    "memberof": "esi/Corporation.js",
    "static": true,
    "longname": "esi/Corporation.js~get_corporations_corporation_id_titlesOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Corporation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1070,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 159,
    "kind": "file",
    "name": "esi/Dogma.js",
    "content": "/** @module Dogma */\n// Auto-generated, edits will be overwritten\nimport * as gateway from './gateway'\n\n/**\n * Get a list of dogma attribute ids\n * \n * ---\n * Alternate route: `/dev/dogma/attributes/`\n * \n * Alternate route: `/legacy/dogma/attributes/`\n * \n * Alternate route: `/v1/dogma/attributes/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} A list of dogma attribute ids\n */\nexport function get_dogma_attributes(options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_dogma_attributesOperation, parameters)\n}\n\n/**\n * Get information on a dogma attribute\n * \n * ---\n * Alternate route: `/dev/dogma/attributes/{attribute_id}/`\n * \n * Alternate route: `/legacy/dogma/attributes/{attribute_id}/`\n * \n * Alternate route: `/v1/dogma/attributes/{attribute_id}/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {number} attributeId A dogma attribute ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} Information about a dogma attribute\n */\nexport function get_dogma_attributes_attribute_id(attributeId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      attribute_id: attributeId\n    },\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_dogma_attributes_attribute_idOperation, parameters)\n}\n\n/**\n * Returns info about a dynamic item resulting from mutation with a mutaplasmid.\n * \n * ---\n * Alternate route: `/dev/dogma/dynamic/items/{type_id}/{item_id}/`\n * \n * Alternate route: `/legacy/dogma/dynamic/items/{type_id}/{item_id}/`\n * \n * Alternate route: `/v1/dogma/dynamic/items/{type_id}/{item_id}/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {number} itemId item_id integer\n * @param {number} typeId type_id integer\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} Details about a dynamic item\n */\nexport function get_dogma_dynamic_items_type_id_item_id(itemId, typeId, options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    },\n    path: {\n      item_id: itemId,\n      type_id: typeId\n    }\n  }\n  return gateway.request(get_dogma_dynamic_items_type_id_item_idOperation, parameters)\n}\n\n/**\n * Get a list of dogma effect ids\n * \n * ---\n * Alternate route: `/dev/dogma/effects/`\n * \n * Alternate route: `/legacy/dogma/effects/`\n * \n * Alternate route: `/v1/dogma/effects/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} A list of dogma effect ids\n */\nexport function get_dogma_effects(options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_dogma_effectsOperation, parameters)\n}\n\n/**\n * Get information on a dogma effect\n * \n * ---\n * Alternate route: `/dev/dogma/effects/{effect_id}/`\n * \n * Alternate route: `/v2/dogma/effects/{effect_id}/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {number} effectId A dogma effect ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} Information about a dogma effect\n */\nexport function get_dogma_effects_effect_id(effectId, options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource\n    },\n    path: {\n      effect_id: effectId\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_dogma_effects_effect_idOperation, parameters)\n}\n\nconst get_dogma_attributesOperation = {\n  path: '/dogma/attributes/',\n  method: 'get'\n}\n\nconst get_dogma_attributes_attribute_idOperation = {\n  path: '/dogma/attributes/{attribute_id}/',\n  method: 'get'\n}\n\nconst get_dogma_dynamic_items_type_id_item_idOperation = {\n  path: '/dogma/dynamic/items/{type_id}/{item_id}/',\n  method: 'get'\n}\n\nconst get_dogma_effectsOperation = {\n  path: '/dogma/effects/',\n  method: 'get'\n}\n\nconst get_dogma_effects_effect_idOperation = {\n  path: '/dogma/effects/{effect_id}/',\n  method: 'get'\n}\n",
    "static": true,
    "longname": "/Users/sebs/projects/opensource/es-next-modules/packages/esi/Dogma.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 160,
    "kind": "function",
    "name": "get_dogma_attributes",
    "memberof": "esi/Dogma.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Dogma.js~get_dogma_attributes",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Dogma.js",
    "importStyle": "{get_dogma_attributes}",
    "description": "Get a list of dogma attribute ids\n\n---\nAlternate route: `/dev/dogma/attributes/`\n\nAlternate route: `/legacy/dogma/attributes/`\n\nAlternate route: `/v1/dogma/attributes/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of dogma attribute ids"
    }
  },
  {
    "__docId__": 161,
    "kind": "function",
    "name": "get_dogma_attributes_attribute_id",
    "memberof": "esi/Dogma.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Dogma.js~get_dogma_attributes_attribute_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Dogma.js",
    "importStyle": "{get_dogma_attributes_attribute_id}",
    "description": "Get information on a dogma attribute\n\n---\nAlternate route: `/dev/dogma/attributes/{attribute_id}/`\n\nAlternate route: `/legacy/dogma/attributes/{attribute_id}/`\n\nAlternate route: `/v1/dogma/attributes/{attribute_id}/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 55,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "attributeId",
        "description": "A dogma attribute ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Information about a dogma attribute"
    }
  },
  {
    "__docId__": 162,
    "kind": "function",
    "name": "get_dogma_dynamic_items_type_id_item_id",
    "memberof": "esi/Dogma.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Dogma.js~get_dogma_dynamic_items_type_id_item_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Dogma.js",
    "importStyle": "{get_dogma_dynamic_items_type_id_item_id}",
    "description": "Returns info about a dynamic item resulting from mutation with a mutaplasmid.\n\n---\nAlternate route: `/dev/dogma/dynamic/items/{type_id}/{item_id}/`\n\nAlternate route: `/legacy/dogma/dynamic/items/{type_id}/{item_id}/`\n\nAlternate route: `/v1/dogma/dynamic/items/{type_id}/{item_id}/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 91,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "itemId",
        "description": "item_id integer"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "typeId",
        "description": "type_id integer"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Details about a dynamic item"
    }
  },
  {
    "__docId__": 163,
    "kind": "function",
    "name": "get_dogma_effects",
    "memberof": "esi/Dogma.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Dogma.js~get_dogma_effects",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Dogma.js",
    "importStyle": "{get_dogma_effects}",
    "description": "Get a list of dogma effect ids\n\n---\nAlternate route: `/dev/dogma/effects/`\n\nAlternate route: `/legacy/dogma/effects/`\n\nAlternate route: `/v1/dogma/effects/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 126,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of dogma effect ids"
    }
  },
  {
    "__docId__": 164,
    "kind": "function",
    "name": "get_dogma_effects_effect_id",
    "memberof": "esi/Dogma.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Dogma.js~get_dogma_effects_effect_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Dogma.js",
    "importStyle": "{get_dogma_effects_effect_id}",
    "description": "Get information on a dogma effect\n\n---\nAlternate route: `/dev/dogma/effects/{effect_id}/`\n\nAlternate route: `/v2/dogma/effects/{effect_id}/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 156,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "effectId",
        "description": "A dogma effect ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Information about a dogma effect"
    }
  },
  {
    "__docId__": 165,
    "kind": "variable",
    "name": "get_dogma_attributesOperation",
    "memberof": "esi/Dogma.js",
    "static": true,
    "longname": "esi/Dogma.js~get_dogma_attributesOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Dogma.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 172,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 166,
    "kind": "variable",
    "name": "get_dogma_attributes_attribute_idOperation",
    "memberof": "esi/Dogma.js",
    "static": true,
    "longname": "esi/Dogma.js~get_dogma_attributes_attribute_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Dogma.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 177,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 167,
    "kind": "variable",
    "name": "get_dogma_dynamic_items_type_id_item_idOperation",
    "memberof": "esi/Dogma.js",
    "static": true,
    "longname": "esi/Dogma.js~get_dogma_dynamic_items_type_id_item_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Dogma.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 182,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 168,
    "kind": "variable",
    "name": "get_dogma_effectsOperation",
    "memberof": "esi/Dogma.js",
    "static": true,
    "longname": "esi/Dogma.js~get_dogma_effectsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Dogma.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 187,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 169,
    "kind": "variable",
    "name": "get_dogma_effects_effect_idOperation",
    "memberof": "esi/Dogma.js",
    "static": true,
    "longname": "esi/Dogma.js~get_dogma_effects_effect_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Dogma.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 192,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 170,
    "kind": "file",
    "name": "esi/FactionWarfare.js",
    "content": "/** @module FactionWarfare */\n// Auto-generated, edits will be overwritten\nimport * as gateway from './gateway'\n\n/**\n * Statistical overview of a character involved in faction warfare\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/fw/stats/`\n * \n * Alternate route: `/legacy/characters/{character_id}/fw/stats/`\n * \n * Alternate route: `/v1/characters/{character_id}/fw/stats/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Faction warfare statistics for a given character\n */\nexport function get_characters_character_id_fw_stats(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_fw_statsOperation, parameters)\n}\n\n/**\n * Statistics about a corporation involved in faction warfare\n * \n * ---\n * Alternate route: `/dev/corporations/{corporation_id}/fw/stats/`\n * \n * Alternate route: `/legacy/corporations/{corporation_id}/fw/stats/`\n * \n * Alternate route: `/v1/corporations/{corporation_id}/fw/stats/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Faction warfare statistics for a given corporation\n */\nexport function get_corporations_corporation_id_fw_stats(corporationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      corporation_id: corporationId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_corporations_corporation_id_fw_statsOperation, parameters)\n}\n\n/**\n * Top 4 leaderboard of factions for kills and victory points separated by total, last week and yesterday\n * \n * ---\n * Alternate route: `/dev/fw/leaderboards/`\n * \n * Alternate route: `/legacy/fw/leaderboards/`\n * \n * Alternate route: `/v1/fw/leaderboards/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} Corporation leaderboard of kills and victory points within faction warfare\n */\nexport function get_fw_leaderboards(options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_fw_leaderboardsOperation, parameters)\n}\n\n/**\n * Top 100 leaderboard of pilots for kills and victory points separated by total, last week and yesterday\n * \n * ---\n * Alternate route: `/dev/fw/leaderboards/characters/`\n * \n * Alternate route: `/legacy/fw/leaderboards/characters/`\n * \n * Alternate route: `/v1/fw/leaderboards/characters/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} Character leaderboard of kills and victory points within faction warfare\n */\nexport function get_fw_leaderboards_characters(options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_fw_leaderboards_charactersOperation, parameters)\n}\n\n/**\n * Top 10 leaderboard of corporations for kills and victory points separated by total, last week and yesterday\n * \n * ---\n * Alternate route: `/dev/fw/leaderboards/corporations/`\n * \n * Alternate route: `/legacy/fw/leaderboards/corporations/`\n * \n * Alternate route: `/v1/fw/leaderboards/corporations/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} Corporation leaderboard of kills and victory points within faction warfare\n */\nexport function get_fw_leaderboards_corporations(options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_fw_leaderboards_corporationsOperation, parameters)\n}\n\n/**\n * Statistical overviews of factions involved in faction warfare\n * \n * ---\n * Alternate route: `/dev/fw/stats/`\n * \n * Alternate route: `/legacy/fw/stats/`\n * \n * Alternate route: `/v1/fw/stats/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} Per faction breakdown of faction warfare statistics\n */\nexport function get_fw_stats(options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_fw_statsOperation, parameters)\n}\n\n/**\n * An overview of the current ownership of faction warfare solar systems\n * \n * ---\n * Alternate route: `/dev/fw/systems/`\n * \n * Alternate route: `/v2/fw/systems/`\n * \n * ---\n * This route is cached for up to 1800 seconds\n * \n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} All faction warfare solar systems\n */\nexport function get_fw_systems(options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_fw_systemsOperation, parameters)\n}\n\n/**\n * Data about which NPC factions are at war\n * \n * ---\n * Alternate route: `/dev/fw/wars/`\n * \n * Alternate route: `/legacy/fw/wars/`\n * \n * Alternate route: `/v1/fw/wars/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} A list of NPC factions at war\n */\nexport function get_fw_wars(options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_fw_warsOperation, parameters)\n}\n\nconst get_characters_character_id_fw_statsOperation = {\n  path: '/characters/{character_id}/fw/stats/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-characters.read_fw_stats.v1']\n    }\n  ]\n}\n\nconst get_corporations_corporation_id_fw_statsOperation = {\n  path: '/corporations/{corporation_id}/fw/stats/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-corporations.read_fw_stats.v1']\n    }\n  ]\n}\n\nconst get_fw_leaderboardsOperation = {\n  path: '/fw/leaderboards/',\n  method: 'get'\n}\n\nconst get_fw_leaderboards_charactersOperation = {\n  path: '/fw/leaderboards/characters/',\n  method: 'get'\n}\n\nconst get_fw_leaderboards_corporationsOperation = {\n  path: '/fw/leaderboards/corporations/',\n  method: 'get'\n}\n\nconst get_fw_statsOperation = {\n  path: '/fw/stats/',\n  method: 'get'\n}\n\nconst get_fw_systemsOperation = {\n  path: '/fw/systems/',\n  method: 'get'\n}\n\nconst get_fw_warsOperation = {\n  path: '/fw/wars/',\n  method: 'get'\n}\n",
    "static": true,
    "longname": "/Users/sebs/projects/opensource/es-next-modules/packages/esi/FactionWarfare.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 171,
    "kind": "function",
    "name": "get_characters_character_id_fw_stats",
    "memberof": "esi/FactionWarfare.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/FactionWarfare.js~get_characters_character_id_fw_stats",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/FactionWarfare.js",
    "importStyle": "{get_characters_character_id_fw_stats}",
    "description": "Statistical overview of a character involved in faction warfare\n\n---\nAlternate route: `/dev/characters/{character_id}/fw/stats/`\n\nAlternate route: `/legacy/characters/{character_id}/fw/stats/`\n\nAlternate route: `/v1/characters/{character_id}/fw/stats/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Faction warfare statistics for a given character"
    }
  },
  {
    "__docId__": 172,
    "kind": "function",
    "name": "get_corporations_corporation_id_fw_stats",
    "memberof": "esi/FactionWarfare.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/FactionWarfare.js~get_corporations_corporation_id_fw_stats",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/FactionWarfare.js",
    "importStyle": "{get_corporations_corporation_id_fw_stats}",
    "description": "Statistics about a corporation involved in faction warfare\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/fw/stats/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/fw/stats/`\n\nAlternate route: `/v1/corporations/{corporation_id}/fw/stats/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 62,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Faction warfare statistics for a given corporation"
    }
  },
  {
    "__docId__": 173,
    "kind": "function",
    "name": "get_fw_leaderboards",
    "memberof": "esi/FactionWarfare.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/FactionWarfare.js~get_fw_leaderboards",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/FactionWarfare.js",
    "importStyle": "{get_fw_leaderboards}",
    "description": "Top 4 leaderboard of factions for kills and victory points separated by total, last week and yesterday\n\n---\nAlternate route: `/dev/fw/leaderboards/`\n\nAlternate route: `/legacy/fw/leaderboards/`\n\nAlternate route: `/v1/fw/leaderboards/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 97,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Corporation leaderboard of kills and victory points within faction warfare"
    }
  },
  {
    "__docId__": 174,
    "kind": "function",
    "name": "get_fw_leaderboards_characters",
    "memberof": "esi/FactionWarfare.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/FactionWarfare.js~get_fw_leaderboards_characters",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/FactionWarfare.js",
    "importStyle": "{get_fw_leaderboards_characters}",
    "description": "Top 100 leaderboard of pilots for kills and victory points separated by total, last week and yesterday\n\n---\nAlternate route: `/dev/fw/leaderboards/characters/`\n\nAlternate route: `/legacy/fw/leaderboards/characters/`\n\nAlternate route: `/v1/fw/leaderboards/characters/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 128,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Character leaderboard of kills and victory points within faction warfare"
    }
  },
  {
    "__docId__": 175,
    "kind": "function",
    "name": "get_fw_leaderboards_corporations",
    "memberof": "esi/FactionWarfare.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/FactionWarfare.js~get_fw_leaderboards_corporations",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/FactionWarfare.js",
    "importStyle": "{get_fw_leaderboards_corporations}",
    "description": "Top 10 leaderboard of corporations for kills and victory points separated by total, last week and yesterday\n\n---\nAlternate route: `/dev/fw/leaderboards/corporations/`\n\nAlternate route: `/legacy/fw/leaderboards/corporations/`\n\nAlternate route: `/v1/fw/leaderboards/corporations/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 159,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Corporation leaderboard of kills and victory points within faction warfare"
    }
  },
  {
    "__docId__": 176,
    "kind": "function",
    "name": "get_fw_stats",
    "memberof": "esi/FactionWarfare.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/FactionWarfare.js~get_fw_stats",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/FactionWarfare.js",
    "importStyle": "{get_fw_stats}",
    "description": "Statistical overviews of factions involved in faction warfare\n\n---\nAlternate route: `/dev/fw/stats/`\n\nAlternate route: `/legacy/fw/stats/`\n\nAlternate route: `/v1/fw/stats/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 190,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Per faction breakdown of faction warfare statistics"
    }
  },
  {
    "__docId__": 177,
    "kind": "function",
    "name": "get_fw_systems",
    "memberof": "esi/FactionWarfare.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/FactionWarfare.js~get_fw_systems",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/FactionWarfare.js",
    "importStyle": "{get_fw_systems}",
    "description": "An overview of the current ownership of faction warfare solar systems\n\n---\nAlternate route: `/dev/fw/systems/`\n\nAlternate route: `/v2/fw/systems/`\n\n---\nThis route is cached for up to 1800 seconds",
    "lineNumber": 219,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "All faction warfare solar systems"
    }
  },
  {
    "__docId__": 178,
    "kind": "function",
    "name": "get_fw_wars",
    "memberof": "esi/FactionWarfare.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/FactionWarfare.js~get_fw_wars",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/FactionWarfare.js",
    "importStyle": "{get_fw_wars}",
    "description": "Data about which NPC factions are at war\n\n---\nAlternate route: `/dev/fw/wars/`\n\nAlternate route: `/legacy/fw/wars/`\n\nAlternate route: `/v1/fw/wars/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 250,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of NPC factions at war"
    }
  },
  {
    "__docId__": 179,
    "kind": "variable",
    "name": "get_characters_character_id_fw_statsOperation",
    "memberof": "esi/FactionWarfare.js",
    "static": true,
    "longname": "esi/FactionWarfare.js~get_characters_character_id_fw_statsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/FactionWarfare.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 263,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 180,
    "kind": "variable",
    "name": "get_corporations_corporation_id_fw_statsOperation",
    "memberof": "esi/FactionWarfare.js",
    "static": true,
    "longname": "esi/FactionWarfare.js~get_corporations_corporation_id_fw_statsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/FactionWarfare.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 274,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 181,
    "kind": "variable",
    "name": "get_fw_leaderboardsOperation",
    "memberof": "esi/FactionWarfare.js",
    "static": true,
    "longname": "esi/FactionWarfare.js~get_fw_leaderboardsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/FactionWarfare.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 285,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 182,
    "kind": "variable",
    "name": "get_fw_leaderboards_charactersOperation",
    "memberof": "esi/FactionWarfare.js",
    "static": true,
    "longname": "esi/FactionWarfare.js~get_fw_leaderboards_charactersOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/FactionWarfare.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 290,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 183,
    "kind": "variable",
    "name": "get_fw_leaderboards_corporationsOperation",
    "memberof": "esi/FactionWarfare.js",
    "static": true,
    "longname": "esi/FactionWarfare.js~get_fw_leaderboards_corporationsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/FactionWarfare.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 295,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 184,
    "kind": "variable",
    "name": "get_fw_statsOperation",
    "memberof": "esi/FactionWarfare.js",
    "static": true,
    "longname": "esi/FactionWarfare.js~get_fw_statsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/FactionWarfare.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 300,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 185,
    "kind": "variable",
    "name": "get_fw_systemsOperation",
    "memberof": "esi/FactionWarfare.js",
    "static": true,
    "longname": "esi/FactionWarfare.js~get_fw_systemsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/FactionWarfare.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 305,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 186,
    "kind": "variable",
    "name": "get_fw_warsOperation",
    "memberof": "esi/FactionWarfare.js",
    "static": true,
    "longname": "esi/FactionWarfare.js~get_fw_warsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/FactionWarfare.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 310,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 187,
    "kind": "file",
    "name": "esi/Fittings.js",
    "content": "/** @module Fittings */\n// Auto-generated, edits will be overwritten\nimport * as gateway from './gateway'\n\n/**\n * Return fittings of a character\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/fittings/`\n * \n * Alternate route: `/legacy/characters/{character_id}/fittings/`\n * \n * Alternate route: `/v1/characters/{character_id}/fittings/`\n * \n * ---\n * This route is cached for up to 300 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A list of fittings\n */\nexport function get_characters_character_id_fittings(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_fittingsOperation, parameters)\n}\n\n/**\n * Save a new fitting for a character\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/fittings/`\n * \n * Alternate route: `/legacy/characters/{character_id}/fittings/`\n * \n * Alternate route: `/v1/characters/{character_id}/fittings/`\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A list of fittings\n */\nexport function post_characters_character_id_fittings(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    }\n  }\n  return gateway.request(post_characters_character_id_fittingsOperation, parameters)\n}\n\n/**\n * Delete a fitting from a character\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/fittings/{fitting_id}/`\n * \n * Alternate route: `/legacy/characters/{character_id}/fittings/{fitting_id}/`\n * \n * Alternate route: `/v1/characters/{character_id}/fittings/{fitting_id}/`\n * \n * @param {number} characterId An EVE character ID\n * @param {number} fittingId ID for a fitting of this character\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Fitting deleted\n */\nexport function delete_characters_character_id_fittings_fitting_id(characterId, fittingId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId,\n      fitting_id: fittingId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    }\n  }\n  return gateway.request(delete_characters_character_id_fittings_fitting_idOperation, parameters)\n}\n\nconst get_characters_character_id_fittingsOperation = {\n  path: '/characters/{character_id}/fittings/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-fittings.read_fittings.v1']\n    }\n  ]\n}\n\nconst post_characters_character_id_fittingsOperation = {\n  path: '/characters/{character_id}/fittings/',\n  method: 'post',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-fittings.write_fittings.v1']\n    }\n  ]\n}\n\nconst delete_characters_character_id_fittings_fitting_idOperation = {\n  path: '/characters/{character_id}/fittings/{fitting_id}/',\n  method: 'delete',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-fittings.write_fittings.v1']\n    }\n  ]\n}\n",
    "static": true,
    "longname": "/Users/sebs/projects/opensource/es-next-modules/packages/esi/Fittings.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 188,
    "kind": "function",
    "name": "get_characters_character_id_fittings",
    "memberof": "esi/Fittings.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Fittings.js~get_characters_character_id_fittings",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Fittings.js",
    "importStyle": "{get_characters_character_id_fittings}",
    "description": "Return fittings of a character\n\n---\nAlternate route: `/dev/characters/{character_id}/fittings/`\n\nAlternate route: `/legacy/characters/{character_id}/fittings/`\n\nAlternate route: `/v1/characters/{character_id}/fittings/`\n\n---\nThis route is cached for up to 300 seconds",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of fittings"
    }
  },
  {
    "__docId__": 189,
    "kind": "function",
    "name": "post_characters_character_id_fittings",
    "memberof": "esi/Fittings.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Fittings.js~post_characters_character_id_fittings",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Fittings.js",
    "importStyle": "{post_characters_character_id_fittings}",
    "description": "Save a new fitting for a character\n\n---\nAlternate route: `/dev/characters/{character_id}/fittings/`\n\nAlternate route: `/legacy/characters/{character_id}/fittings/`\n\nAlternate route: `/v1/characters/{character_id}/fittings/`",
    "lineNumber": 58,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of fittings"
    }
  },
  {
    "__docId__": 190,
    "kind": "function",
    "name": "delete_characters_character_id_fittings_fitting_id",
    "memberof": "esi/Fittings.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Fittings.js~delete_characters_character_id_fittings_fitting_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Fittings.js",
    "importStyle": "{delete_characters_character_id_fittings_fitting_id}",
    "description": "Delete a fitting from a character\n\n---\nAlternate route: `/dev/characters/{character_id}/fittings/{fitting_id}/`\n\nAlternate route: `/legacy/characters/{character_id}/fittings/{fitting_id}/`\n\nAlternate route: `/v1/characters/{character_id}/fittings/{fitting_id}/`",
    "lineNumber": 89,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "fittingId",
        "description": "ID for a fitting of this character"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Fitting deleted"
    }
  },
  {
    "__docId__": 191,
    "kind": "variable",
    "name": "get_characters_character_id_fittingsOperation",
    "memberof": "esi/Fittings.js",
    "static": true,
    "longname": "esi/Fittings.js~get_characters_character_id_fittingsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Fittings.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 104,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 192,
    "kind": "variable",
    "name": "post_characters_character_id_fittingsOperation",
    "memberof": "esi/Fittings.js",
    "static": true,
    "longname": "esi/Fittings.js~post_characters_character_id_fittingsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Fittings.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 115,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 193,
    "kind": "variable",
    "name": "delete_characters_character_id_fittings_fitting_idOperation",
    "memberof": "esi/Fittings.js",
    "static": true,
    "longname": "esi/Fittings.js~delete_characters_character_id_fittings_fitting_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Fittings.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 126,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 194,
    "kind": "file",
    "name": "esi/Fleets.js",
    "content": "/** @module Fleets */\n// Auto-generated, edits will be overwritten\nimport * as gateway from './gateway'\n\n/**\n * Return the fleet ID the character is in, if any.\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/fleet/`\n * \n * Alternate route: `/legacy/characters/{character_id}/fleet/`\n * \n * Alternate route: `/v1/characters/{character_id}/fleet/`\n * \n * ---\n * This route is cached for up to 60 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Details about the character's fleet\n */\nexport function get_characters_character_id_fleet(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_fleetOperation, parameters)\n}\n\n/**\n * Return details about a fleet\n * \n * ---\n * Alternate route: `/dev/fleets/{fleet_id}/`\n * \n * Alternate route: `/legacy/fleets/{fleet_id}/`\n * \n * Alternate route: `/v1/fleets/{fleet_id}/`\n * \n * ---\n * This route is cached for up to 5 seconds\n * \n * @param {number} fleetId ID for a fleet\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Details about a fleet\n */\nexport function get_fleets_fleet_id(fleetId, options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    path: {\n      fleet_id: fleetId\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_fleets_fleet_idOperation, parameters)\n}\n\n/**\n * Update settings about a fleet\n * \n * ---\n * Alternate route: `/dev/fleets/{fleet_id}/`\n * \n * Alternate route: `/legacy/fleets/{fleet_id}/`\n * \n * Alternate route: `/v1/fleets/{fleet_id}/`\n * \n * @param {number} fleetId ID for a fleet\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Fleet updated\n */\nexport function put_fleets_fleet_id(fleetId, options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    path: {\n      fleet_id: fleetId\n    }\n  }\n  return gateway.request(put_fleets_fleet_idOperation, parameters)\n}\n\n/**\n * Return information about fleet members\n * \n * ---\n * Alternate route: `/dev/fleets/{fleet_id}/members/`\n * \n * Alternate route: `/legacy/fleets/{fleet_id}/members/`\n * \n * Alternate route: `/v1/fleets/{fleet_id}/members/`\n * \n * ---\n * This route is cached for up to 5 seconds\n * \n * @param {number} fleetId ID for a fleet\n * @param {object} options Optional options\n * @param {string} [options.AcceptLanguage] Language to use in the response\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.language] Language to use in the response, takes precedence over Accept-Language\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A list of fleet members\n */\nexport function get_fleets_fleet_id_members(fleetId, options) {\n  if (!options) options = {}\n  const parameters = {\n    header: {\n      'Accept-Language': options.AcceptLanguage,\n      'If-None-Match': options.IfNoneMatch\n    },\n    query: {\n      datasource: options.datasource,\n      language: options.language,\n      token: options.token\n    },\n    path: {\n      fleet_id: fleetId\n    }\n  }\n  return gateway.request(get_fleets_fleet_id_membersOperation, parameters)\n}\n\n/**\n * Invite a character into the fleet. If a character has a CSPA charge set it is not possible to invite them to the fleet using ESI\n * \n * ---\n * Alternate route: `/dev/fleets/{fleet_id}/members/`\n * \n * Alternate route: `/legacy/fleets/{fleet_id}/members/`\n * \n * Alternate route: `/v1/fleets/{fleet_id}/members/`\n * \n * @param {number} fleetId ID for a fleet\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Fleet invitation sent\n */\nexport function post_fleets_fleet_id_members(fleetId, options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    path: {\n      fleet_id: fleetId\n    }\n  }\n  return gateway.request(post_fleets_fleet_id_membersOperation, parameters)\n}\n\n/**\n * Kick a fleet member\n * \n * ---\n * Alternate route: `/dev/fleets/{fleet_id}/members/{member_id}/`\n * \n * Alternate route: `/legacy/fleets/{fleet_id}/members/{member_id}/`\n * \n * Alternate route: `/v1/fleets/{fleet_id}/members/{member_id}/`\n * \n * @param {number} fleetId ID for a fleet\n * @param {number} memberId The character ID of a member in this fleet\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Fleet member kicked\n */\nexport function delete_fleets_fleet_id_members_member_id(fleetId, memberId, options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    path: {\n      fleet_id: fleetId,\n      member_id: memberId\n    }\n  }\n  return gateway.request(delete_fleets_fleet_id_members_member_idOperation, parameters)\n}\n\n/**\n * Move a fleet member around\n * \n * ---\n * Alternate route: `/dev/fleets/{fleet_id}/members/{member_id}/`\n * \n * Alternate route: `/legacy/fleets/{fleet_id}/members/{member_id}/`\n * \n * Alternate route: `/v1/fleets/{fleet_id}/members/{member_id}/`\n * \n * @param {number} fleetId ID for a fleet\n * @param {number} memberId The character ID of a member in this fleet\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Fleet invitation sent\n */\nexport function put_fleets_fleet_id_members_member_id(fleetId, memberId, options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    path: {\n      fleet_id: fleetId,\n      member_id: memberId\n    }\n  }\n  return gateway.request(put_fleets_fleet_id_members_member_idOperation, parameters)\n}\n\n/**\n * Delete a fleet squad, only empty squads can be deleted\n * \n * ---\n * Alternate route: `/dev/fleets/{fleet_id}/squads/{squad_id}/`\n * \n * Alternate route: `/legacy/fleets/{fleet_id}/squads/{squad_id}/`\n * \n * Alternate route: `/v1/fleets/{fleet_id}/squads/{squad_id}/`\n * \n * @param {number} fleetId ID for a fleet\n * @param {number} squadId The squad to delete\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Squad deleted\n */\nexport function delete_fleets_fleet_id_squads_squad_id(fleetId, squadId, options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    path: {\n      fleet_id: fleetId,\n      squad_id: squadId\n    }\n  }\n  return gateway.request(delete_fleets_fleet_id_squads_squad_idOperation, parameters)\n}\n\n/**\n * Rename a fleet squad\n * \n * ---\n * Alternate route: `/dev/fleets/{fleet_id}/squads/{squad_id}/`\n * \n * Alternate route: `/legacy/fleets/{fleet_id}/squads/{squad_id}/`\n * \n * Alternate route: `/v1/fleets/{fleet_id}/squads/{squad_id}/`\n * \n * @param {number} fleetId ID for a fleet\n * @param {number} squadId The squad to rename\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Squad renamed\n */\nexport function put_fleets_fleet_id_squads_squad_id(fleetId, squadId, options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    path: {\n      fleet_id: fleetId,\n      squad_id: squadId\n    }\n  }\n  return gateway.request(put_fleets_fleet_id_squads_squad_idOperation, parameters)\n}\n\n/**\n * Return information about wings in a fleet\n * \n * ---\n * Alternate route: `/dev/fleets/{fleet_id}/wings/`\n * \n * Alternate route: `/legacy/fleets/{fleet_id}/wings/`\n * \n * Alternate route: `/v1/fleets/{fleet_id}/wings/`\n * \n * ---\n * This route is cached for up to 5 seconds\n * \n * @param {number} fleetId ID for a fleet\n * @param {object} options Optional options\n * @param {string} [options.AcceptLanguage] Language to use in the response\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.language] Language to use in the response, takes precedence over Accept-Language\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A list of fleet wings\n */\nexport function get_fleets_fleet_id_wings(fleetId, options) {\n  if (!options) options = {}\n  const parameters = {\n    header: {\n      'Accept-Language': options.AcceptLanguage,\n      'If-None-Match': options.IfNoneMatch\n    },\n    query: {\n      datasource: options.datasource,\n      language: options.language,\n      token: options.token\n    },\n    path: {\n      fleet_id: fleetId\n    }\n  }\n  return gateway.request(get_fleets_fleet_id_wingsOperation, parameters)\n}\n\n/**\n * Create a new wing in a fleet\n * \n * ---\n * Alternate route: `/dev/fleets/{fleet_id}/wings/`\n * \n * Alternate route: `/legacy/fleets/{fleet_id}/wings/`\n * \n * Alternate route: `/v1/fleets/{fleet_id}/wings/`\n * \n * @param {number} fleetId ID for a fleet\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Wing created\n */\nexport function post_fleets_fleet_id_wings(fleetId, options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    path: {\n      fleet_id: fleetId\n    }\n  }\n  return gateway.request(post_fleets_fleet_id_wingsOperation, parameters)\n}\n\n/**\n * Delete a fleet wing, only empty wings can be deleted. The wing may contain squads, but the squads must be empty\n * \n * ---\n * Alternate route: `/dev/fleets/{fleet_id}/wings/{wing_id}/`\n * \n * Alternate route: `/legacy/fleets/{fleet_id}/wings/{wing_id}/`\n * \n * Alternate route: `/v1/fleets/{fleet_id}/wings/{wing_id}/`\n * \n * @param {number} fleetId ID for a fleet\n * @param {number} wingId The wing to delete\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Wing deleted\n */\nexport function delete_fleets_fleet_id_wings_wing_id(fleetId, wingId, options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    path: {\n      fleet_id: fleetId,\n      wing_id: wingId\n    }\n  }\n  return gateway.request(delete_fleets_fleet_id_wings_wing_idOperation, parameters)\n}\n\n/**\n * Rename a fleet wing\n * \n * ---\n * Alternate route: `/dev/fleets/{fleet_id}/wings/{wing_id}/`\n * \n * Alternate route: `/legacy/fleets/{fleet_id}/wings/{wing_id}/`\n * \n * Alternate route: `/v1/fleets/{fleet_id}/wings/{wing_id}/`\n * \n * @param {number} fleetId ID for a fleet\n * @param {number} wingId The wing to rename\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Wing renamed\n */\nexport function put_fleets_fleet_id_wings_wing_id(fleetId, wingId, options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    path: {\n      fleet_id: fleetId,\n      wing_id: wingId\n    }\n  }\n  return gateway.request(put_fleets_fleet_id_wings_wing_idOperation, parameters)\n}\n\n/**\n * Create a new squad in a fleet\n * \n * ---\n * Alternate route: `/dev/fleets/{fleet_id}/wings/{wing_id}/squads/`\n * \n * Alternate route: `/legacy/fleets/{fleet_id}/wings/{wing_id}/squads/`\n * \n * Alternate route: `/v1/fleets/{fleet_id}/wings/{wing_id}/squads/`\n * \n * @param {number} fleetId ID for a fleet\n * @param {number} wingId The wing_id to create squad in\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Squad created\n */\nexport function post_fleets_fleet_id_wings_wing_id_squads(fleetId, wingId, options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    path: {\n      fleet_id: fleetId,\n      wing_id: wingId\n    }\n  }\n  return gateway.request(post_fleets_fleet_id_wings_wing_id_squadsOperation, parameters)\n}\n\nconst get_characters_character_id_fleetOperation = {\n  path: '/characters/{character_id}/fleet/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-fleets.read_fleet.v1']\n    }\n  ]\n}\n\nconst get_fleets_fleet_idOperation = {\n  path: '/fleets/{fleet_id}/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-fleets.read_fleet.v1']\n    }\n  ]\n}\n\nconst put_fleets_fleet_idOperation = {\n  path: '/fleets/{fleet_id}/',\n  method: 'put',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-fleets.write_fleet.v1']\n    }\n  ]\n}\n\nconst get_fleets_fleet_id_membersOperation = {\n  path: '/fleets/{fleet_id}/members/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-fleets.read_fleet.v1']\n    }\n  ]\n}\n\nconst post_fleets_fleet_id_membersOperation = {\n  path: '/fleets/{fleet_id}/members/',\n  method: 'post',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-fleets.write_fleet.v1']\n    }\n  ]\n}\n\nconst delete_fleets_fleet_id_members_member_idOperation = {\n  path: '/fleets/{fleet_id}/members/{member_id}/',\n  method: 'delete',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-fleets.write_fleet.v1']\n    }\n  ]\n}\n\nconst put_fleets_fleet_id_members_member_idOperation = {\n  path: '/fleets/{fleet_id}/members/{member_id}/',\n  method: 'put',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-fleets.write_fleet.v1']\n    }\n  ]\n}\n\nconst delete_fleets_fleet_id_squads_squad_idOperation = {\n  path: '/fleets/{fleet_id}/squads/{squad_id}/',\n  method: 'delete',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-fleets.write_fleet.v1']\n    }\n  ]\n}\n\nconst put_fleets_fleet_id_squads_squad_idOperation = {\n  path: '/fleets/{fleet_id}/squads/{squad_id}/',\n  method: 'put',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-fleets.write_fleet.v1']\n    }\n  ]\n}\n\nconst get_fleets_fleet_id_wingsOperation = {\n  path: '/fleets/{fleet_id}/wings/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-fleets.read_fleet.v1']\n    }\n  ]\n}\n\nconst post_fleets_fleet_id_wingsOperation = {\n  path: '/fleets/{fleet_id}/wings/',\n  method: 'post',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-fleets.write_fleet.v1']\n    }\n  ]\n}\n\nconst delete_fleets_fleet_id_wings_wing_idOperation = {\n  path: '/fleets/{fleet_id}/wings/{wing_id}/',\n  method: 'delete',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-fleets.write_fleet.v1']\n    }\n  ]\n}\n\nconst put_fleets_fleet_id_wings_wing_idOperation = {\n  path: '/fleets/{fleet_id}/wings/{wing_id}/',\n  method: 'put',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-fleets.write_fleet.v1']\n    }\n  ]\n}\n\nconst post_fleets_fleet_id_wings_wing_id_squadsOperation = {\n  path: '/fleets/{fleet_id}/wings/{wing_id}/squads/',\n  method: 'post',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-fleets.write_fleet.v1']\n    }\n  ]\n}\n",
    "static": true,
    "longname": "/Users/sebs/projects/opensource/es-next-modules/packages/esi/Fleets.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 195,
    "kind": "function",
    "name": "get_characters_character_id_fleet",
    "memberof": "esi/Fleets.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Fleets.js~get_characters_character_id_fleet",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Fleets.js",
    "importStyle": "{get_characters_character_id_fleet}",
    "description": "Return the fleet ID the character is in, if any.\n\n---\nAlternate route: `/dev/characters/{character_id}/fleet/`\n\nAlternate route: `/legacy/characters/{character_id}/fleet/`\n\nAlternate route: `/v1/characters/{character_id}/fleet/`\n\n---\nThis route is cached for up to 60 seconds",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Details about the character's fleet"
    }
  },
  {
    "__docId__": 196,
    "kind": "function",
    "name": "get_fleets_fleet_id",
    "memberof": "esi/Fleets.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Fleets.js~get_fleets_fleet_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Fleets.js",
    "importStyle": "{get_fleets_fleet_id}",
    "description": "Return details about a fleet\n\n---\nAlternate route: `/dev/fleets/{fleet_id}/`\n\nAlternate route: `/legacy/fleets/{fleet_id}/`\n\nAlternate route: `/v1/fleets/{fleet_id}/`\n\n---\nThis route is cached for up to 5 seconds",
    "lineNumber": 62,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "fleetId",
        "description": "ID for a fleet"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Details about a fleet"
    }
  },
  {
    "__docId__": 197,
    "kind": "function",
    "name": "put_fleets_fleet_id",
    "memberof": "esi/Fleets.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Fleets.js~put_fleets_fleet_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Fleets.js",
    "importStyle": "{put_fleets_fleet_id}",
    "description": "Update settings about a fleet\n\n---\nAlternate route: `/dev/fleets/{fleet_id}/`\n\nAlternate route: `/legacy/fleets/{fleet_id}/`\n\nAlternate route: `/v1/fleets/{fleet_id}/`",
    "lineNumber": 95,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "fleetId",
        "description": "ID for a fleet"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Fleet updated"
    }
  },
  {
    "__docId__": 198,
    "kind": "function",
    "name": "get_fleets_fleet_id_members",
    "memberof": "esi/Fleets.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Fleets.js~get_fleets_fleet_id_members",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Fleets.js",
    "importStyle": "{get_fleets_fleet_id_members}",
    "description": "Return information about fleet members\n\n---\nAlternate route: `/dev/fleets/{fleet_id}/members/`\n\nAlternate route: `/legacy/fleets/{fleet_id}/members/`\n\nAlternate route: `/v1/fleets/{fleet_id}/members/`\n\n---\nThis route is cached for up to 5 seconds",
    "lineNumber": 131,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "fleetId",
        "description": "ID for a fleet"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.AcceptLanguage",
        "description": "Language to use in the response"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.language",
        "description": "Language to use in the response, takes precedence over Accept-Language"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of fleet members"
    }
  },
  {
    "__docId__": 199,
    "kind": "function",
    "name": "post_fleets_fleet_id_members",
    "memberof": "esi/Fleets.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Fleets.js~post_fleets_fleet_id_members",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Fleets.js",
    "importStyle": "{post_fleets_fleet_id_members}",
    "description": "Invite a character into the fleet. If a character has a CSPA charge set it is not possible to invite them to the fleet using ESI\n\n---\nAlternate route: `/dev/fleets/{fleet_id}/members/`\n\nAlternate route: `/legacy/fleets/{fleet_id}/members/`\n\nAlternate route: `/v1/fleets/{fleet_id}/members/`",
    "lineNumber": 166,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "fleetId",
        "description": "ID for a fleet"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Fleet invitation sent"
    }
  },
  {
    "__docId__": 200,
    "kind": "function",
    "name": "delete_fleets_fleet_id_members_member_id",
    "memberof": "esi/Fleets.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Fleets.js~delete_fleets_fleet_id_members_member_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Fleets.js",
    "importStyle": "{delete_fleets_fleet_id_members_member_id}",
    "description": "Kick a fleet member\n\n---\nAlternate route: `/dev/fleets/{fleet_id}/members/{member_id}/`\n\nAlternate route: `/legacy/fleets/{fleet_id}/members/{member_id}/`\n\nAlternate route: `/v1/fleets/{fleet_id}/members/{member_id}/`",
    "lineNumber": 197,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "fleetId",
        "description": "ID for a fleet"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "memberId",
        "description": "The character ID of a member in this fleet"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Fleet member kicked"
    }
  },
  {
    "__docId__": 201,
    "kind": "function",
    "name": "put_fleets_fleet_id_members_member_id",
    "memberof": "esi/Fleets.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Fleets.js~put_fleets_fleet_id_members_member_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Fleets.js",
    "importStyle": "{put_fleets_fleet_id_members_member_id}",
    "description": "Move a fleet member around\n\n---\nAlternate route: `/dev/fleets/{fleet_id}/members/{member_id}/`\n\nAlternate route: `/legacy/fleets/{fleet_id}/members/{member_id}/`\n\nAlternate route: `/v1/fleets/{fleet_id}/members/{member_id}/`",
    "lineNumber": 229,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "fleetId",
        "description": "ID for a fleet"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "memberId",
        "description": "The character ID of a member in this fleet"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Fleet invitation sent"
    }
  },
  {
    "__docId__": 202,
    "kind": "function",
    "name": "delete_fleets_fleet_id_squads_squad_id",
    "memberof": "esi/Fleets.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Fleets.js~delete_fleets_fleet_id_squads_squad_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Fleets.js",
    "importStyle": "{delete_fleets_fleet_id_squads_squad_id}",
    "description": "Delete a fleet squad, only empty squads can be deleted\n\n---\nAlternate route: `/dev/fleets/{fleet_id}/squads/{squad_id}/`\n\nAlternate route: `/legacy/fleets/{fleet_id}/squads/{squad_id}/`\n\nAlternate route: `/v1/fleets/{fleet_id}/squads/{squad_id}/`",
    "lineNumber": 261,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "fleetId",
        "description": "ID for a fleet"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "squadId",
        "description": "The squad to delete"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Squad deleted"
    }
  },
  {
    "__docId__": 203,
    "kind": "function",
    "name": "put_fleets_fleet_id_squads_squad_id",
    "memberof": "esi/Fleets.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Fleets.js~put_fleets_fleet_id_squads_squad_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Fleets.js",
    "importStyle": "{put_fleets_fleet_id_squads_squad_id}",
    "description": "Rename a fleet squad\n\n---\nAlternate route: `/dev/fleets/{fleet_id}/squads/{squad_id}/`\n\nAlternate route: `/legacy/fleets/{fleet_id}/squads/{squad_id}/`\n\nAlternate route: `/v1/fleets/{fleet_id}/squads/{squad_id}/`",
    "lineNumber": 293,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "fleetId",
        "description": "ID for a fleet"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "squadId",
        "description": "The squad to rename"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Squad renamed"
    }
  },
  {
    "__docId__": 204,
    "kind": "function",
    "name": "get_fleets_fleet_id_wings",
    "memberof": "esi/Fleets.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Fleets.js~get_fleets_fleet_id_wings",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Fleets.js",
    "importStyle": "{get_fleets_fleet_id_wings}",
    "description": "Return information about wings in a fleet\n\n---\nAlternate route: `/dev/fleets/{fleet_id}/wings/`\n\nAlternate route: `/legacy/fleets/{fleet_id}/wings/`\n\nAlternate route: `/v1/fleets/{fleet_id}/wings/`\n\n---\nThis route is cached for up to 5 seconds",
    "lineNumber": 330,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "fleetId",
        "description": "ID for a fleet"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.AcceptLanguage",
        "description": "Language to use in the response"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.language",
        "description": "Language to use in the response, takes precedence over Accept-Language"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of fleet wings"
    }
  },
  {
    "__docId__": 205,
    "kind": "function",
    "name": "post_fleets_fleet_id_wings",
    "memberof": "esi/Fleets.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Fleets.js~post_fleets_fleet_id_wings",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Fleets.js",
    "importStyle": "{post_fleets_fleet_id_wings}",
    "description": "Create a new wing in a fleet\n\n---\nAlternate route: `/dev/fleets/{fleet_id}/wings/`\n\nAlternate route: `/legacy/fleets/{fleet_id}/wings/`\n\nAlternate route: `/v1/fleets/{fleet_id}/wings/`",
    "lineNumber": 365,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "fleetId",
        "description": "ID for a fleet"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Wing created"
    }
  },
  {
    "__docId__": 206,
    "kind": "function",
    "name": "delete_fleets_fleet_id_wings_wing_id",
    "memberof": "esi/Fleets.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Fleets.js~delete_fleets_fleet_id_wings_wing_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Fleets.js",
    "importStyle": "{delete_fleets_fleet_id_wings_wing_id}",
    "description": "Delete a fleet wing, only empty wings can be deleted. The wing may contain squads, but the squads must be empty\n\n---\nAlternate route: `/dev/fleets/{fleet_id}/wings/{wing_id}/`\n\nAlternate route: `/legacy/fleets/{fleet_id}/wings/{wing_id}/`\n\nAlternate route: `/v1/fleets/{fleet_id}/wings/{wing_id}/`",
    "lineNumber": 396,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "fleetId",
        "description": "ID for a fleet"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "wingId",
        "description": "The wing to delete"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Wing deleted"
    }
  },
  {
    "__docId__": 207,
    "kind": "function",
    "name": "put_fleets_fleet_id_wings_wing_id",
    "memberof": "esi/Fleets.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Fleets.js~put_fleets_fleet_id_wings_wing_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Fleets.js",
    "importStyle": "{put_fleets_fleet_id_wings_wing_id}",
    "description": "Rename a fleet wing\n\n---\nAlternate route: `/dev/fleets/{fleet_id}/wings/{wing_id}/`\n\nAlternate route: `/legacy/fleets/{fleet_id}/wings/{wing_id}/`\n\nAlternate route: `/v1/fleets/{fleet_id}/wings/{wing_id}/`",
    "lineNumber": 428,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "fleetId",
        "description": "ID for a fleet"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "wingId",
        "description": "The wing to rename"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Wing renamed"
    }
  },
  {
    "__docId__": 208,
    "kind": "function",
    "name": "post_fleets_fleet_id_wings_wing_id_squads",
    "memberof": "esi/Fleets.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Fleets.js~post_fleets_fleet_id_wings_wing_id_squads",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Fleets.js",
    "importStyle": "{post_fleets_fleet_id_wings_wing_id_squads}",
    "description": "Create a new squad in a fleet\n\n---\nAlternate route: `/dev/fleets/{fleet_id}/wings/{wing_id}/squads/`\n\nAlternate route: `/legacy/fleets/{fleet_id}/wings/{wing_id}/squads/`\n\nAlternate route: `/v1/fleets/{fleet_id}/wings/{wing_id}/squads/`",
    "lineNumber": 460,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "fleetId",
        "description": "ID for a fleet"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "wingId",
        "description": "The wing_id to create squad in"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Squad created"
    }
  },
  {
    "__docId__": 209,
    "kind": "variable",
    "name": "get_characters_character_id_fleetOperation",
    "memberof": "esi/Fleets.js",
    "static": true,
    "longname": "esi/Fleets.js~get_characters_character_id_fleetOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Fleets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 475,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 210,
    "kind": "variable",
    "name": "get_fleets_fleet_idOperation",
    "memberof": "esi/Fleets.js",
    "static": true,
    "longname": "esi/Fleets.js~get_fleets_fleet_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Fleets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 486,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 211,
    "kind": "variable",
    "name": "put_fleets_fleet_idOperation",
    "memberof": "esi/Fleets.js",
    "static": true,
    "longname": "esi/Fleets.js~put_fleets_fleet_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Fleets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 497,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 212,
    "kind": "variable",
    "name": "get_fleets_fleet_id_membersOperation",
    "memberof": "esi/Fleets.js",
    "static": true,
    "longname": "esi/Fleets.js~get_fleets_fleet_id_membersOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Fleets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 508,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 213,
    "kind": "variable",
    "name": "post_fleets_fleet_id_membersOperation",
    "memberof": "esi/Fleets.js",
    "static": true,
    "longname": "esi/Fleets.js~post_fleets_fleet_id_membersOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Fleets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 519,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 214,
    "kind": "variable",
    "name": "delete_fleets_fleet_id_members_member_idOperation",
    "memberof": "esi/Fleets.js",
    "static": true,
    "longname": "esi/Fleets.js~delete_fleets_fleet_id_members_member_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Fleets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 530,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 215,
    "kind": "variable",
    "name": "put_fleets_fleet_id_members_member_idOperation",
    "memberof": "esi/Fleets.js",
    "static": true,
    "longname": "esi/Fleets.js~put_fleets_fleet_id_members_member_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Fleets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 541,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 216,
    "kind": "variable",
    "name": "delete_fleets_fleet_id_squads_squad_idOperation",
    "memberof": "esi/Fleets.js",
    "static": true,
    "longname": "esi/Fleets.js~delete_fleets_fleet_id_squads_squad_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Fleets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 552,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 217,
    "kind": "variable",
    "name": "put_fleets_fleet_id_squads_squad_idOperation",
    "memberof": "esi/Fleets.js",
    "static": true,
    "longname": "esi/Fleets.js~put_fleets_fleet_id_squads_squad_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Fleets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 563,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 218,
    "kind": "variable",
    "name": "get_fleets_fleet_id_wingsOperation",
    "memberof": "esi/Fleets.js",
    "static": true,
    "longname": "esi/Fleets.js~get_fleets_fleet_id_wingsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Fleets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 574,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 219,
    "kind": "variable",
    "name": "post_fleets_fleet_id_wingsOperation",
    "memberof": "esi/Fleets.js",
    "static": true,
    "longname": "esi/Fleets.js~post_fleets_fleet_id_wingsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Fleets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 585,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 220,
    "kind": "variable",
    "name": "delete_fleets_fleet_id_wings_wing_idOperation",
    "memberof": "esi/Fleets.js",
    "static": true,
    "longname": "esi/Fleets.js~delete_fleets_fleet_id_wings_wing_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Fleets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 596,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 221,
    "kind": "variable",
    "name": "put_fleets_fleet_id_wings_wing_idOperation",
    "memberof": "esi/Fleets.js",
    "static": true,
    "longname": "esi/Fleets.js~put_fleets_fleet_id_wings_wing_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Fleets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 607,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 222,
    "kind": "variable",
    "name": "post_fleets_fleet_id_wings_wing_id_squadsOperation",
    "memberof": "esi/Fleets.js",
    "static": true,
    "longname": "esi/Fleets.js~post_fleets_fleet_id_wings_wing_id_squadsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Fleets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 618,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 223,
    "kind": "file",
    "name": "esi/Industry.js",
    "content": "/** @module Industry */\n// Auto-generated, edits will be overwritten\nimport * as gateway from './gateway'\n\n/**\n * List industry jobs placed by a character\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/industry/jobs/`\n * \n * Alternate route: `/legacy/characters/{character_id}/industry/jobs/`\n * \n * Alternate route: `/v1/characters/{character_id}/industry/jobs/`\n * \n * ---\n * This route is cached for up to 300 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {boolean} [options.includeCompleted] Whether to retrieve completed character industry jobs. Only includes jobs from the past 90 days\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Industry jobs placed by a character\n */\nexport function get_characters_character_id_industry_jobs(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      include_completed: options.includeCompleted,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_industry_jobsOperation, parameters)\n}\n\n/**\n * Paginated record of all mining done by a character for the past 30 days\n * \n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/mining/`\n * \n * Alternate route: `/legacy/characters/{character_id}/mining/`\n * \n * Alternate route: `/v1/characters/{character_id}/mining/`\n * \n * ---\n * This route is cached for up to 600 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.page] Which page of results to return\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Mining ledger of a character\n */\nexport function get_characters_character_id_mining(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      page: options.page,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_miningOperation, parameters)\n}\n\n/**\n * Extraction timers for all moon chunks being extracted by refineries belonging to a corporation.\n * \n * \n * ---\n * Alternate route: `/dev/corporation/{corporation_id}/mining/extractions/`\n * \n * Alternate route: `/legacy/corporation/{corporation_id}/mining/extractions/`\n * \n * Alternate route: `/v1/corporation/{corporation_id}/mining/extractions/`\n * \n * ---\n * This route is cached for up to 1800 seconds\n * \n * ---\n * Requires one of the following EVE corporation role(s): Station_Manager\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.page] Which page of results to return\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A list of chunk timers\n */\nexport function get_corporation_corporation_id_mining_extractions(corporationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      corporation_id: corporationId\n    },\n    query: {\n      datasource: options.datasource,\n      page: options.page,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_corporation_corporation_id_mining_extractionsOperation, parameters)\n}\n\n/**\n * Paginated list of all entities capable of observing and recording mining for a corporation\n * \n * \n * ---\n * Alternate route: `/dev/corporation/{corporation_id}/mining/observers/`\n * \n * Alternate route: `/legacy/corporation/{corporation_id}/mining/observers/`\n * \n * Alternate route: `/v1/corporation/{corporation_id}/mining/observers/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * ---\n * Requires one of the following EVE corporation role(s): Accountant\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.page] Which page of results to return\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Observer list of a corporation\n */\nexport function get_corporation_corporation_id_mining_observers(corporationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      corporation_id: corporationId\n    },\n    query: {\n      datasource: options.datasource,\n      page: options.page,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_corporation_corporation_id_mining_observersOperation, parameters)\n}\n\n/**\n * Paginated record of all mining seen by an observer\n * \n * \n * ---\n * Alternate route: `/dev/corporation/{corporation_id}/mining/observers/{observer_id}/`\n * \n * Alternate route: `/legacy/corporation/{corporation_id}/mining/observers/{observer_id}/`\n * \n * Alternate route: `/v1/corporation/{corporation_id}/mining/observers/{observer_id}/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * ---\n * Requires one of the following EVE corporation role(s): Accountant\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {number} observerId A mining observer id\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.page] Which page of results to return\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Mining ledger of an observer\n */\nexport function get_corporation_corporation_id_mining_observers_observer_id(corporationId, observerId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      corporation_id: corporationId,\n      observer_id: observerId\n    },\n    query: {\n      datasource: options.datasource,\n      page: options.page,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_corporation_corporation_id_mining_observers_observer_idOperation, parameters)\n}\n\n/**\n * List industry jobs run by a corporation\n * \n * ---\n * Alternate route: `/dev/corporations/{corporation_id}/industry/jobs/`\n * \n * Alternate route: `/legacy/corporations/{corporation_id}/industry/jobs/`\n * \n * Alternate route: `/v1/corporations/{corporation_id}/industry/jobs/`\n * \n * ---\n * This route is cached for up to 300 seconds\n * \n * ---\n * Requires one of the following EVE corporation role(s): Factory_Manager\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {boolean} [options.includeCompleted] Whether to retrieve completed corporation industry jobs. Only includes jobs from the past 90 days\n * @param {number} [options.page] Which page of results to return\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A list of corporation industry jobs\n */\nexport function get_corporations_corporation_id_industry_jobs(corporationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      corporation_id: corporationId\n    },\n    query: {\n      datasource: options.datasource,\n      include_completed: options.includeCompleted,\n      page: options.page,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_corporations_corporation_id_industry_jobsOperation, parameters)\n}\n\n/**\n * Return a list of industry facilities\n * \n * ---\n * Alternate route: `/dev/industry/facilities/`\n * \n * Alternate route: `/legacy/industry/facilities/`\n * \n * Alternate route: `/v1/industry/facilities/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} A list of facilities\n */\nexport function get_industry_facilities(options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_industry_facilitiesOperation, parameters)\n}\n\n/**\n * Return cost indices for solar systems\n * \n * ---\n * Alternate route: `/dev/industry/systems/`\n * \n * Alternate route: `/legacy/industry/systems/`\n * \n * Alternate route: `/v1/industry/systems/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} A list of cost indicies\n */\nexport function get_industry_systems(options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_industry_systemsOperation, parameters)\n}\n\nconst get_characters_character_id_industry_jobsOperation = {\n  path: '/characters/{character_id}/industry/jobs/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-industry.read_character_jobs.v1']\n    }\n  ]\n}\n\nconst get_characters_character_id_miningOperation = {\n  path: '/characters/{character_id}/mining/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-industry.read_character_mining.v1']\n    }\n  ]\n}\n\nconst get_corporation_corporation_id_mining_extractionsOperation = {\n  path: '/corporation/{corporation_id}/mining/extractions/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-industry.read_corporation_mining.v1']\n    }\n  ]\n}\n\nconst get_corporation_corporation_id_mining_observersOperation = {\n  path: '/corporation/{corporation_id}/mining/observers/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-industry.read_corporation_mining.v1']\n    }\n  ]\n}\n\nconst get_corporation_corporation_id_mining_observers_observer_idOperation = {\n  path: '/corporation/{corporation_id}/mining/observers/{observer_id}/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-industry.read_corporation_mining.v1']\n    }\n  ]\n}\n\nconst get_corporations_corporation_id_industry_jobsOperation = {\n  path: '/corporations/{corporation_id}/industry/jobs/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-industry.read_corporation_jobs.v1']\n    }\n  ]\n}\n\nconst get_industry_facilitiesOperation = {\n  path: '/industry/facilities/',\n  method: 'get'\n}\n\nconst get_industry_systemsOperation = {\n  path: '/industry/systems/',\n  method: 'get'\n}\n",
    "static": true,
    "longname": "/Users/sebs/projects/opensource/es-next-modules/packages/esi/Industry.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 224,
    "kind": "function",
    "name": "get_characters_character_id_industry_jobs",
    "memberof": "esi/Industry.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Industry.js~get_characters_character_id_industry_jobs",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Industry.js",
    "importStyle": "{get_characters_character_id_industry_jobs}",
    "description": "List industry jobs placed by a character\n\n---\nAlternate route: `/dev/characters/{character_id}/industry/jobs/`\n\nAlternate route: `/legacy/characters/{character_id}/industry/jobs/`\n\nAlternate route: `/v1/characters/{character_id}/industry/jobs/`\n\n---\nThis route is cached for up to 300 seconds",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.includeCompleted",
        "description": "Whether to retrieve completed character industry jobs. Only includes jobs from the past 90 days"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Industry jobs placed by a character"
    }
  },
  {
    "__docId__": 225,
    "kind": "function",
    "name": "get_characters_character_id_mining",
    "memberof": "esi/Industry.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Industry.js~get_characters_character_id_mining",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Industry.js",
    "importStyle": "{get_characters_character_id_mining}",
    "description": "Paginated record of all mining done by a character for the past 30 days\n\n\n---\nAlternate route: `/dev/characters/{character_id}/mining/`\n\nAlternate route: `/legacy/characters/{character_id}/mining/`\n\nAlternate route: `/v1/characters/{character_id}/mining/`\n\n---\nThis route is cached for up to 600 seconds",
    "lineNumber": 66,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Mining ledger of a character"
    }
  },
  {
    "__docId__": 226,
    "kind": "function",
    "name": "get_corporation_corporation_id_mining_extractions",
    "memberof": "esi/Industry.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Industry.js~get_corporation_corporation_id_mining_extractions",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Industry.js",
    "importStyle": "{get_corporation_corporation_id_mining_extractions}",
    "description": "Extraction timers for all moon chunks being extracted by refineries belonging to a corporation.\n\n\n---\nAlternate route: `/dev/corporation/{corporation_id}/mining/extractions/`\n\nAlternate route: `/legacy/corporation/{corporation_id}/mining/extractions/`\n\nAlternate route: `/v1/corporation/{corporation_id}/mining/extractions/`\n\n---\nThis route is cached for up to 1800 seconds\n\n---\nRequires one of the following EVE corporation role(s): Station_Manager",
    "lineNumber": 109,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of chunk timers"
    }
  },
  {
    "__docId__": 227,
    "kind": "function",
    "name": "get_corporation_corporation_id_mining_observers",
    "memberof": "esi/Industry.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Industry.js~get_corporation_corporation_id_mining_observers",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Industry.js",
    "importStyle": "{get_corporation_corporation_id_mining_observers}",
    "description": "Paginated list of all entities capable of observing and recording mining for a corporation\n\n\n---\nAlternate route: `/dev/corporation/{corporation_id}/mining/observers/`\n\nAlternate route: `/legacy/corporation/{corporation_id}/mining/observers/`\n\nAlternate route: `/v1/corporation/{corporation_id}/mining/observers/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Accountant",
    "lineNumber": 152,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Observer list of a corporation"
    }
  },
  {
    "__docId__": 228,
    "kind": "function",
    "name": "get_corporation_corporation_id_mining_observers_observer_id",
    "memberof": "esi/Industry.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Industry.js~get_corporation_corporation_id_mining_observers_observer_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Industry.js",
    "importStyle": "{get_corporation_corporation_id_mining_observers_observer_id}",
    "description": "Paginated record of all mining seen by an observer\n\n\n---\nAlternate route: `/dev/corporation/{corporation_id}/mining/observers/{observer_id}/`\n\nAlternate route: `/legacy/corporation/{corporation_id}/mining/observers/{observer_id}/`\n\nAlternate route: `/v1/corporation/{corporation_id}/mining/observers/{observer_id}/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Accountant",
    "lineNumber": 196,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "observerId",
        "description": "A mining observer id"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Mining ledger of an observer"
    }
  },
  {
    "__docId__": 229,
    "kind": "function",
    "name": "get_corporations_corporation_id_industry_jobs",
    "memberof": "esi/Industry.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Industry.js~get_corporations_corporation_id_industry_jobs",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Industry.js",
    "importStyle": "{get_corporations_corporation_id_industry_jobs}",
    "description": "List industry jobs run by a corporation\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/industry/jobs/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/industry/jobs/`\n\nAlternate route: `/v1/corporations/{corporation_id}/industry/jobs/`\n\n---\nThis route is cached for up to 300 seconds\n\n---\nRequires one of the following EVE corporation role(s): Factory_Manager",
    "lineNumber": 240,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.includeCompleted",
        "description": "Whether to retrieve completed corporation industry jobs. Only includes jobs from the past 90 days"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of corporation industry jobs"
    }
  },
  {
    "__docId__": 230,
    "kind": "function",
    "name": "get_industry_facilities",
    "memberof": "esi/Industry.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Industry.js~get_industry_facilities",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Industry.js",
    "importStyle": "{get_industry_facilities}",
    "description": "Return a list of industry facilities\n\n---\nAlternate route: `/dev/industry/facilities/`\n\nAlternate route: `/legacy/industry/facilities/`\n\nAlternate route: `/v1/industry/facilities/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 277,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of facilities"
    }
  },
  {
    "__docId__": 231,
    "kind": "function",
    "name": "get_industry_systems",
    "memberof": "esi/Industry.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Industry.js~get_industry_systems",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Industry.js",
    "importStyle": "{get_industry_systems}",
    "description": "Return cost indices for solar systems\n\n---\nAlternate route: `/dev/industry/systems/`\n\nAlternate route: `/legacy/industry/systems/`\n\nAlternate route: `/v1/industry/systems/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 308,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of cost indicies"
    }
  },
  {
    "__docId__": 232,
    "kind": "variable",
    "name": "get_characters_character_id_industry_jobsOperation",
    "memberof": "esi/Industry.js",
    "static": true,
    "longname": "esi/Industry.js~get_characters_character_id_industry_jobsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Industry.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 321,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 233,
    "kind": "variable",
    "name": "get_characters_character_id_miningOperation",
    "memberof": "esi/Industry.js",
    "static": true,
    "longname": "esi/Industry.js~get_characters_character_id_miningOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Industry.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 332,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 234,
    "kind": "variable",
    "name": "get_corporation_corporation_id_mining_extractionsOperation",
    "memberof": "esi/Industry.js",
    "static": true,
    "longname": "esi/Industry.js~get_corporation_corporation_id_mining_extractionsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Industry.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 343,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 235,
    "kind": "variable",
    "name": "get_corporation_corporation_id_mining_observersOperation",
    "memberof": "esi/Industry.js",
    "static": true,
    "longname": "esi/Industry.js~get_corporation_corporation_id_mining_observersOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Industry.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 354,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 236,
    "kind": "variable",
    "name": "get_corporation_corporation_id_mining_observers_observer_idOperation",
    "memberof": "esi/Industry.js",
    "static": true,
    "longname": "esi/Industry.js~get_corporation_corporation_id_mining_observers_observer_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Industry.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 365,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 237,
    "kind": "variable",
    "name": "get_corporations_corporation_id_industry_jobsOperation",
    "memberof": "esi/Industry.js",
    "static": true,
    "longname": "esi/Industry.js~get_corporations_corporation_id_industry_jobsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Industry.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 376,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 238,
    "kind": "variable",
    "name": "get_industry_facilitiesOperation",
    "memberof": "esi/Industry.js",
    "static": true,
    "longname": "esi/Industry.js~get_industry_facilitiesOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Industry.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 387,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 239,
    "kind": "variable",
    "name": "get_industry_systemsOperation",
    "memberof": "esi/Industry.js",
    "static": true,
    "longname": "esi/Industry.js~get_industry_systemsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Industry.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 392,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 240,
    "kind": "file",
    "name": "esi/Insurance.js",
    "content": "/** @module Insurance */\n// Auto-generated, edits will be overwritten\nimport * as gateway from './gateway'\n\n/**\n * Return available insurance levels for all ship types\n * \n * ---\n * Alternate route: `/dev/insurance/prices/`\n * \n * Alternate route: `/legacy/insurance/prices/`\n * \n * Alternate route: `/v1/insurance/prices/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {object} options Optional options\n * @param {string} [options.AcceptLanguage] Language to use in the response\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.language] Language to use in the response, takes precedence over Accept-Language\n * @return {Promise<object>} A list of insurance levels for all ship types\n */\nexport function get_insurance_prices(options) {\n  if (!options) options = {}\n  const parameters = {\n    header: {\n      'Accept-Language': options.AcceptLanguage,\n      'If-None-Match': options.IfNoneMatch\n    },\n    query: {\n      datasource: options.datasource,\n      language: options.language\n    }\n  }\n  return gateway.request(get_insurance_pricesOperation, parameters)\n}\n\nconst get_insurance_pricesOperation = {\n  path: '/insurance/prices/',\n  method: 'get'\n}\n",
    "static": true,
    "longname": "/Users/sebs/projects/opensource/es-next-modules/packages/esi/Insurance.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 241,
    "kind": "function",
    "name": "get_insurance_prices",
    "memberof": "esi/Insurance.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Insurance.js~get_insurance_prices",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Insurance.js",
    "importStyle": "{get_insurance_prices}",
    "description": "Return available insurance levels for all ship types\n\n---\nAlternate route: `/dev/insurance/prices/`\n\nAlternate route: `/legacy/insurance/prices/`\n\nAlternate route: `/v1/insurance/prices/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.AcceptLanguage",
        "description": "Language to use in the response"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.language",
        "description": "Language to use in the response, takes precedence over Accept-Language"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of insurance levels for all ship types"
    }
  },
  {
    "__docId__": 242,
    "kind": "variable",
    "name": "get_insurance_pricesOperation",
    "memberof": "esi/Insurance.js",
    "static": true,
    "longname": "esi/Insurance.js~get_insurance_pricesOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Insurance.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 243,
    "kind": "file",
    "name": "esi/Location.js",
    "content": "/** @module Location */\n// Auto-generated, edits will be overwritten\nimport * as gateway from './gateway'\n\n/**\n * Information about the characters current location. Returns the current solar system id, and also the current station or structure ID if applicable\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/location/`\n * \n * Alternate route: `/legacy/characters/{character_id}/location/`\n * \n * Alternate route: `/v1/characters/{character_id}/location/`\n * \n * ---\n * This route is cached for up to 5 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Information about the characters current location. Returns the current solar system id, and also the current station or structure ID if applicable\n */\nexport function get_characters_character_id_location(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_locationOperation, parameters)\n}\n\n/**\n * Checks if the character is currently online\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/online/`\n * \n * Alternate route: `/v2/characters/{character_id}/online/`\n * \n * ---\n * This route is cached for up to 60 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Object describing the character's online status\n */\nexport function get_characters_character_id_online(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_onlineOperation, parameters)\n}\n\n/**\n * Get the current ship type, name and id\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/ship/`\n * \n * Alternate route: `/legacy/characters/{character_id}/ship/`\n * \n * Alternate route: `/v1/characters/{character_id}/ship/`\n * \n * ---\n * This route is cached for up to 5 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Get the current ship type, name and id\n */\nexport function get_characters_character_id_ship(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_shipOperation, parameters)\n}\n\nconst get_characters_character_id_locationOperation = {\n  path: '/characters/{character_id}/location/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-location.read_location.v1']\n    }\n  ]\n}\n\nconst get_characters_character_id_onlineOperation = {\n  path: '/characters/{character_id}/online/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-location.read_online.v1']\n    }\n  ]\n}\n\nconst get_characters_character_id_shipOperation = {\n  path: '/characters/{character_id}/ship/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-location.read_ship_type.v1']\n    }\n  ]\n}\n",
    "static": true,
    "longname": "/Users/sebs/projects/opensource/es-next-modules/packages/esi/Location.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 244,
    "kind": "function",
    "name": "get_characters_character_id_location",
    "memberof": "esi/Location.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Location.js~get_characters_character_id_location",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Location.js",
    "importStyle": "{get_characters_character_id_location}",
    "description": "Information about the characters current location. Returns the current solar system id, and also the current station or structure ID if applicable\n\n---\nAlternate route: `/dev/characters/{character_id}/location/`\n\nAlternate route: `/legacy/characters/{character_id}/location/`\n\nAlternate route: `/v1/characters/{character_id}/location/`\n\n---\nThis route is cached for up to 5 seconds",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Information about the characters current location. Returns the current solar system id, and also the current station or structure ID if applicable"
    }
  },
  {
    "__docId__": 245,
    "kind": "function",
    "name": "get_characters_character_id_online",
    "memberof": "esi/Location.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Location.js~get_characters_character_id_online",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Location.js",
    "importStyle": "{get_characters_character_id_online}",
    "description": "Checks if the character is currently online\n\n---\nAlternate route: `/dev/characters/{character_id}/online/`\n\nAlternate route: `/v2/characters/{character_id}/online/`\n\n---\nThis route is cached for up to 60 seconds",
    "lineNumber": 60,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Object describing the character's online status"
    }
  },
  {
    "__docId__": 246,
    "kind": "function",
    "name": "get_characters_character_id_ship",
    "memberof": "esi/Location.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Location.js~get_characters_character_id_ship",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Location.js",
    "importStyle": "{get_characters_character_id_ship}",
    "description": "Get the current ship type, name and id\n\n---\nAlternate route: `/dev/characters/{character_id}/ship/`\n\nAlternate route: `/legacy/characters/{character_id}/ship/`\n\nAlternate route: `/v1/characters/{character_id}/ship/`\n\n---\nThis route is cached for up to 5 seconds",
    "lineNumber": 97,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Get the current ship type, name and id"
    }
  },
  {
    "__docId__": 247,
    "kind": "variable",
    "name": "get_characters_character_id_locationOperation",
    "memberof": "esi/Location.js",
    "static": true,
    "longname": "esi/Location.js~get_characters_character_id_locationOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Location.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 114,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 248,
    "kind": "variable",
    "name": "get_characters_character_id_onlineOperation",
    "memberof": "esi/Location.js",
    "static": true,
    "longname": "esi/Location.js~get_characters_character_id_onlineOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Location.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 125,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 249,
    "kind": "variable",
    "name": "get_characters_character_id_shipOperation",
    "memberof": "esi/Location.js",
    "static": true,
    "longname": "esi/Location.js~get_characters_character_id_shipOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Location.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 136,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 250,
    "kind": "file",
    "name": "esi/Loyalty.js",
    "content": "/** @module Loyalty */\n// Auto-generated, edits will be overwritten\nimport * as gateway from './gateway'\n\n/**\n * Return a list of loyalty points for all corporations the character has worked for\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/loyalty/points/`\n * \n * Alternate route: `/legacy/characters/{character_id}/loyalty/points/`\n * \n * Alternate route: `/v1/characters/{character_id}/loyalty/points/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A list of loyalty points\n */\nexport function get_characters_character_id_loyalty_points(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_loyalty_pointsOperation, parameters)\n}\n\n/**\n * Return a list of offers from a specific corporation's loyalty store\n * \n * ---\n * Alternate route: `/dev/loyalty/stores/{corporation_id}/offers/`\n * \n * Alternate route: `/legacy/loyalty/stores/{corporation_id}/offers/`\n * \n * Alternate route: `/v1/loyalty/stores/{corporation_id}/offers/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} A list of offers\n */\nexport function get_loyalty_stores_corporation_id_offers(corporationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      corporation_id: corporationId\n    },\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_loyalty_stores_corporation_id_offersOperation, parameters)\n}\n\nconst get_characters_character_id_loyalty_pointsOperation = {\n  path: '/characters/{character_id}/loyalty/points/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-characters.read_loyalty.v1']\n    }\n  ]\n}\n\nconst get_loyalty_stores_corporation_id_offersOperation = {\n  path: '/loyalty/stores/{corporation_id}/offers/',\n  method: 'get'\n}\n",
    "static": true,
    "longname": "/Users/sebs/projects/opensource/es-next-modules/packages/esi/Loyalty.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 251,
    "kind": "function",
    "name": "get_characters_character_id_loyalty_points",
    "memberof": "esi/Loyalty.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Loyalty.js~get_characters_character_id_loyalty_points",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Loyalty.js",
    "importStyle": "{get_characters_character_id_loyalty_points}",
    "description": "Return a list of loyalty points for all corporations the character has worked for\n\n---\nAlternate route: `/dev/characters/{character_id}/loyalty/points/`\n\nAlternate route: `/legacy/characters/{character_id}/loyalty/points/`\n\nAlternate route: `/v1/characters/{character_id}/loyalty/points/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of loyalty points"
    }
  },
  {
    "__docId__": 252,
    "kind": "function",
    "name": "get_loyalty_stores_corporation_id_offers",
    "memberof": "esi/Loyalty.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Loyalty.js~get_loyalty_stores_corporation_id_offers",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Loyalty.js",
    "importStyle": "{get_loyalty_stores_corporation_id_offers}",
    "description": "Return a list of offers from a specific corporation's loyalty store\n\n---\nAlternate route: `/dev/loyalty/stores/{corporation_id}/offers/`\n\nAlternate route: `/legacy/loyalty/stores/{corporation_id}/offers/`\n\nAlternate route: `/v1/loyalty/stores/{corporation_id}/offers/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 61,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of offers"
    }
  },
  {
    "__docId__": 253,
    "kind": "variable",
    "name": "get_characters_character_id_loyalty_pointsOperation",
    "memberof": "esi/Loyalty.js",
    "static": true,
    "longname": "esi/Loyalty.js~get_characters_character_id_loyalty_pointsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Loyalty.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 77,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 254,
    "kind": "variable",
    "name": "get_loyalty_stores_corporation_id_offersOperation",
    "memberof": "esi/Loyalty.js",
    "static": true,
    "longname": "esi/Loyalty.js~get_loyalty_stores_corporation_id_offersOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Loyalty.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 88,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 255,
    "kind": "file",
    "name": "esi/Mail.js",
    "content": "/** @module Mail */\n// Auto-generated, edits will be overwritten\nimport * as gateway from './gateway'\n\n/**\n * Return the 50 most recent mail headers belonging to the character that match the query criteria. Queries can be filtered by label, and last_mail_id can be used to paginate backwards\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/mail/`\n * \n * Alternate route: `/legacy/characters/{character_id}/mail/`\n * \n * Alternate route: `/v1/characters/{character_id}/mail/`\n * \n * ---\n * This route is cached for up to 30 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number[]} [options.labels] Fetch only mails that match one or more of the given labels\n * @param {number} [options.lastMailId] List only mail with an ID lower than the given ID, if present\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} The requested mail\n */\nexport function get_characters_character_id_mail(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      labels: options.labels,\n      last_mail_id: options.lastMailId,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_mailOperation, parameters)\n}\n\n/**\n * Create and send a new mail\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/mail/`\n * \n * Alternate route: `/legacy/characters/{character_id}/mail/`\n * \n * Alternate route: `/v1/characters/{character_id}/mail/`\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Mail created\n */\nexport function post_characters_character_id_mail(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    }\n  }\n  return gateway.request(post_characters_character_id_mailOperation, parameters)\n}\n\n/**\n * Return a list of the users mail labels, unread counts for each label and a total unread count.\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/mail/labels/`\n * \n * Alternate route: `/v3/characters/{character_id}/mail/labels/`\n * \n * ---\n * This route is cached for up to 30 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A list of mail labels and unread counts\n */\nexport function get_characters_character_id_mail_labels(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_mail_labelsOperation, parameters)\n}\n\n/**\n * Create a mail label\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/mail/labels/`\n * \n * Alternate route: `/legacy/characters/{character_id}/mail/labels/`\n * \n * Alternate route: `/v2/characters/{character_id}/mail/labels/`\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Label created\n */\nexport function post_characters_character_id_mail_labels(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    }\n  }\n  return gateway.request(post_characters_character_id_mail_labelsOperation, parameters)\n}\n\n/**\n * Delete a mail label\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/mail/labels/{label_id}/`\n * \n * Alternate route: `/legacy/characters/{character_id}/mail/labels/{label_id}/`\n * \n * Alternate route: `/v1/characters/{character_id}/mail/labels/{label_id}/`\n * \n * @param {number} characterId An EVE character ID\n * @param {number} labelId An EVE label id\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Label deleted\n */\nexport function delete_characters_character_id_mail_labels_label_id(characterId, labelId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId,\n      label_id: labelId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    }\n  }\n  return gateway.request(delete_characters_character_id_mail_labels_label_idOperation, parameters)\n}\n\n/**\n * Return all mailing lists that the character is subscribed to\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/mail/lists/`\n * \n * Alternate route: `/legacy/characters/{character_id}/mail/lists/`\n * \n * Alternate route: `/v1/characters/{character_id}/mail/lists/`\n * \n * ---\n * This route is cached for up to 120 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Mailing lists\n */\nexport function get_characters_character_id_mail_lists(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_mail_listsOperation, parameters)\n}\n\n/**\n * Delete a mail\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/mail/{mail_id}/`\n * \n * Alternate route: `/legacy/characters/{character_id}/mail/{mail_id}/`\n * \n * Alternate route: `/v1/characters/{character_id}/mail/{mail_id}/`\n * \n * @param {number} characterId An EVE character ID\n * @param {number} mailId An EVE mail ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Mail deleted\n */\nexport function delete_characters_character_id_mail_mail_id(characterId, mailId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId,\n      mail_id: mailId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    }\n  }\n  return gateway.request(delete_characters_character_id_mail_mail_idOperation, parameters)\n}\n\n/**\n * Return the contents of an EVE mail\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/mail/{mail_id}/`\n * \n * Alternate route: `/legacy/characters/{character_id}/mail/{mail_id}/`\n * \n * Alternate route: `/v1/characters/{character_id}/mail/{mail_id}/`\n * \n * ---\n * This route is cached for up to 30 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {number} mailId An EVE mail ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Contents of a mail\n */\nexport function get_characters_character_id_mail_mail_id(characterId, mailId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId,\n      mail_id: mailId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_mail_mail_idOperation, parameters)\n}\n\n/**\n * Update metadata about a mail\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/mail/{mail_id}/`\n * \n * Alternate route: `/legacy/characters/{character_id}/mail/{mail_id}/`\n * \n * Alternate route: `/v1/characters/{character_id}/mail/{mail_id}/`\n * \n * @param {number} characterId An EVE character ID\n * @param {number} mailId An EVE mail ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Mail updated\n */\nexport function put_characters_character_id_mail_mail_id(characterId, mailId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId,\n      mail_id: mailId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    }\n  }\n  return gateway.request(put_characters_character_id_mail_mail_idOperation, parameters)\n}\n\nconst get_characters_character_id_mailOperation = {\n  path: '/characters/{character_id}/mail/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-mail.read_mail.v1']\n    }\n  ]\n}\n\nconst post_characters_character_id_mailOperation = {\n  path: '/characters/{character_id}/mail/',\n  method: 'post',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-mail.send_mail.v1']\n    }\n  ]\n}\n\nconst get_characters_character_id_mail_labelsOperation = {\n  path: '/characters/{character_id}/mail/labels/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-mail.read_mail.v1']\n    }\n  ]\n}\n\nconst post_characters_character_id_mail_labelsOperation = {\n  path: '/characters/{character_id}/mail/labels/',\n  method: 'post',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-mail.organize_mail.v1']\n    }\n  ]\n}\n\nconst delete_characters_character_id_mail_labels_label_idOperation = {\n  path: '/characters/{character_id}/mail/labels/{label_id}/',\n  method: 'delete',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-mail.organize_mail.v1']\n    }\n  ]\n}\n\nconst get_characters_character_id_mail_listsOperation = {\n  path: '/characters/{character_id}/mail/lists/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-mail.read_mail.v1']\n    }\n  ]\n}\n\nconst delete_characters_character_id_mail_mail_idOperation = {\n  path: '/characters/{character_id}/mail/{mail_id}/',\n  method: 'delete',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-mail.organize_mail.v1']\n    }\n  ]\n}\n\nconst get_characters_character_id_mail_mail_idOperation = {\n  path: '/characters/{character_id}/mail/{mail_id}/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-mail.read_mail.v1']\n    }\n  ]\n}\n\nconst put_characters_character_id_mail_mail_idOperation = {\n  path: '/characters/{character_id}/mail/{mail_id}/',\n  method: 'put',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-mail.organize_mail.v1']\n    }\n  ]\n}\n",
    "static": true,
    "longname": "/Users/sebs/projects/opensource/es-next-modules/packages/esi/Mail.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 256,
    "kind": "function",
    "name": "get_characters_character_id_mail",
    "memberof": "esi/Mail.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Mail.js~get_characters_character_id_mail",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Mail.js",
    "importStyle": "{get_characters_character_id_mail}",
    "description": "Return the 50 most recent mail headers belonging to the character that match the query criteria. Queries can be filtered by label, and last_mail_id can be used to paginate backwards\n\n---\nAlternate route: `/dev/characters/{character_id}/mail/`\n\nAlternate route: `/legacy/characters/{character_id}/mail/`\n\nAlternate route: `/v1/characters/{character_id}/mail/`\n\n---\nThis route is cached for up to 30 seconds",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number[]"
        ],
        "spread": false,
        "optional": true,
        "name": "options.labels",
        "description": "Fetch only mails that match one or more of the given labels"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.lastMailId",
        "description": "List only mail with an ID lower than the given ID, if present"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "The requested mail"
    }
  },
  {
    "__docId__": 257,
    "kind": "function",
    "name": "post_characters_character_id_mail",
    "memberof": "esi/Mail.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Mail.js~post_characters_character_id_mail",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Mail.js",
    "importStyle": "{post_characters_character_id_mail}",
    "description": "Create and send a new mail\n\n---\nAlternate route: `/dev/characters/{character_id}/mail/`\n\nAlternate route: `/legacy/characters/{character_id}/mail/`\n\nAlternate route: `/v1/characters/{character_id}/mail/`",
    "lineNumber": 62,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Mail created"
    }
  },
  {
    "__docId__": 258,
    "kind": "function",
    "name": "get_characters_character_id_mail_labels",
    "memberof": "esi/Mail.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Mail.js~get_characters_character_id_mail_labels",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Mail.js",
    "importStyle": "{get_characters_character_id_mail_labels}",
    "description": "Return a list of the users mail labels, unread counts for each label and a total unread count.\n\n---\nAlternate route: `/dev/characters/{character_id}/mail/labels/`\n\nAlternate route: `/v3/characters/{character_id}/mail/labels/`\n\n---\nThis route is cached for up to 30 seconds",
    "lineNumber": 94,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of mail labels and unread counts"
    }
  },
  {
    "__docId__": 259,
    "kind": "function",
    "name": "post_characters_character_id_mail_labels",
    "memberof": "esi/Mail.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Mail.js~post_characters_character_id_mail_labels",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Mail.js",
    "importStyle": "{post_characters_character_id_mail_labels}",
    "description": "Create a mail label\n\n---\nAlternate route: `/dev/characters/{character_id}/mail/labels/`\n\nAlternate route: `/legacy/characters/{character_id}/mail/labels/`\n\nAlternate route: `/v2/characters/{character_id}/mail/labels/`",
    "lineNumber": 127,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Label created"
    }
  },
  {
    "__docId__": 260,
    "kind": "function",
    "name": "delete_characters_character_id_mail_labels_label_id",
    "memberof": "esi/Mail.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Mail.js~delete_characters_character_id_mail_labels_label_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Mail.js",
    "importStyle": "{delete_characters_character_id_mail_labels_label_id}",
    "description": "Delete a mail label\n\n---\nAlternate route: `/dev/characters/{character_id}/mail/labels/{label_id}/`\n\nAlternate route: `/legacy/characters/{character_id}/mail/labels/{label_id}/`\n\nAlternate route: `/v1/characters/{character_id}/mail/labels/{label_id}/`",
    "lineNumber": 158,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "labelId",
        "description": "An EVE label id"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Label deleted"
    }
  },
  {
    "__docId__": 261,
    "kind": "function",
    "name": "get_characters_character_id_mail_lists",
    "memberof": "esi/Mail.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Mail.js~get_characters_character_id_mail_lists",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Mail.js",
    "importStyle": "{get_characters_character_id_mail_lists}",
    "description": "Return all mailing lists that the character is subscribed to\n\n---\nAlternate route: `/dev/characters/{character_id}/mail/lists/`\n\nAlternate route: `/legacy/characters/{character_id}/mail/lists/`\n\nAlternate route: `/v1/characters/{character_id}/mail/lists/`\n\n---\nThis route is cached for up to 120 seconds",
    "lineNumber": 193,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Mailing lists"
    }
  },
  {
    "__docId__": 262,
    "kind": "function",
    "name": "delete_characters_character_id_mail_mail_id",
    "memberof": "esi/Mail.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Mail.js~delete_characters_character_id_mail_mail_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Mail.js",
    "importStyle": "{delete_characters_character_id_mail_mail_id}",
    "description": "Delete a mail\n\n---\nAlternate route: `/dev/characters/{character_id}/mail/{mail_id}/`\n\nAlternate route: `/legacy/characters/{character_id}/mail/{mail_id}/`\n\nAlternate route: `/v1/characters/{character_id}/mail/{mail_id}/`",
    "lineNumber": 227,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "mailId",
        "description": "An EVE mail ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Mail deleted"
    }
  },
  {
    "__docId__": 263,
    "kind": "function",
    "name": "get_characters_character_id_mail_mail_id",
    "memberof": "esi/Mail.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Mail.js~get_characters_character_id_mail_mail_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Mail.js",
    "importStyle": "{get_characters_character_id_mail_mail_id}",
    "description": "Return the contents of an EVE mail\n\n---\nAlternate route: `/dev/characters/{character_id}/mail/{mail_id}/`\n\nAlternate route: `/legacy/characters/{character_id}/mail/{mail_id}/`\n\nAlternate route: `/v1/characters/{character_id}/mail/{mail_id}/`\n\n---\nThis route is cached for up to 30 seconds",
    "lineNumber": 263,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "mailId",
        "description": "An EVE mail ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Contents of a mail"
    }
  },
  {
    "__docId__": 264,
    "kind": "function",
    "name": "put_characters_character_id_mail_mail_id",
    "memberof": "esi/Mail.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Mail.js~put_characters_character_id_mail_mail_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Mail.js",
    "importStyle": "{put_characters_character_id_mail_mail_id}",
    "description": "Update metadata about a mail\n\n---\nAlternate route: `/dev/characters/{character_id}/mail/{mail_id}/`\n\nAlternate route: `/legacy/characters/{character_id}/mail/{mail_id}/`\n\nAlternate route: `/v1/characters/{character_id}/mail/{mail_id}/`",
    "lineNumber": 298,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "mailId",
        "description": "An EVE mail ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Mail updated"
    }
  },
  {
    "__docId__": 265,
    "kind": "variable",
    "name": "get_characters_character_id_mailOperation",
    "memberof": "esi/Mail.js",
    "static": true,
    "longname": "esi/Mail.js~get_characters_character_id_mailOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Mail.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 313,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 266,
    "kind": "variable",
    "name": "post_characters_character_id_mailOperation",
    "memberof": "esi/Mail.js",
    "static": true,
    "longname": "esi/Mail.js~post_characters_character_id_mailOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Mail.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 324,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 267,
    "kind": "variable",
    "name": "get_characters_character_id_mail_labelsOperation",
    "memberof": "esi/Mail.js",
    "static": true,
    "longname": "esi/Mail.js~get_characters_character_id_mail_labelsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Mail.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 335,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 268,
    "kind": "variable",
    "name": "post_characters_character_id_mail_labelsOperation",
    "memberof": "esi/Mail.js",
    "static": true,
    "longname": "esi/Mail.js~post_characters_character_id_mail_labelsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Mail.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 346,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 269,
    "kind": "variable",
    "name": "delete_characters_character_id_mail_labels_label_idOperation",
    "memberof": "esi/Mail.js",
    "static": true,
    "longname": "esi/Mail.js~delete_characters_character_id_mail_labels_label_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Mail.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 357,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 270,
    "kind": "variable",
    "name": "get_characters_character_id_mail_listsOperation",
    "memberof": "esi/Mail.js",
    "static": true,
    "longname": "esi/Mail.js~get_characters_character_id_mail_listsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Mail.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 368,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 271,
    "kind": "variable",
    "name": "delete_characters_character_id_mail_mail_idOperation",
    "memberof": "esi/Mail.js",
    "static": true,
    "longname": "esi/Mail.js~delete_characters_character_id_mail_mail_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Mail.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 379,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 272,
    "kind": "variable",
    "name": "get_characters_character_id_mail_mail_idOperation",
    "memberof": "esi/Mail.js",
    "static": true,
    "longname": "esi/Mail.js~get_characters_character_id_mail_mail_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Mail.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 390,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 273,
    "kind": "variable",
    "name": "put_characters_character_id_mail_mail_idOperation",
    "memberof": "esi/Mail.js",
    "static": true,
    "longname": "esi/Mail.js~put_characters_character_id_mail_mail_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Mail.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 401,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 274,
    "kind": "file",
    "name": "esi/Market.js",
    "content": "/** @module Market */\n// Auto-generated, edits will be overwritten\nimport * as gateway from './gateway'\n\n/**\n * List open market orders placed by a character\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/orders/`\n * \n * Alternate route: `/v2/characters/{character_id}/orders/`\n * \n * ---\n * This route is cached for up to 1200 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Open market orders placed by a character\n */\nexport function get_characters_character_id_orders(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_ordersOperation, parameters)\n}\n\n/**\n * List cancelled and expired market orders placed by a character up to 90 days in the past.\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/orders/history/`\n * \n * Alternate route: `/legacy/characters/{character_id}/orders/history/`\n * \n * Alternate route: `/v1/characters/{character_id}/orders/history/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.page] Which page of results to return\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Expired and cancelled market orders placed by a character\n */\nexport function get_characters_character_id_orders_history(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      page: options.page,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_orders_historyOperation, parameters)\n}\n\n/**\n * List open market orders placed on behalf of a corporation\n * \n * ---\n * Alternate route: `/dev/corporations/{corporation_id}/orders/`\n * \n * Alternate route: `/v3/corporations/{corporation_id}/orders/`\n * \n * ---\n * This route is cached for up to 1200 seconds\n * \n * ---\n * Requires one of the following EVE corporation role(s): Accountant, Trader\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.page] Which page of results to return\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A list of open market orders\n */\nexport function get_corporations_corporation_id_orders(corporationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      corporation_id: corporationId\n    },\n    query: {\n      datasource: options.datasource,\n      page: options.page,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_corporations_corporation_id_ordersOperation, parameters)\n}\n\n/**\n * List cancelled and expired market orders placed on behalf of a corporation up to 90 days in the past.\n * \n * ---\n * Alternate route: `/dev/corporations/{corporation_id}/orders/history/`\n * \n * Alternate route: `/v2/corporations/{corporation_id}/orders/history/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * ---\n * Requires one of the following EVE corporation role(s): Accountant, Trader\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.page] Which page of results to return\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Expired and cancelled market orders placed on behalf of a corporation\n */\nexport function get_corporations_corporation_id_orders_history(corporationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      corporation_id: corporationId\n    },\n    query: {\n      datasource: options.datasource,\n      page: options.page,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_corporations_corporation_id_orders_historyOperation, parameters)\n}\n\n/**\n * Get a list of item groups\n * \n * ---\n * Alternate route: `/dev/markets/groups/`\n * \n * Alternate route: `/legacy/markets/groups/`\n * \n * Alternate route: `/v1/markets/groups/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} A list of item group ids\n */\nexport function get_markets_groups(options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_markets_groupsOperation, parameters)\n}\n\n/**\n * Get information on an item group\n * \n * ---\n * Alternate route: `/dev/markets/groups/{market_group_id}/`\n * \n * Alternate route: `/legacy/markets/groups/{market_group_id}/`\n * \n * Alternate route: `/v1/markets/groups/{market_group_id}/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {number} marketGroupId An Eve item group ID\n * @param {object} options Optional options\n * @param {string} [options.AcceptLanguage] Language to use in the response\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.language] Language to use in the response, takes precedence over Accept-Language\n * @return {Promise<object>} Information about an item group\n */\nexport function get_markets_groups_market_group_id(marketGroupId, options) {\n  if (!options) options = {}\n  const parameters = {\n    header: {\n      'Accept-Language': options.AcceptLanguage,\n      'If-None-Match': options.IfNoneMatch\n    },\n    query: {\n      datasource: options.datasource,\n      language: options.language\n    },\n    path: {\n      market_group_id: marketGroupId\n    }\n  }\n  return gateway.request(get_markets_groups_market_group_idOperation, parameters)\n}\n\n/**\n * Return a list of prices\n * \n * ---\n * Alternate route: `/dev/markets/prices/`\n * \n * Alternate route: `/legacy/markets/prices/`\n * \n * Alternate route: `/v1/markets/prices/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} A list of prices\n */\nexport function get_markets_prices(options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_markets_pricesOperation, parameters)\n}\n\n/**\n * Return all orders in a structure\n * \n * ---\n * Alternate route: `/dev/markets/structures/{structure_id}/`\n * \n * Alternate route: `/legacy/markets/structures/{structure_id}/`\n * \n * Alternate route: `/v1/markets/structures/{structure_id}/`\n * \n * ---\n * This route is cached for up to 300 seconds\n * \n * @param {number} structureId Return orders in this structure\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.page] Which page of results to return\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A list of orders\n */\nexport function get_markets_structures_structure_id(structureId, options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource,\n      page: options.page,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    },\n    path: {\n      structure_id: structureId\n    }\n  }\n  return gateway.request(get_markets_structures_structure_idOperation, parameters)\n}\n\n/**\n * Return a list of historical market statistics for the specified type in a region\n * \n * ---\n * Alternate route: `/dev/markets/{region_id}/history/`\n * \n * Alternate route: `/legacy/markets/{region_id}/history/`\n * \n * Alternate route: `/v1/markets/{region_id}/history/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {number} regionId Return statistics in this region\n * @param {number} typeId Return statistics for this type\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} A list of historical market statistics\n */\nexport function get_markets_region_id_history(regionId, typeId, options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource,\n      type_id: typeId\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    },\n    path: {\n      region_id: regionId\n    }\n  }\n  return gateway.request(get_markets_region_id_historyOperation, parameters)\n}\n\n/**\n * Return a list of orders in a region\n * \n * ---\n * Alternate route: `/dev/markets/{region_id}/orders/`\n * \n * Alternate route: `/legacy/markets/{region_id}/orders/`\n * \n * Alternate route: `/v1/markets/{region_id}/orders/`\n * \n * ---\n * This route is cached for up to 300 seconds\n * \n * @param {string} orderType Filter buy/sell orders, return all orders by default. If you query without type_id, we always return both buy and sell orders\n * @param {number} regionId Return orders in this region\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.page] Which page of results to return\n * @param {number} [options.typeId] Return orders only for this type\n * @return {Promise<object>} A list of orders\n */\nexport function get_markets_region_id_orders(orderType, regionId, options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource,\n      order_type: orderType,\n      page: options.page,\n      type_id: options.typeId\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    },\n    path: {\n      region_id: regionId\n    }\n  }\n  return gateway.request(get_markets_region_id_ordersOperation, parameters)\n}\n\n/**\n * Return a list of type IDs that have active orders in the region, for efficient market indexing.\n * \n * ---\n * Alternate route: `/dev/markets/{region_id}/types/`\n * \n * Alternate route: `/legacy/markets/{region_id}/types/`\n * \n * Alternate route: `/v1/markets/{region_id}/types/`\n * \n * ---\n * This route is cached for up to 600 seconds\n * \n * @param {number} regionId Return statistics in this region\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.page] Which page of results to return\n * @return {Promise<object>} A list of type IDs\n */\nexport function get_markets_region_id_types(regionId, options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource,\n      page: options.page\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    },\n    path: {\n      region_id: regionId\n    }\n  }\n  return gateway.request(get_markets_region_id_typesOperation, parameters)\n}\n\nconst get_characters_character_id_ordersOperation = {\n  path: '/characters/{character_id}/orders/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-markets.read_character_orders.v1']\n    }\n  ]\n}\n\nconst get_characters_character_id_orders_historyOperation = {\n  path: '/characters/{character_id}/orders/history/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-markets.read_character_orders.v1']\n    }\n  ]\n}\n\nconst get_corporations_corporation_id_ordersOperation = {\n  path: '/corporations/{corporation_id}/orders/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-markets.read_corporation_orders.v1']\n    }\n  ]\n}\n\nconst get_corporations_corporation_id_orders_historyOperation = {\n  path: '/corporations/{corporation_id}/orders/history/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-markets.read_corporation_orders.v1']\n    }\n  ]\n}\n\nconst get_markets_groupsOperation = {\n  path: '/markets/groups/',\n  method: 'get'\n}\n\nconst get_markets_groups_market_group_idOperation = {\n  path: '/markets/groups/{market_group_id}/',\n  method: 'get'\n}\n\nconst get_markets_pricesOperation = {\n  path: '/markets/prices/',\n  method: 'get'\n}\n\nconst get_markets_structures_structure_idOperation = {\n  path: '/markets/structures/{structure_id}/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-markets.structure_markets.v1']\n    }\n  ]\n}\n\nconst get_markets_region_id_historyOperation = {\n  path: '/markets/{region_id}/history/',\n  method: 'get'\n}\n\nconst get_markets_region_id_ordersOperation = {\n  path: '/markets/{region_id}/orders/',\n  method: 'get'\n}\n\nconst get_markets_region_id_typesOperation = {\n  path: '/markets/{region_id}/types/',\n  method: 'get'\n}\n",
    "static": true,
    "longname": "/Users/sebs/projects/opensource/es-next-modules/packages/esi/Market.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 275,
    "kind": "function",
    "name": "get_characters_character_id_orders",
    "memberof": "esi/Market.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Market.js~get_characters_character_id_orders",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Market.js",
    "importStyle": "{get_characters_character_id_orders}",
    "description": "List open market orders placed by a character\n\n---\nAlternate route: `/dev/characters/{character_id}/orders/`\n\nAlternate route: `/v2/characters/{character_id}/orders/`\n\n---\nThis route is cached for up to 1200 seconds",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Open market orders placed by a character"
    }
  },
  {
    "__docId__": 276,
    "kind": "function",
    "name": "get_characters_character_id_orders_history",
    "memberof": "esi/Market.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Market.js~get_characters_character_id_orders_history",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Market.js",
    "importStyle": "{get_characters_character_id_orders_history}",
    "description": "List cancelled and expired market orders placed by a character up to 90 days in the past.\n\n---\nAlternate route: `/dev/characters/{character_id}/orders/history/`\n\nAlternate route: `/legacy/characters/{character_id}/orders/history/`\n\nAlternate route: `/v1/characters/{character_id}/orders/history/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 61,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Expired and cancelled market orders placed by a character"
    }
  },
  {
    "__docId__": 277,
    "kind": "function",
    "name": "get_corporations_corporation_id_orders",
    "memberof": "esi/Market.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Market.js~get_corporations_corporation_id_orders",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Market.js",
    "importStyle": "{get_corporations_corporation_id_orders}",
    "description": "List open market orders placed on behalf of a corporation\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/orders/`\n\nAlternate route: `/v3/corporations/{corporation_id}/orders/`\n\n---\nThis route is cached for up to 1200 seconds\n\n---\nRequires one of the following EVE corporation role(s): Accountant, Trader",
    "lineNumber": 101,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of open market orders"
    }
  },
  {
    "__docId__": 278,
    "kind": "function",
    "name": "get_corporations_corporation_id_orders_history",
    "memberof": "esi/Market.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Market.js~get_corporations_corporation_id_orders_history",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Market.js",
    "importStyle": "{get_corporations_corporation_id_orders_history}",
    "description": "List cancelled and expired market orders placed on behalf of a corporation up to 90 days in the past.\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/orders/history/`\n\nAlternate route: `/v2/corporations/{corporation_id}/orders/history/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Accountant, Trader",
    "lineNumber": 141,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Expired and cancelled market orders placed on behalf of a corporation"
    }
  },
  {
    "__docId__": 279,
    "kind": "function",
    "name": "get_markets_groups",
    "memberof": "esi/Market.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Market.js~get_markets_groups",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Market.js",
    "importStyle": "{get_markets_groups}",
    "description": "Get a list of item groups\n\n---\nAlternate route: `/dev/markets/groups/`\n\nAlternate route: `/legacy/markets/groups/`\n\nAlternate route: `/v1/markets/groups/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 177,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of item group ids"
    }
  },
  {
    "__docId__": 280,
    "kind": "function",
    "name": "get_markets_groups_market_group_id",
    "memberof": "esi/Market.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Market.js~get_markets_groups_market_group_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Market.js",
    "importStyle": "{get_markets_groups_market_group_id}",
    "description": "Get information on an item group\n\n---\nAlternate route: `/dev/markets/groups/{market_group_id}/`\n\nAlternate route: `/legacy/markets/groups/{market_group_id}/`\n\nAlternate route: `/v1/markets/groups/{market_group_id}/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 211,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "marketGroupId",
        "description": "An Eve item group ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.AcceptLanguage",
        "description": "Language to use in the response"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.language",
        "description": "Language to use in the response, takes precedence over Accept-Language"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Information about an item group"
    }
  },
  {
    "__docId__": 281,
    "kind": "function",
    "name": "get_markets_prices",
    "memberof": "esi/Market.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Market.js~get_markets_prices",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Market.js",
    "importStyle": "{get_markets_prices}",
    "description": "Return a list of prices\n\n---\nAlternate route: `/dev/markets/prices/`\n\nAlternate route: `/legacy/markets/prices/`\n\nAlternate route: `/v1/markets/prices/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 247,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of prices"
    }
  },
  {
    "__docId__": 282,
    "kind": "function",
    "name": "get_markets_structures_structure_id",
    "memberof": "esi/Market.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Market.js~get_markets_structures_structure_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Market.js",
    "importStyle": "{get_markets_structures_structure_id}",
    "description": "Return all orders in a structure\n\n---\nAlternate route: `/dev/markets/structures/{structure_id}/`\n\nAlternate route: `/legacy/markets/structures/{structure_id}/`\n\nAlternate route: `/v1/markets/structures/{structure_id}/`\n\n---\nThis route is cached for up to 300 seconds",
    "lineNumber": 281,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "structureId",
        "description": "Return orders in this structure"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of orders"
    }
  },
  {
    "__docId__": 283,
    "kind": "function",
    "name": "get_markets_region_id_history",
    "memberof": "esi/Market.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Market.js~get_markets_region_id_history",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Market.js",
    "importStyle": "{get_markets_region_id_history}",
    "description": "Return a list of historical market statistics for the specified type in a region\n\n---\nAlternate route: `/dev/markets/{region_id}/history/`\n\nAlternate route: `/legacy/markets/{region_id}/history/`\n\nAlternate route: `/v1/markets/{region_id}/history/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 319,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "regionId",
        "description": "Return statistics in this region"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "typeId",
        "description": "Return statistics for this type"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of historical market statistics"
    }
  },
  {
    "__docId__": 284,
    "kind": "function",
    "name": "get_markets_region_id_orders",
    "memberof": "esi/Market.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Market.js~get_markets_region_id_orders",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Market.js",
    "importStyle": "{get_markets_region_id_orders}",
    "description": "Return a list of orders in a region\n\n---\nAlternate route: `/dev/markets/{region_id}/orders/`\n\nAlternate route: `/legacy/markets/{region_id}/orders/`\n\nAlternate route: `/v1/markets/{region_id}/orders/`\n\n---\nThis route is cached for up to 300 seconds",
    "lineNumber": 358,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "orderType",
        "description": "Filter buy/sell orders, return all orders by default. If you query without type_id, we always return both buy and sell orders"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "regionId",
        "description": "Return orders in this region"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.typeId",
        "description": "Return orders only for this type"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of orders"
    }
  },
  {
    "__docId__": 285,
    "kind": "function",
    "name": "get_markets_region_id_types",
    "memberof": "esi/Market.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Market.js~get_markets_region_id_types",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Market.js",
    "importStyle": "{get_markets_region_id_types}",
    "description": "Return a list of type IDs that have active orders in the region, for efficient market indexing.\n\n---\nAlternate route: `/dev/markets/{region_id}/types/`\n\nAlternate route: `/legacy/markets/{region_id}/types/`\n\nAlternate route: `/v1/markets/{region_id}/types/`\n\n---\nThis route is cached for up to 600 seconds",
    "lineNumber": 397,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "regionId",
        "description": "Return statistics in this region"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of type IDs"
    }
  },
  {
    "__docId__": 286,
    "kind": "variable",
    "name": "get_characters_character_id_ordersOperation",
    "memberof": "esi/Market.js",
    "static": true,
    "longname": "esi/Market.js~get_characters_character_id_ordersOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Market.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 414,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 287,
    "kind": "variable",
    "name": "get_characters_character_id_orders_historyOperation",
    "memberof": "esi/Market.js",
    "static": true,
    "longname": "esi/Market.js~get_characters_character_id_orders_historyOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Market.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 425,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 288,
    "kind": "variable",
    "name": "get_corporations_corporation_id_ordersOperation",
    "memberof": "esi/Market.js",
    "static": true,
    "longname": "esi/Market.js~get_corporations_corporation_id_ordersOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Market.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 436,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 289,
    "kind": "variable",
    "name": "get_corporations_corporation_id_orders_historyOperation",
    "memberof": "esi/Market.js",
    "static": true,
    "longname": "esi/Market.js~get_corporations_corporation_id_orders_historyOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Market.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 447,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 290,
    "kind": "variable",
    "name": "get_markets_groupsOperation",
    "memberof": "esi/Market.js",
    "static": true,
    "longname": "esi/Market.js~get_markets_groupsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Market.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 458,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 291,
    "kind": "variable",
    "name": "get_markets_groups_market_group_idOperation",
    "memberof": "esi/Market.js",
    "static": true,
    "longname": "esi/Market.js~get_markets_groups_market_group_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Market.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 463,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 292,
    "kind": "variable",
    "name": "get_markets_pricesOperation",
    "memberof": "esi/Market.js",
    "static": true,
    "longname": "esi/Market.js~get_markets_pricesOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Market.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 468,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 293,
    "kind": "variable",
    "name": "get_markets_structures_structure_idOperation",
    "memberof": "esi/Market.js",
    "static": true,
    "longname": "esi/Market.js~get_markets_structures_structure_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Market.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 473,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 294,
    "kind": "variable",
    "name": "get_markets_region_id_historyOperation",
    "memberof": "esi/Market.js",
    "static": true,
    "longname": "esi/Market.js~get_markets_region_id_historyOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Market.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 484,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 295,
    "kind": "variable",
    "name": "get_markets_region_id_ordersOperation",
    "memberof": "esi/Market.js",
    "static": true,
    "longname": "esi/Market.js~get_markets_region_id_ordersOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Market.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 489,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 296,
    "kind": "variable",
    "name": "get_markets_region_id_typesOperation",
    "memberof": "esi/Market.js",
    "static": true,
    "longname": "esi/Market.js~get_markets_region_id_typesOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Market.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 494,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 297,
    "kind": "file",
    "name": "esi/Opportunities.js",
    "content": "/** @module Opportunities */\n// Auto-generated, edits will be overwritten\nimport * as gateway from './gateway'\n\n/**\n * Return a list of tasks finished by a character\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/opportunities/`\n * \n * Alternate route: `/legacy/characters/{character_id}/opportunities/`\n * \n * Alternate route: `/v1/characters/{character_id}/opportunities/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A list of opportunities task ids\n */\nexport function get_characters_character_id_opportunities(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_opportunitiesOperation, parameters)\n}\n\n/**\n * Return a list of opportunities groups\n * \n * ---\n * Alternate route: `/dev/opportunities/groups/`\n * \n * Alternate route: `/legacy/opportunities/groups/`\n * \n * Alternate route: `/v1/opportunities/groups/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} A list of opportunities group ids\n */\nexport function get_opportunities_groups(options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_opportunities_groupsOperation, parameters)\n}\n\n/**\n * Return information of an opportunities group\n * \n * ---\n * Alternate route: `/dev/opportunities/groups/{group_id}/`\n * \n * Alternate route: `/legacy/opportunities/groups/{group_id}/`\n * \n * Alternate route: `/v1/opportunities/groups/{group_id}/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {number} groupId ID of an opportunities group\n * @param {object} options Optional options\n * @param {string} [options.AcceptLanguage] Language to use in the response\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.language] Language to use in the response, takes precedence over Accept-Language\n * @return {Promise<object>} Details of an opportunities group\n */\nexport function get_opportunities_groups_group_id(groupId, options) {\n  if (!options) options = {}\n  const parameters = {\n    header: {\n      'Accept-Language': options.AcceptLanguage,\n      'If-None-Match': options.IfNoneMatch\n    },\n    query: {\n      datasource: options.datasource,\n      language: options.language\n    },\n    path: {\n      group_id: groupId\n    }\n  }\n  return gateway.request(get_opportunities_groups_group_idOperation, parameters)\n}\n\n/**\n * Return a list of opportunities tasks\n * \n * ---\n * Alternate route: `/dev/opportunities/tasks/`\n * \n * Alternate route: `/legacy/opportunities/tasks/`\n * \n * Alternate route: `/v1/opportunities/tasks/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} A list of opportunities task ids\n */\nexport function get_opportunities_tasks(options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_opportunities_tasksOperation, parameters)\n}\n\n/**\n * Return information of an opportunities task\n * \n * ---\n * Alternate route: `/dev/opportunities/tasks/{task_id}/`\n * \n * Alternate route: `/legacy/opportunities/tasks/{task_id}/`\n * \n * Alternate route: `/v1/opportunities/tasks/{task_id}/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {number} taskId ID of an opportunities task\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} Details of an opportunities task\n */\nexport function get_opportunities_tasks_task_id(taskId, options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    },\n    path: {\n      task_id: taskId\n    }\n  }\n  return gateway.request(get_opportunities_tasks_task_idOperation, parameters)\n}\n\nconst get_characters_character_id_opportunitiesOperation = {\n  path: '/characters/{character_id}/opportunities/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-characters.read_opportunities.v1']\n    }\n  ]\n}\n\nconst get_opportunities_groupsOperation = {\n  path: '/opportunities/groups/',\n  method: 'get'\n}\n\nconst get_opportunities_groups_group_idOperation = {\n  path: '/opportunities/groups/{group_id}/',\n  method: 'get'\n}\n\nconst get_opportunities_tasksOperation = {\n  path: '/opportunities/tasks/',\n  method: 'get'\n}\n\nconst get_opportunities_tasks_task_idOperation = {\n  path: '/opportunities/tasks/{task_id}/',\n  method: 'get'\n}\n",
    "static": true,
    "longname": "/Users/sebs/projects/opensource/es-next-modules/packages/esi/Opportunities.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 298,
    "kind": "function",
    "name": "get_characters_character_id_opportunities",
    "memberof": "esi/Opportunities.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Opportunities.js~get_characters_character_id_opportunities",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Opportunities.js",
    "importStyle": "{get_characters_character_id_opportunities}",
    "description": "Return a list of tasks finished by a character\n\n---\nAlternate route: `/dev/characters/{character_id}/opportunities/`\n\nAlternate route: `/legacy/characters/{character_id}/opportunities/`\n\nAlternate route: `/v1/characters/{character_id}/opportunities/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of opportunities task ids"
    }
  },
  {
    "__docId__": 299,
    "kind": "function",
    "name": "get_opportunities_groups",
    "memberof": "esi/Opportunities.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Opportunities.js~get_opportunities_groups",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Opportunities.js",
    "importStyle": "{get_opportunities_groups}",
    "description": "Return a list of opportunities groups\n\n---\nAlternate route: `/dev/opportunities/groups/`\n\nAlternate route: `/legacy/opportunities/groups/`\n\nAlternate route: `/v1/opportunities/groups/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 60,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of opportunities group ids"
    }
  },
  {
    "__docId__": 300,
    "kind": "function",
    "name": "get_opportunities_groups_group_id",
    "memberof": "esi/Opportunities.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Opportunities.js~get_opportunities_groups_group_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Opportunities.js",
    "importStyle": "{get_opportunities_groups_group_id}",
    "description": "Return information of an opportunities group\n\n---\nAlternate route: `/dev/opportunities/groups/{group_id}/`\n\nAlternate route: `/legacy/opportunities/groups/{group_id}/`\n\nAlternate route: `/v1/opportunities/groups/{group_id}/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 94,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "groupId",
        "description": "ID of an opportunities group"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.AcceptLanguage",
        "description": "Language to use in the response"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.language",
        "description": "Language to use in the response, takes precedence over Accept-Language"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Details of an opportunities group"
    }
  },
  {
    "__docId__": 301,
    "kind": "function",
    "name": "get_opportunities_tasks",
    "memberof": "esi/Opportunities.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Opportunities.js~get_opportunities_tasks",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Opportunities.js",
    "importStyle": "{get_opportunities_tasks}",
    "description": "Return a list of opportunities tasks\n\n---\nAlternate route: `/dev/opportunities/tasks/`\n\nAlternate route: `/legacy/opportunities/tasks/`\n\nAlternate route: `/v1/opportunities/tasks/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 130,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of opportunities task ids"
    }
  },
  {
    "__docId__": 302,
    "kind": "function",
    "name": "get_opportunities_tasks_task_id",
    "memberof": "esi/Opportunities.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Opportunities.js~get_opportunities_tasks_task_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Opportunities.js",
    "importStyle": "{get_opportunities_tasks_task_id}",
    "description": "Return information of an opportunities task\n\n---\nAlternate route: `/dev/opportunities/tasks/{task_id}/`\n\nAlternate route: `/legacy/opportunities/tasks/{task_id}/`\n\nAlternate route: `/v1/opportunities/tasks/{task_id}/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 162,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "taskId",
        "description": "ID of an opportunities task"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Details of an opportunities task"
    }
  },
  {
    "__docId__": 303,
    "kind": "variable",
    "name": "get_characters_character_id_opportunitiesOperation",
    "memberof": "esi/Opportunities.js",
    "static": true,
    "longname": "esi/Opportunities.js~get_characters_character_id_opportunitiesOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Opportunities.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 178,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 304,
    "kind": "variable",
    "name": "get_opportunities_groupsOperation",
    "memberof": "esi/Opportunities.js",
    "static": true,
    "longname": "esi/Opportunities.js~get_opportunities_groupsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Opportunities.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 189,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 305,
    "kind": "variable",
    "name": "get_opportunities_groups_group_idOperation",
    "memberof": "esi/Opportunities.js",
    "static": true,
    "longname": "esi/Opportunities.js~get_opportunities_groups_group_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Opportunities.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 194,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 306,
    "kind": "variable",
    "name": "get_opportunities_tasksOperation",
    "memberof": "esi/Opportunities.js",
    "static": true,
    "longname": "esi/Opportunities.js~get_opportunities_tasksOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Opportunities.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 199,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 307,
    "kind": "variable",
    "name": "get_opportunities_tasks_task_idOperation",
    "memberof": "esi/Opportunities.js",
    "static": true,
    "longname": "esi/Opportunities.js~get_opportunities_tasks_task_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Opportunities.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 204,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 308,
    "kind": "file",
    "name": "esi/PlanetaryInteraction.js",
    "content": "/** @module PlanetaryInteraction */\n// Auto-generated, edits will be overwritten\nimport * as gateway from './gateway'\n\n/**\n * Returns a list of all planetary colonies owned by a character.\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/planets/`\n * \n * Alternate route: `/legacy/characters/{character_id}/planets/`\n * \n * Alternate route: `/v1/characters/{character_id}/planets/`\n * \n * ---\n * This route is cached for up to 600 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} List of colonies\n */\nexport function get_characters_character_id_planets(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_planetsOperation, parameters)\n}\n\n/**\n * Returns full details on the layout of a single planetary colony, including links, pins and routes. Note: Planetary information is only recalculated when the colony is viewed through the client. Information will not update until this criteria is met.\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/planets/{planet_id}/`\n * \n * Alternate route: `/v3/characters/{character_id}/planets/{planet_id}/`\n * \n * ---\n * This route is cached for up to 600 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {number} planetId Planet id of the target planet\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Colony layout\n */\nexport function get_characters_character_id_planets_planet_id(characterId, planetId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId,\n      planet_id: planetId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_planets_planet_idOperation, parameters)\n}\n\n/**\n * List customs offices owned by a corporation\n * \n * ---\n * Alternate route: `/dev/corporations/{corporation_id}/customs_offices/`\n * \n * Alternate route: `/legacy/corporations/{corporation_id}/customs_offices/`\n * \n * Alternate route: `/v1/corporations/{corporation_id}/customs_offices/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * ---\n * Requires one of the following EVE corporation role(s): Director\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.page] Which page of results to return\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A list of customs offices and their settings\n */\nexport function get_corporations_corporation_id_customs_offices(corporationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      corporation_id: corporationId\n    },\n    query: {\n      datasource: options.datasource,\n      page: options.page,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_corporations_corporation_id_customs_officesOperation, parameters)\n}\n\n/**\n * Get information on a planetary factory schematic\n * \n * ---\n * Alternate route: `/dev/universe/schematics/{schematic_id}/`\n * \n * Alternate route: `/legacy/universe/schematics/{schematic_id}/`\n * \n * Alternate route: `/v1/universe/schematics/{schematic_id}/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {number} schematicId A PI schematic ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} Public data about a schematic\n */\nexport function get_universe_schematics_schematic_id(schematicId, options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    },\n    path: {\n      schematic_id: schematicId\n    }\n  }\n  return gateway.request(get_universe_schematics_schematic_idOperation, parameters)\n}\n\nconst get_characters_character_id_planetsOperation = {\n  path: '/characters/{character_id}/planets/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-planets.manage_planets.v1']\n    }\n  ]\n}\n\nconst get_characters_character_id_planets_planet_idOperation = {\n  path: '/characters/{character_id}/planets/{planet_id}/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-planets.manage_planets.v1']\n    }\n  ]\n}\n\nconst get_corporations_corporation_id_customs_officesOperation = {\n  path: '/corporations/{corporation_id}/customs_offices/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-planets.read_customs_offices.v1']\n    }\n  ]\n}\n\nconst get_universe_schematics_schematic_idOperation = {\n  path: '/universe/schematics/{schematic_id}/',\n  method: 'get'\n}\n",
    "static": true,
    "longname": "/Users/sebs/projects/opensource/es-next-modules/packages/esi/PlanetaryInteraction.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 309,
    "kind": "function",
    "name": "get_characters_character_id_planets",
    "memberof": "esi/PlanetaryInteraction.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/PlanetaryInteraction.js~get_characters_character_id_planets",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/PlanetaryInteraction.js",
    "importStyle": "{get_characters_character_id_planets}",
    "description": "Returns a list of all planetary colonies owned by a character.\n\n---\nAlternate route: `/dev/characters/{character_id}/planets/`\n\nAlternate route: `/legacy/characters/{character_id}/planets/`\n\nAlternate route: `/v1/characters/{character_id}/planets/`\n\n---\nThis route is cached for up to 600 seconds",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "List of colonies"
    }
  },
  {
    "__docId__": 310,
    "kind": "function",
    "name": "get_characters_character_id_planets_planet_id",
    "memberof": "esi/PlanetaryInteraction.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/PlanetaryInteraction.js~get_characters_character_id_planets_planet_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/PlanetaryInteraction.js",
    "importStyle": "{get_characters_character_id_planets_planet_id}",
    "description": "Returns full details on the layout of a single planetary colony, including links, pins and routes. Note: Planetary information is only recalculated when the colony is viewed through the client. Information will not update until this criteria is met.\n\n---\nAlternate route: `/dev/characters/{character_id}/planets/{planet_id}/`\n\nAlternate route: `/v3/characters/{character_id}/planets/{planet_id}/`\n\n---\nThis route is cached for up to 600 seconds",
    "lineNumber": 61,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "planetId",
        "description": "Planet id of the target planet"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Colony layout"
    }
  },
  {
    "__docId__": 311,
    "kind": "function",
    "name": "get_corporations_corporation_id_customs_offices",
    "memberof": "esi/PlanetaryInteraction.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/PlanetaryInteraction.js~get_corporations_corporation_id_customs_offices",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/PlanetaryInteraction.js",
    "importStyle": "{get_corporations_corporation_id_customs_offices}",
    "description": "List customs offices owned by a corporation\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/customs_offices/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/customs_offices/`\n\nAlternate route: `/v1/corporations/{corporation_id}/customs_offices/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Director",
    "lineNumber": 103,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of customs offices and their settings"
    }
  },
  {
    "__docId__": 312,
    "kind": "function",
    "name": "get_universe_schematics_schematic_id",
    "memberof": "esi/PlanetaryInteraction.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/PlanetaryInteraction.js~get_universe_schematics_schematic_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/PlanetaryInteraction.js",
    "importStyle": "{get_universe_schematics_schematic_id}",
    "description": "Get information on a planetary factory schematic\n\n---\nAlternate route: `/dev/universe/schematics/{schematic_id}/`\n\nAlternate route: `/legacy/universe/schematics/{schematic_id}/`\n\nAlternate route: `/v1/universe/schematics/{schematic_id}/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 140,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "schematicId",
        "description": "A PI schematic ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Public data about a schematic"
    }
  },
  {
    "__docId__": 313,
    "kind": "variable",
    "name": "get_characters_character_id_planetsOperation",
    "memberof": "esi/PlanetaryInteraction.js",
    "static": true,
    "longname": "esi/PlanetaryInteraction.js~get_characters_character_id_planetsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/PlanetaryInteraction.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 156,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 314,
    "kind": "variable",
    "name": "get_characters_character_id_planets_planet_idOperation",
    "memberof": "esi/PlanetaryInteraction.js",
    "static": true,
    "longname": "esi/PlanetaryInteraction.js~get_characters_character_id_planets_planet_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/PlanetaryInteraction.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 167,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 315,
    "kind": "variable",
    "name": "get_corporations_corporation_id_customs_officesOperation",
    "memberof": "esi/PlanetaryInteraction.js",
    "static": true,
    "longname": "esi/PlanetaryInteraction.js~get_corporations_corporation_id_customs_officesOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/PlanetaryInteraction.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 178,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 316,
    "kind": "variable",
    "name": "get_universe_schematics_schematic_idOperation",
    "memberof": "esi/PlanetaryInteraction.js",
    "static": true,
    "longname": "esi/PlanetaryInteraction.js~get_universe_schematics_schematic_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/PlanetaryInteraction.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 189,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 317,
    "kind": "file",
    "name": "esi/Routes.js",
    "content": "/** @module Routes */\n// Auto-generated, edits will be overwritten\nimport * as gateway from './gateway'\n\n/**\n * Get the systems between origin and destination\n * \n * ---\n * Alternate route: `/dev/route/{origin}/{destination}/`\n * \n * Alternate route: `/legacy/route/{origin}/{destination}/`\n * \n * Alternate route: `/v1/route/{origin}/{destination}/`\n * \n * ---\n * This route is cached for up to 86400 seconds\n * \n * @param {number} destination destination solar system ID\n * @param {number} origin origin solar system ID\n * @param {object} options Optional options\n * @param {number[]} [options.avoid] avoid solar system ID(s)\n * @param {number[][]} [options.connections] connected solar system pairs\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.flag] route security preference\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} Solar systems in route from origin to destination\n */\nexport function get_route_origin_destination(destination, origin, options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      avoid: options.avoid,\n      connections: options.connections,\n      datasource: options.datasource,\n      flag: options.flag\n    },\n    path: {\n      destination,\n      origin\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_route_origin_destinationOperation, parameters)\n}\n\nconst get_route_origin_destinationOperation = {\n  path: '/route/{origin}/{destination}/',\n  method: 'get'\n}\n",
    "static": true,
    "longname": "/Users/sebs/projects/opensource/es-next-modules/packages/esi/Routes.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 318,
    "kind": "function",
    "name": "get_route_origin_destination",
    "memberof": "esi/Routes.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Routes.js~get_route_origin_destination",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Routes.js",
    "importStyle": "{get_route_origin_destination}",
    "description": "Get the systems between origin and destination\n\n---\nAlternate route: `/dev/route/{origin}/{destination}/`\n\nAlternate route: `/legacy/route/{origin}/{destination}/`\n\nAlternate route: `/v1/route/{origin}/{destination}/`\n\n---\nThis route is cached for up to 86400 seconds",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "destination",
        "description": "destination solar system ID"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "origin",
        "description": "origin solar system ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "number[]"
        ],
        "spread": false,
        "optional": true,
        "name": "options.avoid",
        "description": "avoid solar system ID(s)"
      },
      {
        "nullable": null,
        "types": [
          "number[][]"
        ],
        "spread": false,
        "optional": true,
        "name": "options.connections",
        "description": "connected solar system pairs"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.flag",
        "description": "route security preference"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Solar systems in route from origin to destination"
    }
  },
  {
    "__docId__": 319,
    "kind": "variable",
    "name": "get_route_origin_destinationOperation",
    "memberof": "esi/Routes.js",
    "static": true,
    "longname": "esi/Routes.js~get_route_origin_destinationOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Routes.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 320,
    "kind": "file",
    "name": "esi/Search.js",
    "content": "/** @module Search */\n// Auto-generated, edits will be overwritten\nimport * as gateway from './gateway'\n\n/**\n * Search for entities that match a given sub-string.\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/search/`\n * \n * Alternate route: `/v3/characters/{character_id}/search/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {string[]} categories Type of entities to search for\n * @param {number} characterId An EVE character ID\n * @param {string} search The string to search on\n * @param {object} options Optional options\n * @param {string} [options.AcceptLanguage] Language to use in the response\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.language] Language to use in the response, takes precedence over Accept-Language\n * @param {boolean} [options.strict] Whether the search should be a strict match\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} A list of search results\n */\nexport function get_characters_character_id_search(categories, characterId, search, options) {\n  if (!options) options = {}\n  const parameters = {\n    header: {\n      'Accept-Language': options.AcceptLanguage,\n      'If-None-Match': options.IfNoneMatch\n    },\n    query: {\n      categories,\n      datasource: options.datasource,\n      language: options.language,\n      search,\n      strict: options.strict,\n      token: options.token\n    },\n    path: {\n      character_id: characterId\n    }\n  }\n  return gateway.request(get_characters_character_id_searchOperation, parameters)\n}\n\n/**\n * Search for entities that match a given sub-string.\n * \n * ---\n * Alternate route: `/dev/search/`\n * \n * Alternate route: `/v2/search/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {string[]} categories Type of entities to search for\n * @param {string} search The string to search on\n * @param {object} options Optional options\n * @param {string} [options.AcceptLanguage] Language to use in the response\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.language] Language to use in the response, takes precedence over Accept-Language\n * @param {boolean} [options.strict] Whether the search should be a strict match\n * @return {Promise<object>} A list of search results\n */\nexport function get_search(categories, search, options) {\n  if (!options) options = {}\n  const parameters = {\n    header: {\n      'Accept-Language': options.AcceptLanguage,\n      'If-None-Match': options.IfNoneMatch\n    },\n    query: {\n      categories,\n      datasource: options.datasource,\n      language: options.language,\n      search,\n      strict: options.strict\n    }\n  }\n  return gateway.request(get_searchOperation, parameters)\n}\n\nconst get_characters_character_id_searchOperation = {\n  path: '/characters/{character_id}/search/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-search.search_structures.v1']\n    }\n  ]\n}\n\nconst get_searchOperation = {\n  path: '/search/',\n  method: 'get'\n}\n",
    "static": true,
    "longname": "/Users/sebs/projects/opensource/es-next-modules/packages/esi/Search.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 321,
    "kind": "function",
    "name": "get_characters_character_id_search",
    "memberof": "esi/Search.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Search.js~get_characters_character_id_search",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Search.js",
    "importStyle": "{get_characters_character_id_search}",
    "description": "Search for entities that match a given sub-string.\n\n---\nAlternate route: `/dev/characters/{character_id}/search/`\n\nAlternate route: `/v3/characters/{character_id}/search/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "categories",
        "description": "Type of entities to search for"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "search",
        "description": "The string to search on"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.AcceptLanguage",
        "description": "Language to use in the response"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.language",
        "description": "Language to use in the response, takes precedence over Accept-Language"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.strict",
        "description": "Whether the search should be a strict match"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of search results"
    }
  },
  {
    "__docId__": 322,
    "kind": "function",
    "name": "get_search",
    "memberof": "esi/Search.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Search.js~get_search",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Search.js",
    "importStyle": "{get_search}",
    "description": "Search for entities that match a given sub-string.\n\n---\nAlternate route: `/dev/search/`\n\nAlternate route: `/v2/search/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 71,
    "params": [
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "categories",
        "description": "Type of entities to search for"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "search",
        "description": "The string to search on"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.AcceptLanguage",
        "description": "Language to use in the response"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.language",
        "description": "Language to use in the response, takes precedence over Accept-Language"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.strict",
        "description": "Whether the search should be a strict match"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of search results"
    }
  },
  {
    "__docId__": 323,
    "kind": "variable",
    "name": "get_characters_character_id_searchOperation",
    "memberof": "esi/Search.js",
    "static": true,
    "longname": "esi/Search.js~get_characters_character_id_searchOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Search.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 324,
    "kind": "variable",
    "name": "get_searchOperation",
    "memberof": "esi/Search.js",
    "static": true,
    "longname": "esi/Search.js~get_searchOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Search.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 100,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 325,
    "kind": "file",
    "name": "esi/Skills.js",
    "content": "/** @module Skills */\n// Auto-generated, edits will be overwritten\nimport * as gateway from './gateway'\n\n/**\n * Return attributes of a character\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/attributes/`\n * \n * Alternate route: `/legacy/characters/{character_id}/attributes/`\n * \n * Alternate route: `/v1/characters/{character_id}/attributes/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Attributes of a character\n */\nexport function get_characters_character_id_attributes(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_attributesOperation, parameters)\n}\n\n/**\n * List the configured skill queue for the given character\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/skillqueue/`\n * \n * Alternate route: `/legacy/characters/{character_id}/skillqueue/`\n * \n * Alternate route: `/v2/characters/{character_id}/skillqueue/`\n * \n * ---\n * This route is cached for up to 120 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} The current skill queue, sorted ascending by finishing time\n */\nexport function get_characters_character_id_skillqueue(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_skillqueueOperation, parameters)\n}\n\n/**\n * List all trained skills for the given character\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/skills/`\n * \n * Alternate route: `/v4/characters/{character_id}/skills/`\n * \n * ---\n * This route is cached for up to 120 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Known skills for the character\n */\nexport function get_characters_character_id_skills(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_skillsOperation, parameters)\n}\n\nconst get_characters_character_id_attributesOperation = {\n  path: '/characters/{character_id}/attributes/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-skills.read_skills.v1']\n    }\n  ]\n}\n\nconst get_characters_character_id_skillqueueOperation = {\n  path: '/characters/{character_id}/skillqueue/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-skills.read_skillqueue.v1']\n    }\n  ]\n}\n\nconst get_characters_character_id_skillsOperation = {\n  path: '/characters/{character_id}/skills/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-skills.read_skills.v1']\n    }\n  ]\n}\n",
    "static": true,
    "longname": "/Users/sebs/projects/opensource/es-next-modules/packages/esi/Skills.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 326,
    "kind": "function",
    "name": "get_characters_character_id_attributes",
    "memberof": "esi/Skills.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Skills.js~get_characters_character_id_attributes",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Skills.js",
    "importStyle": "{get_characters_character_id_attributes}",
    "description": "Return attributes of a character\n\n---\nAlternate route: `/dev/characters/{character_id}/attributes/`\n\nAlternate route: `/legacy/characters/{character_id}/attributes/`\n\nAlternate route: `/v1/characters/{character_id}/attributes/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Attributes of a character"
    }
  },
  {
    "__docId__": 327,
    "kind": "function",
    "name": "get_characters_character_id_skillqueue",
    "memberof": "esi/Skills.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Skills.js~get_characters_character_id_skillqueue",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Skills.js",
    "importStyle": "{get_characters_character_id_skillqueue}",
    "description": "List the configured skill queue for the given character\n\n---\nAlternate route: `/dev/characters/{character_id}/skillqueue/`\n\nAlternate route: `/legacy/characters/{character_id}/skillqueue/`\n\nAlternate route: `/v2/characters/{character_id}/skillqueue/`\n\n---\nThis route is cached for up to 120 seconds",
    "lineNumber": 62,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "The current skill queue, sorted ascending by finishing time"
    }
  },
  {
    "__docId__": 328,
    "kind": "function",
    "name": "get_characters_character_id_skills",
    "memberof": "esi/Skills.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Skills.js~get_characters_character_id_skills",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Skills.js",
    "importStyle": "{get_characters_character_id_skills}",
    "description": "List all trained skills for the given character\n\n---\nAlternate route: `/dev/characters/{character_id}/skills/`\n\nAlternate route: `/v4/characters/{character_id}/skills/`\n\n---\nThis route is cached for up to 120 seconds",
    "lineNumber": 97,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Known skills for the character"
    }
  },
  {
    "__docId__": 329,
    "kind": "variable",
    "name": "get_characters_character_id_attributesOperation",
    "memberof": "esi/Skills.js",
    "static": true,
    "longname": "esi/Skills.js~get_characters_character_id_attributesOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Skills.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 114,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 330,
    "kind": "variable",
    "name": "get_characters_character_id_skillqueueOperation",
    "memberof": "esi/Skills.js",
    "static": true,
    "longname": "esi/Skills.js~get_characters_character_id_skillqueueOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Skills.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 125,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 331,
    "kind": "variable",
    "name": "get_characters_character_id_skillsOperation",
    "memberof": "esi/Skills.js",
    "static": true,
    "longname": "esi/Skills.js~get_characters_character_id_skillsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Skills.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 136,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 332,
    "kind": "file",
    "name": "esi/Status.js",
    "content": "/** @module Status */\n// Auto-generated, edits will be overwritten\nimport * as gateway from './gateway'\n\n/**\n * EVE Server status\n * \n * ---\n * Alternate route: `/dev/status/`\n * \n * Alternate route: `/legacy/status/`\n * \n * Alternate route: `/v1/status/`\n * \n * ---\n * This route is cached for up to 30 seconds\n * \n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} Server status\n */\nexport function get_status(options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_statusOperation, parameters)\n}\n\nconst get_statusOperation = {\n  path: '/status/',\n  method: 'get'\n}\n",
    "static": true,
    "longname": "/Users/sebs/projects/opensource/es-next-modules/packages/esi/Status.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 333,
    "kind": "function",
    "name": "get_status",
    "memberof": "esi/Status.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Status.js~get_status",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Status.js",
    "importStyle": "{get_status}",
    "description": "EVE Server status\n\n---\nAlternate route: `/dev/status/`\n\nAlternate route: `/legacy/status/`\n\nAlternate route: `/v1/status/`\n\n---\nThis route is cached for up to 30 seconds",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Server status"
    }
  },
  {
    "__docId__": 334,
    "kind": "variable",
    "name": "get_statusOperation",
    "memberof": "esi/Status.js",
    "static": true,
    "longname": "esi/Status.js~get_statusOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Status.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 335,
    "kind": "file",
    "name": "esi/Universe.js",
    "content": "/** @module Universe */\n// Auto-generated, edits will be overwritten\nimport * as gateway from './gateway'\n\n/**\n * Get all character ancestries\n * \n * ---\n * Alternate route: `/dev/universe/ancestries/`\n * \n * Alternate route: `/legacy/universe/ancestries/`\n * \n * Alternate route: `/v1/universe/ancestries/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {object} options Optional options\n * @param {string} [options.AcceptLanguage] Language to use in the response\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.language] Language to use in the response, takes precedence over Accept-Language\n * @return {Promise<object>} A list of ancestries\n */\nexport function get_universe_ancestries(options) {\n  if (!options) options = {}\n  const parameters = {\n    header: {\n      'Accept-Language': options.AcceptLanguage,\n      'If-None-Match': options.IfNoneMatch\n    },\n    query: {\n      datasource: options.datasource,\n      language: options.language\n    }\n  }\n  return gateway.request(get_universe_ancestriesOperation, parameters)\n}\n\n/**\n * Get information on an asteroid belt\n * \n * ---\n * Alternate route: `/dev/universe/asteroid_belts/{asteroid_belt_id}/`\n * \n * Alternate route: `/legacy/universe/asteroid_belts/{asteroid_belt_id}/`\n * \n * Alternate route: `/v1/universe/asteroid_belts/{asteroid_belt_id}/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {number} asteroidBeltId asteroid_belt_id integer\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} Information about an asteroid belt\n */\nexport function get_universe_asteroid_belts_asteroid_belt_id(asteroidBeltId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      asteroid_belt_id: asteroidBeltId\n    },\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_universe_asteroid_belts_asteroid_belt_idOperation, parameters)\n}\n\n/**\n * Get a list of bloodlines\n * \n * ---\n * Alternate route: `/dev/universe/bloodlines/`\n * \n * Alternate route: `/legacy/universe/bloodlines/`\n * \n * Alternate route: `/v1/universe/bloodlines/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {object} options Optional options\n * @param {string} [options.AcceptLanguage] Language to use in the response\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.language] Language to use in the response, takes precedence over Accept-Language\n * @return {Promise<object>} A list of bloodlines\n */\nexport function get_universe_bloodlines(options) {\n  if (!options) options = {}\n  const parameters = {\n    header: {\n      'Accept-Language': options.AcceptLanguage,\n      'If-None-Match': options.IfNoneMatch\n    },\n    query: {\n      datasource: options.datasource,\n      language: options.language\n    }\n  }\n  return gateway.request(get_universe_bloodlinesOperation, parameters)\n}\n\n/**\n * Get a list of item categories\n * \n * ---\n * Alternate route: `/dev/universe/categories/`\n * \n * Alternate route: `/legacy/universe/categories/`\n * \n * Alternate route: `/v1/universe/categories/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} A list of item category ids\n */\nexport function get_universe_categories(options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_universe_categoriesOperation, parameters)\n}\n\n/**\n * Get information of an item category\n * \n * ---\n * Alternate route: `/dev/universe/categories/{category_id}/`\n * \n * Alternate route: `/legacy/universe/categories/{category_id}/`\n * \n * Alternate route: `/v1/universe/categories/{category_id}/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {number} categoryId An Eve item category ID\n * @param {object} options Optional options\n * @param {string} [options.AcceptLanguage] Language to use in the response\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.language] Language to use in the response, takes precedence over Accept-Language\n * @return {Promise<object>} Information about an item category\n */\nexport function get_universe_categories_category_id(categoryId, options) {\n  if (!options) options = {}\n  const parameters = {\n    header: {\n      'Accept-Language': options.AcceptLanguage,\n      'If-None-Match': options.IfNoneMatch\n    },\n    path: {\n      category_id: categoryId\n    },\n    query: {\n      datasource: options.datasource,\n      language: options.language\n    }\n  }\n  return gateway.request(get_universe_categories_category_idOperation, parameters)\n}\n\n/**\n * Get a list of constellations\n * \n * ---\n * Alternate route: `/dev/universe/constellations/`\n * \n * Alternate route: `/legacy/universe/constellations/`\n * \n * Alternate route: `/v1/universe/constellations/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} A list of constellation ids\n */\nexport function get_universe_constellations(options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_universe_constellationsOperation, parameters)\n}\n\n/**\n * Get information on a constellation\n * \n * ---\n * Alternate route: `/dev/universe/constellations/{constellation_id}/`\n * \n * Alternate route: `/legacy/universe/constellations/{constellation_id}/`\n * \n * Alternate route: `/v1/universe/constellations/{constellation_id}/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {number} constellationId constellation_id integer\n * @param {object} options Optional options\n * @param {string} [options.AcceptLanguage] Language to use in the response\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.language] Language to use in the response, takes precedence over Accept-Language\n * @return {Promise<object>} Information about a constellation\n */\nexport function get_universe_constellations_constellation_id(constellationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    header: {\n      'Accept-Language': options.AcceptLanguage,\n      'If-None-Match': options.IfNoneMatch\n    },\n    path: {\n      constellation_id: constellationId\n    },\n    query: {\n      datasource: options.datasource,\n      language: options.language\n    }\n  }\n  return gateway.request(get_universe_constellations_constellation_idOperation, parameters)\n}\n\n/**\n * Get a list of factions\n * \n * ---\n * Alternate route: `/dev/universe/factions/`\n * \n * Alternate route: `/v2/universe/factions/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {object} options Optional options\n * @param {string} [options.AcceptLanguage] Language to use in the response\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.language] Language to use in the response, takes precedence over Accept-Language\n * @return {Promise<object>} A list of factions\n */\nexport function get_universe_factions(options) {\n  if (!options) options = {}\n  const parameters = {\n    header: {\n      'Accept-Language': options.AcceptLanguage,\n      'If-None-Match': options.IfNoneMatch\n    },\n    query: {\n      datasource: options.datasource,\n      language: options.language\n    }\n  }\n  return gateway.request(get_universe_factionsOperation, parameters)\n}\n\n/**\n * Get a list of graphics\n * \n * ---\n * Alternate route: `/dev/universe/graphics/`\n * \n * Alternate route: `/legacy/universe/graphics/`\n * \n * Alternate route: `/v1/universe/graphics/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} A list of graphic ids\n */\nexport function get_universe_graphics(options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_universe_graphicsOperation, parameters)\n}\n\n/**\n * Get information on a graphic\n * \n * ---\n * Alternate route: `/dev/universe/graphics/{graphic_id}/`\n * \n * Alternate route: `/legacy/universe/graphics/{graphic_id}/`\n * \n * Alternate route: `/v1/universe/graphics/{graphic_id}/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {number} graphicId graphic_id integer\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} Information about a graphic\n */\nexport function get_universe_graphics_graphic_id(graphicId, options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource\n    },\n    path: {\n      graphic_id: graphicId\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_universe_graphics_graphic_idOperation, parameters)\n}\n\n/**\n * Get a list of item groups\n * \n * ---\n * Alternate route: `/dev/universe/groups/`\n * \n * Alternate route: `/legacy/universe/groups/`\n * \n * Alternate route: `/v1/universe/groups/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.page] Which page of results to return\n * @return {Promise<object>} A list of item group ids\n */\nexport function get_universe_groups(options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource,\n      page: options.page\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_universe_groupsOperation, parameters)\n}\n\n/**\n * Get information on an item group\n * \n * ---\n * Alternate route: `/dev/universe/groups/{group_id}/`\n * \n * Alternate route: `/legacy/universe/groups/{group_id}/`\n * \n * Alternate route: `/v1/universe/groups/{group_id}/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {number} groupId An Eve item group ID\n * @param {object} options Optional options\n * @param {string} [options.AcceptLanguage] Language to use in the response\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.language] Language to use in the response, takes precedence over Accept-Language\n * @return {Promise<object>} Information about an item group\n */\nexport function get_universe_groups_group_id(groupId, options) {\n  if (!options) options = {}\n  const parameters = {\n    header: {\n      'Accept-Language': options.AcceptLanguage,\n      'If-None-Match': options.IfNoneMatch\n    },\n    query: {\n      datasource: options.datasource,\n      language: options.language\n    },\n    path: {\n      group_id: groupId\n    }\n  }\n  return gateway.request(get_universe_groups_group_idOperation, parameters)\n}\n\n/**\n * Resolve a set of names to IDs in the following categories: agents, alliances, characters, constellations, corporations factions, inventory_types, regions, stations, and systems. Only exact matches will be returned. All names searched for are cached for 12 hours\n * \n * ---\n * Alternate route: `/dev/universe/ids/`\n * \n * Alternate route: `/legacy/universe/ids/`\n * \n * Alternate route: `/v1/universe/ids/`\n * \n * @param {object} options Optional options\n * @param {string} [options.AcceptLanguage] Language to use in the response\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.language] Language to use in the response, takes precedence over Accept-Language\n * @return {Promise<object>} List of id/name associations for a set of names divided by category. Any name passed in that did not have a match will be ommitted\n */\nexport function post_universe_ids(options) {\n  if (!options) options = {}\n  const parameters = {\n    header: {\n      'Accept-Language': options.AcceptLanguage\n    },\n    query: {\n      datasource: options.datasource,\n      language: options.language\n    }\n  }\n  return gateway.request(post_universe_idsOperation, parameters)\n}\n\n/**\n * Get information on a moon\n * \n * ---\n * Alternate route: `/dev/universe/moons/{moon_id}/`\n * \n * Alternate route: `/legacy/universe/moons/{moon_id}/`\n * \n * Alternate route: `/v1/universe/moons/{moon_id}/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {number} moonId moon_id integer\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} Information about a moon\n */\nexport function get_universe_moons_moon_id(moonId, options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    },\n    path: {\n      moon_id: moonId\n    }\n  }\n  return gateway.request(get_universe_moons_moon_idOperation, parameters)\n}\n\n/**\n * Resolve a set of IDs to names and categories. Supported ID's for resolving are: Characters, Corporations, Alliances, Stations, Solar Systems, Constellations, Regions, Types\n * \n * ---\n * Alternate route: `/dev/universe/names/`\n * \n * Alternate route: `/v2/universe/names/`\n * \n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @return {Promise<object>} List of id/name associations for a set of ID's. All ID's must resolve to a name, or nothing will be returned\n */\nexport function post_universe_names(options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource\n    }\n  }\n  return gateway.request(post_universe_namesOperation, parameters)\n}\n\n/**\n * Get information on a planet\n * \n * ---\n * Alternate route: `/dev/universe/planets/{planet_id}/`\n * \n * Alternate route: `/legacy/universe/planets/{planet_id}/`\n * \n * Alternate route: `/v1/universe/planets/{planet_id}/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {number} planetId planet_id integer\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} Information about a planet\n */\nexport function get_universe_planets_planet_id(planetId, options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    },\n    path: {\n      planet_id: planetId\n    }\n  }\n  return gateway.request(get_universe_planets_planet_idOperation, parameters)\n}\n\n/**\n * Get a list of character races\n * \n * ---\n * Alternate route: `/dev/universe/races/`\n * \n * Alternate route: `/legacy/universe/races/`\n * \n * Alternate route: `/v1/universe/races/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {object} options Optional options\n * @param {string} [options.AcceptLanguage] Language to use in the response\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.language] Language to use in the response, takes precedence over Accept-Language\n * @return {Promise<object>} A list of character races\n */\nexport function get_universe_races(options) {\n  if (!options) options = {}\n  const parameters = {\n    header: {\n      'Accept-Language': options.AcceptLanguage,\n      'If-None-Match': options.IfNoneMatch\n    },\n    query: {\n      datasource: options.datasource,\n      language: options.language\n    }\n  }\n  return gateway.request(get_universe_racesOperation, parameters)\n}\n\n/**\n * Get a list of regions\n * \n * ---\n * Alternate route: `/dev/universe/regions/`\n * \n * Alternate route: `/legacy/universe/regions/`\n * \n * Alternate route: `/v1/universe/regions/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} A list of region ids\n */\nexport function get_universe_regions(options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_universe_regionsOperation, parameters)\n}\n\n/**\n * Get information on a region\n * \n * ---\n * Alternate route: `/dev/universe/regions/{region_id}/`\n * \n * Alternate route: `/legacy/universe/regions/{region_id}/`\n * \n * Alternate route: `/v1/universe/regions/{region_id}/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {number} regionId region_id integer\n * @param {object} options Optional options\n * @param {string} [options.AcceptLanguage] Language to use in the response\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.language] Language to use in the response, takes precedence over Accept-Language\n * @return {Promise<object>} Information about a region\n */\nexport function get_universe_regions_region_id(regionId, options) {\n  if (!options) options = {}\n  const parameters = {\n    header: {\n      'Accept-Language': options.AcceptLanguage,\n      'If-None-Match': options.IfNoneMatch\n    },\n    query: {\n      datasource: options.datasource,\n      language: options.language\n    },\n    path: {\n      region_id: regionId\n    }\n  }\n  return gateway.request(get_universe_regions_region_idOperation, parameters)\n}\n\n/**\n * Get information on a stargate\n * \n * ---\n * Alternate route: `/dev/universe/stargates/{stargate_id}/`\n * \n * Alternate route: `/legacy/universe/stargates/{stargate_id}/`\n * \n * Alternate route: `/v1/universe/stargates/{stargate_id}/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {number} stargateId stargate_id integer\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} Information about a stargate\n */\nexport function get_universe_stargates_stargate_id(stargateId, options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    },\n    path: {\n      stargate_id: stargateId\n    }\n  }\n  return gateway.request(get_universe_stargates_stargate_idOperation, parameters)\n}\n\n/**\n * Get information on a star\n * \n * ---\n * Alternate route: `/dev/universe/stars/{star_id}/`\n * \n * Alternate route: `/legacy/universe/stars/{star_id}/`\n * \n * Alternate route: `/v1/universe/stars/{star_id}/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {number} starId star_id integer\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} Information about a star\n */\nexport function get_universe_stars_star_id(starId, options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    },\n    path: {\n      star_id: starId\n    }\n  }\n  return gateway.request(get_universe_stars_star_idOperation, parameters)\n}\n\n/**\n * Get information on a station\n * \n * ---\n * Alternate route: `/dev/universe/stations/{station_id}/`\n * \n * Alternate route: `/v2/universe/stations/{station_id}/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {number} stationId station_id integer\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} Information about a station\n */\nexport function get_universe_stations_station_id(stationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    },\n    path: {\n      station_id: stationId\n    }\n  }\n  return gateway.request(get_universe_stations_station_idOperation, parameters)\n}\n\n/**\n * List all public structures\n * \n * ---\n * Alternate route: `/dev/universe/structures/`\n * \n * Alternate route: `/legacy/universe/structures/`\n * \n * Alternate route: `/v1/universe/structures/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} List of public structure IDs\n */\nexport function get_universe_structures(options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_universe_structuresOperation, parameters)\n}\n\n/**\n * Returns information on requested structure if you are on the ACL. Otherwise, returns \"Forbidden\" for all inputs.\n * \n * ---\n * Alternate route: `/dev/universe/structures/{structure_id}/`\n * \n * Alternate route: `/v2/universe/structures/{structure_id}/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {number} structureId An Eve structure ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Data about a structure\n */\nexport function get_universe_structures_structure_id(structureId, options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    },\n    path: {\n      structure_id: structureId\n    }\n  }\n  return gateway.request(get_universe_structures_structure_idOperation, parameters)\n}\n\n/**\n * Get the number of jumps in solar systems within the last hour ending at the timestamp of the Last-Modified header, excluding wormhole space. Only systems with jumps will be listed\n * \n * ---\n * Alternate route: `/dev/universe/system_jumps/`\n * \n * Alternate route: `/legacy/universe/system_jumps/`\n * \n * Alternate route: `/v1/universe/system_jumps/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} A list of systems and number of jumps\n */\nexport function get_universe_system_jumps(options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_universe_system_jumpsOperation, parameters)\n}\n\n/**\n * Get the number of ship, pod and NPC kills per solar system within the last hour ending at the timestamp of the Last-Modified header, excluding wormhole space. Only systems with kills will be listed\n * \n * ---\n * Alternate route: `/dev/universe/system_kills/`\n * \n * Alternate route: `/v2/universe/system_kills/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} A list of systems and number of ship, pod and NPC kills\n */\nexport function get_universe_system_kills(options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_universe_system_killsOperation, parameters)\n}\n\n/**\n * Get a list of solar systems\n * \n * ---\n * Alternate route: `/dev/universe/systems/`\n * \n * Alternate route: `/legacy/universe/systems/`\n * \n * Alternate route: `/v1/universe/systems/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} A list of solar system ids\n */\nexport function get_universe_systems(options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_universe_systemsOperation, parameters)\n}\n\n/**\n * Get information on a solar system.\n * \n * ---\n * Alternate route: `/dev/universe/systems/{system_id}/`\n * \n * Alternate route: `/v4/universe/systems/{system_id}/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {number} systemId system_id integer\n * @param {object} options Optional options\n * @param {string} [options.AcceptLanguage] Language to use in the response\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.language] Language to use in the response, takes precedence over Accept-Language\n * @return {Promise<object>} Information about a solar system\n */\nexport function get_universe_systems_system_id(systemId, options) {\n  if (!options) options = {}\n  const parameters = {\n    header: {\n      'Accept-Language': options.AcceptLanguage,\n      'If-None-Match': options.IfNoneMatch\n    },\n    query: {\n      datasource: options.datasource,\n      language: options.language\n    },\n    path: {\n      system_id: systemId\n    }\n  }\n  return gateway.request(get_universe_systems_system_idOperation, parameters)\n}\n\n/**\n * Get a list of type ids\n * \n * ---\n * Alternate route: `/dev/universe/types/`\n * \n * Alternate route: `/legacy/universe/types/`\n * \n * Alternate route: `/v1/universe/types/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.page] Which page of results to return\n * @return {Promise<object>} A list of type ids\n */\nexport function get_universe_types(options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource,\n      page: options.page\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_universe_typesOperation, parameters)\n}\n\n/**\n * Get information on a type\n * \n * ---\n * Alternate route: `/dev/universe/types/{type_id}/`\n * \n * Alternate route: `/v3/universe/types/{type_id}/`\n * \n * ---\n * This route expires daily at 11:05\n * \n * @param {number} typeId An Eve item type ID\n * @param {object} options Optional options\n * @param {string} [options.AcceptLanguage] Language to use in the response\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.language] Language to use in the response, takes precedence over Accept-Language\n * @return {Promise<object>} Information about a type\n */\nexport function get_universe_types_type_id(typeId, options) {\n  if (!options) options = {}\n  const parameters = {\n    header: {\n      'Accept-Language': options.AcceptLanguage,\n      'If-None-Match': options.IfNoneMatch\n    },\n    query: {\n      datasource: options.datasource,\n      language: options.language\n    },\n    path: {\n      type_id: typeId\n    }\n  }\n  return gateway.request(get_universe_types_type_idOperation, parameters)\n}\n\nconst get_universe_ancestriesOperation = {\n  path: '/universe/ancestries/',\n  method: 'get'\n}\n\nconst get_universe_asteroid_belts_asteroid_belt_idOperation = {\n  path: '/universe/asteroid_belts/{asteroid_belt_id}/',\n  method: 'get'\n}\n\nconst get_universe_bloodlinesOperation = {\n  path: '/universe/bloodlines/',\n  method: 'get'\n}\n\nconst get_universe_categoriesOperation = {\n  path: '/universe/categories/',\n  method: 'get'\n}\n\nconst get_universe_categories_category_idOperation = {\n  path: '/universe/categories/{category_id}/',\n  method: 'get'\n}\n\nconst get_universe_constellationsOperation = {\n  path: '/universe/constellations/',\n  method: 'get'\n}\n\nconst get_universe_constellations_constellation_idOperation = {\n  path: '/universe/constellations/{constellation_id}/',\n  method: 'get'\n}\n\nconst get_universe_factionsOperation = {\n  path: '/universe/factions/',\n  method: 'get'\n}\n\nconst get_universe_graphicsOperation = {\n  path: '/universe/graphics/',\n  method: 'get'\n}\n\nconst get_universe_graphics_graphic_idOperation = {\n  path: '/universe/graphics/{graphic_id}/',\n  method: 'get'\n}\n\nconst get_universe_groupsOperation = {\n  path: '/universe/groups/',\n  method: 'get'\n}\n\nconst get_universe_groups_group_idOperation = {\n  path: '/universe/groups/{group_id}/',\n  method: 'get'\n}\n\nconst post_universe_idsOperation = {\n  path: '/universe/ids/',\n  method: 'post'\n}\n\nconst get_universe_moons_moon_idOperation = {\n  path: '/universe/moons/{moon_id}/',\n  method: 'get'\n}\n\nconst post_universe_namesOperation = {\n  path: '/universe/names/',\n  method: 'post'\n}\n\nconst get_universe_planets_planet_idOperation = {\n  path: '/universe/planets/{planet_id}/',\n  method: 'get'\n}\n\nconst get_universe_racesOperation = {\n  path: '/universe/races/',\n  method: 'get'\n}\n\nconst get_universe_regionsOperation = {\n  path: '/universe/regions/',\n  method: 'get'\n}\n\nconst get_universe_regions_region_idOperation = {\n  path: '/universe/regions/{region_id}/',\n  method: 'get'\n}\n\nconst get_universe_stargates_stargate_idOperation = {\n  path: '/universe/stargates/{stargate_id}/',\n  method: 'get'\n}\n\nconst get_universe_stars_star_idOperation = {\n  path: '/universe/stars/{star_id}/',\n  method: 'get'\n}\n\nconst get_universe_stations_station_idOperation = {\n  path: '/universe/stations/{station_id}/',\n  method: 'get'\n}\n\nconst get_universe_structuresOperation = {\n  path: '/universe/structures/',\n  method: 'get'\n}\n\nconst get_universe_structures_structure_idOperation = {\n  path: '/universe/structures/{structure_id}/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-universe.read_structures.v1']\n    }\n  ]\n}\n\nconst get_universe_system_jumpsOperation = {\n  path: '/universe/system_jumps/',\n  method: 'get'\n}\n\nconst get_universe_system_killsOperation = {\n  path: '/universe/system_kills/',\n  method: 'get'\n}\n\nconst get_universe_systemsOperation = {\n  path: '/universe/systems/',\n  method: 'get'\n}\n\nconst get_universe_systems_system_idOperation = {\n  path: '/universe/systems/{system_id}/',\n  method: 'get'\n}\n\nconst get_universe_typesOperation = {\n  path: '/universe/types/',\n  method: 'get'\n}\n\nconst get_universe_types_type_idOperation = {\n  path: '/universe/types/{type_id}/',\n  method: 'get'\n}\n",
    "static": true,
    "longname": "/Users/sebs/projects/opensource/es-next-modules/packages/esi/Universe.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 336,
    "kind": "function",
    "name": "get_universe_ancestries",
    "memberof": "esi/Universe.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Universe.js~get_universe_ancestries",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": "{get_universe_ancestries}",
    "description": "Get all character ancestries\n\n---\nAlternate route: `/dev/universe/ancestries/`\n\nAlternate route: `/legacy/universe/ancestries/`\n\nAlternate route: `/v1/universe/ancestries/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.AcceptLanguage",
        "description": "Language to use in the response"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.language",
        "description": "Language to use in the response, takes precedence over Accept-Language"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of ancestries"
    }
  },
  {
    "__docId__": 337,
    "kind": "function",
    "name": "get_universe_asteroid_belts_asteroid_belt_id",
    "memberof": "esi/Universe.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Universe.js~get_universe_asteroid_belts_asteroid_belt_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": "{get_universe_asteroid_belts_asteroid_belt_id}",
    "description": "Get information on an asteroid belt\n\n---\nAlternate route: `/dev/universe/asteroid_belts/{asteroid_belt_id}/`\n\nAlternate route: `/legacy/universe/asteroid_belts/{asteroid_belt_id}/`\n\nAlternate route: `/v1/universe/asteroid_belts/{asteroid_belt_id}/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 59,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "asteroidBeltId",
        "description": "asteroid_belt_id integer"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Information about an asteroid belt"
    }
  },
  {
    "__docId__": 338,
    "kind": "function",
    "name": "get_universe_bloodlines",
    "memberof": "esi/Universe.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Universe.js~get_universe_bloodlines",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": "{get_universe_bloodlines}",
    "description": "Get a list of bloodlines\n\n---\nAlternate route: `/dev/universe/bloodlines/`\n\nAlternate route: `/legacy/universe/bloodlines/`\n\nAlternate route: `/v1/universe/bloodlines/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 95,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.AcceptLanguage",
        "description": "Language to use in the response"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.language",
        "description": "Language to use in the response, takes precedence over Accept-Language"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of bloodlines"
    }
  },
  {
    "__docId__": 339,
    "kind": "function",
    "name": "get_universe_categories",
    "memberof": "esi/Universe.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Universe.js~get_universe_categories",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": "{get_universe_categories}",
    "description": "Get a list of item categories\n\n---\nAlternate route: `/dev/universe/categories/`\n\nAlternate route: `/legacy/universe/categories/`\n\nAlternate route: `/v1/universe/categories/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 128,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of item category ids"
    }
  },
  {
    "__docId__": 340,
    "kind": "function",
    "name": "get_universe_categories_category_id",
    "memberof": "esi/Universe.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Universe.js~get_universe_categories_category_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": "{get_universe_categories_category_id}",
    "description": "Get information of an item category\n\n---\nAlternate route: `/dev/universe/categories/{category_id}/`\n\nAlternate route: `/legacy/universe/categories/{category_id}/`\n\nAlternate route: `/v1/universe/categories/{category_id}/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 162,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "categoryId",
        "description": "An Eve item category ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.AcceptLanguage",
        "description": "Language to use in the response"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.language",
        "description": "Language to use in the response, takes precedence over Accept-Language"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Information about an item category"
    }
  },
  {
    "__docId__": 341,
    "kind": "function",
    "name": "get_universe_constellations",
    "memberof": "esi/Universe.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Universe.js~get_universe_constellations",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": "{get_universe_constellations}",
    "description": "Get a list of constellations\n\n---\nAlternate route: `/dev/universe/constellations/`\n\nAlternate route: `/legacy/universe/constellations/`\n\nAlternate route: `/v1/universe/constellations/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 198,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of constellation ids"
    }
  },
  {
    "__docId__": 342,
    "kind": "function",
    "name": "get_universe_constellations_constellation_id",
    "memberof": "esi/Universe.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Universe.js~get_universe_constellations_constellation_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": "{get_universe_constellations_constellation_id}",
    "description": "Get information on a constellation\n\n---\nAlternate route: `/dev/universe/constellations/{constellation_id}/`\n\nAlternate route: `/legacy/universe/constellations/{constellation_id}/`\n\nAlternate route: `/v1/universe/constellations/{constellation_id}/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 232,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "constellationId",
        "description": "constellation_id integer"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.AcceptLanguage",
        "description": "Language to use in the response"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.language",
        "description": "Language to use in the response, takes precedence over Accept-Language"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Information about a constellation"
    }
  },
  {
    "__docId__": 343,
    "kind": "function",
    "name": "get_universe_factions",
    "memberof": "esi/Universe.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Universe.js~get_universe_factions",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": "{get_universe_factions}",
    "description": "Get a list of factions\n\n---\nAlternate route: `/dev/universe/factions/`\n\nAlternate route: `/v2/universe/factions/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 268,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.AcceptLanguage",
        "description": "Language to use in the response"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.language",
        "description": "Language to use in the response, takes precedence over Accept-Language"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of factions"
    }
  },
  {
    "__docId__": 344,
    "kind": "function",
    "name": "get_universe_graphics",
    "memberof": "esi/Universe.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Universe.js~get_universe_graphics",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": "{get_universe_graphics}",
    "description": "Get a list of graphics\n\n---\nAlternate route: `/dev/universe/graphics/`\n\nAlternate route: `/legacy/universe/graphics/`\n\nAlternate route: `/v1/universe/graphics/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 301,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of graphic ids"
    }
  },
  {
    "__docId__": 345,
    "kind": "function",
    "name": "get_universe_graphics_graphic_id",
    "memberof": "esi/Universe.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Universe.js~get_universe_graphics_graphic_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": "{get_universe_graphics_graphic_id}",
    "description": "Get information on a graphic\n\n---\nAlternate route: `/dev/universe/graphics/{graphic_id}/`\n\nAlternate route: `/legacy/universe/graphics/{graphic_id}/`\n\nAlternate route: `/v1/universe/graphics/{graphic_id}/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 333,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "graphicId",
        "description": "graphic_id integer"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Information about a graphic"
    }
  },
  {
    "__docId__": 346,
    "kind": "function",
    "name": "get_universe_groups",
    "memberof": "esi/Universe.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Universe.js~get_universe_groups",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": "{get_universe_groups}",
    "description": "Get a list of item groups\n\n---\nAlternate route: `/dev/universe/groups/`\n\nAlternate route: `/legacy/universe/groups/`\n\nAlternate route: `/v1/universe/groups/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 368,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of item group ids"
    }
  },
  {
    "__docId__": 347,
    "kind": "function",
    "name": "get_universe_groups_group_id",
    "memberof": "esi/Universe.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Universe.js~get_universe_groups_group_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": "{get_universe_groups_group_id}",
    "description": "Get information on an item group\n\n---\nAlternate route: `/dev/universe/groups/{group_id}/`\n\nAlternate route: `/legacy/universe/groups/{group_id}/`\n\nAlternate route: `/v1/universe/groups/{group_id}/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 403,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "groupId",
        "description": "An Eve item group ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.AcceptLanguage",
        "description": "Language to use in the response"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.language",
        "description": "Language to use in the response, takes precedence over Accept-Language"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Information about an item group"
    }
  },
  {
    "__docId__": 348,
    "kind": "function",
    "name": "post_universe_ids",
    "memberof": "esi/Universe.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Universe.js~post_universe_ids",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": "{post_universe_ids}",
    "description": "Resolve a set of names to IDs in the following categories: agents, alliances, characters, constellations, corporations factions, inventory_types, regions, stations, and systems. Only exact matches will be returned. All names searched for are cached for 12 hours\n\n---\nAlternate route: `/dev/universe/ids/`\n\nAlternate route: `/legacy/universe/ids/`\n\nAlternate route: `/v1/universe/ids/`",
    "lineNumber": 437,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.AcceptLanguage",
        "description": "Language to use in the response"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.language",
        "description": "Language to use in the response, takes precedence over Accept-Language"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "List of id/name associations for a set of names divided by category. Any name passed in that did not have a match will be ommitted"
    }
  },
  {
    "__docId__": 349,
    "kind": "function",
    "name": "get_universe_moons_moon_id",
    "memberof": "esi/Universe.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Universe.js~get_universe_moons_moon_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": "{get_universe_moons_moon_id}",
    "description": "Get information on a moon\n\n---\nAlternate route: `/dev/universe/moons/{moon_id}/`\n\nAlternate route: `/legacy/universe/moons/{moon_id}/`\n\nAlternate route: `/v1/universe/moons/{moon_id}/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 470,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "moonId",
        "description": "moon_id integer"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Information about a moon"
    }
  },
  {
    "__docId__": 350,
    "kind": "function",
    "name": "post_universe_names",
    "memberof": "esi/Universe.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Universe.js~post_universe_names",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": "{post_universe_names}",
    "description": "Resolve a set of IDs to names and categories. Supported ID's for resolving are: Characters, Corporations, Alliances, Stations, Solar Systems, Constellations, Regions, Types\n\n---\nAlternate route: `/dev/universe/names/`\n\nAlternate route: `/v2/universe/names/`",
    "lineNumber": 498,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "List of id/name associations for a set of ID's. All ID's must resolve to a name, or nothing will be returned"
    }
  },
  {
    "__docId__": 351,
    "kind": "function",
    "name": "get_universe_planets_planet_id",
    "memberof": "esi/Universe.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Universe.js~get_universe_planets_planet_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": "{get_universe_planets_planet_id}",
    "description": "Get information on a planet\n\n---\nAlternate route: `/dev/universe/planets/{planet_id}/`\n\nAlternate route: `/legacy/universe/planets/{planet_id}/`\n\nAlternate route: `/v1/universe/planets/{planet_id}/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 527,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "planetId",
        "description": "planet_id integer"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Information about a planet"
    }
  },
  {
    "__docId__": 352,
    "kind": "function",
    "name": "get_universe_races",
    "memberof": "esi/Universe.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Universe.js~get_universe_races",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": "{get_universe_races}",
    "description": "Get a list of character races\n\n---\nAlternate route: `/dev/universe/races/`\n\nAlternate route: `/legacy/universe/races/`\n\nAlternate route: `/v1/universe/races/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 563,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.AcceptLanguage",
        "description": "Language to use in the response"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.language",
        "description": "Language to use in the response, takes precedence over Accept-Language"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of character races"
    }
  },
  {
    "__docId__": 353,
    "kind": "function",
    "name": "get_universe_regions",
    "memberof": "esi/Universe.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Universe.js~get_universe_regions",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": "{get_universe_regions}",
    "description": "Get a list of regions\n\n---\nAlternate route: `/dev/universe/regions/`\n\nAlternate route: `/legacy/universe/regions/`\n\nAlternate route: `/v1/universe/regions/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 596,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of region ids"
    }
  },
  {
    "__docId__": 354,
    "kind": "function",
    "name": "get_universe_regions_region_id",
    "memberof": "esi/Universe.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Universe.js~get_universe_regions_region_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": "{get_universe_regions_region_id}",
    "description": "Get information on a region\n\n---\nAlternate route: `/dev/universe/regions/{region_id}/`\n\nAlternate route: `/legacy/universe/regions/{region_id}/`\n\nAlternate route: `/v1/universe/regions/{region_id}/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 630,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "regionId",
        "description": "region_id integer"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.AcceptLanguage",
        "description": "Language to use in the response"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.language",
        "description": "Language to use in the response, takes precedence over Accept-Language"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Information about a region"
    }
  },
  {
    "__docId__": 355,
    "kind": "function",
    "name": "get_universe_stargates_stargate_id",
    "memberof": "esi/Universe.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Universe.js~get_universe_stargates_stargate_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": "{get_universe_stargates_stargate_id}",
    "description": "Get information on a stargate\n\n---\nAlternate route: `/dev/universe/stargates/{stargate_id}/`\n\nAlternate route: `/legacy/universe/stargates/{stargate_id}/`\n\nAlternate route: `/v1/universe/stargates/{stargate_id}/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 667,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "stargateId",
        "description": "stargate_id integer"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Information about a stargate"
    }
  },
  {
    "__docId__": 356,
    "kind": "function",
    "name": "get_universe_stars_star_id",
    "memberof": "esi/Universe.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Universe.js~get_universe_stars_star_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": "{get_universe_stars_star_id}",
    "description": "Get information on a star\n\n---\nAlternate route: `/dev/universe/stars/{star_id}/`\n\nAlternate route: `/legacy/universe/stars/{star_id}/`\n\nAlternate route: `/v1/universe/stars/{star_id}/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 702,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "starId",
        "description": "star_id integer"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Information about a star"
    }
  },
  {
    "__docId__": 357,
    "kind": "function",
    "name": "get_universe_stations_station_id",
    "memberof": "esi/Universe.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Universe.js~get_universe_stations_station_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": "{get_universe_stations_station_id}",
    "description": "Get information on a station\n\n---\nAlternate route: `/dev/universe/stations/{station_id}/`\n\nAlternate route: `/v2/universe/stations/{station_id}/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 735,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "stationId",
        "description": "station_id integer"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Information about a station"
    }
  },
  {
    "__docId__": 358,
    "kind": "function",
    "name": "get_universe_structures",
    "memberof": "esi/Universe.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Universe.js~get_universe_structures",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": "{get_universe_structures}",
    "description": "List all public structures\n\n---\nAlternate route: `/dev/universe/structures/`\n\nAlternate route: `/legacy/universe/structures/`\n\nAlternate route: `/v1/universe/structures/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 769,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "List of public structure IDs"
    }
  },
  {
    "__docId__": 359,
    "kind": "function",
    "name": "get_universe_structures_structure_id",
    "memberof": "esi/Universe.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Universe.js~get_universe_structures_structure_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": "{get_universe_structures_structure_id}",
    "description": "Returns information on requested structure if you are on the ACL. Otherwise, returns \"Forbidden\" for all inputs.\n\n---\nAlternate route: `/dev/universe/structures/{structure_id}/`\n\nAlternate route: `/v2/universe/structures/{structure_id}/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 800,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "structureId",
        "description": "An Eve structure ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Data about a structure"
    }
  },
  {
    "__docId__": 360,
    "kind": "function",
    "name": "get_universe_system_jumps",
    "memberof": "esi/Universe.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Universe.js~get_universe_system_jumps",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": "{get_universe_system_jumps}",
    "description": "Get the number of jumps in solar systems within the last hour ending at the timestamp of the Last-Modified header, excluding wormhole space. Only systems with jumps will be listed\n\n---\nAlternate route: `/dev/universe/system_jumps/`\n\nAlternate route: `/legacy/universe/system_jumps/`\n\nAlternate route: `/v1/universe/system_jumps/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 835,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of systems and number of jumps"
    }
  },
  {
    "__docId__": 361,
    "kind": "function",
    "name": "get_universe_system_kills",
    "memberof": "esi/Universe.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Universe.js~get_universe_system_kills",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": "{get_universe_system_kills}",
    "description": "Get the number of ship, pod and NPC kills per solar system within the last hour ending at the timestamp of the Last-Modified header, excluding wormhole space. Only systems with kills will be listed\n\n---\nAlternate route: `/dev/universe/system_kills/`\n\nAlternate route: `/v2/universe/system_kills/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 864,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of systems and number of ship, pod and NPC kills"
    }
  },
  {
    "__docId__": 362,
    "kind": "function",
    "name": "get_universe_systems",
    "memberof": "esi/Universe.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Universe.js~get_universe_systems",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": "{get_universe_systems}",
    "description": "Get a list of solar systems\n\n---\nAlternate route: `/dev/universe/systems/`\n\nAlternate route: `/legacy/universe/systems/`\n\nAlternate route: `/v1/universe/systems/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 895,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of solar system ids"
    }
  },
  {
    "__docId__": 363,
    "kind": "function",
    "name": "get_universe_systems_system_id",
    "memberof": "esi/Universe.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Universe.js~get_universe_systems_system_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": "{get_universe_systems_system_id}",
    "description": "Get information on a solar system.\n\n---\nAlternate route: `/dev/universe/systems/{system_id}/`\n\nAlternate route: `/v4/universe/systems/{system_id}/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 927,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "systemId",
        "description": "system_id integer"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.AcceptLanguage",
        "description": "Language to use in the response"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.language",
        "description": "Language to use in the response, takes precedence over Accept-Language"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Information about a solar system"
    }
  },
  {
    "__docId__": 364,
    "kind": "function",
    "name": "get_universe_types",
    "memberof": "esi/Universe.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Universe.js~get_universe_types",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": "{get_universe_types}",
    "description": "Get a list of type ids\n\n---\nAlternate route: `/dev/universe/types/`\n\nAlternate route: `/legacy/universe/types/`\n\nAlternate route: `/v1/universe/types/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 964,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of type ids"
    }
  },
  {
    "__docId__": 365,
    "kind": "function",
    "name": "get_universe_types_type_id",
    "memberof": "esi/Universe.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Universe.js~get_universe_types_type_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": "{get_universe_types_type_id}",
    "description": "Get information on a type\n\n---\nAlternate route: `/dev/universe/types/{type_id}/`\n\nAlternate route: `/v3/universe/types/{type_id}/`\n\n---\nThis route expires daily at 11:05",
    "lineNumber": 997,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "typeId",
        "description": "An Eve item type ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.AcceptLanguage",
        "description": "Language to use in the response"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.language",
        "description": "Language to use in the response, takes precedence over Accept-Language"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Information about a type"
    }
  },
  {
    "__docId__": 366,
    "kind": "variable",
    "name": "get_universe_ancestriesOperation",
    "memberof": "esi/Universe.js",
    "static": true,
    "longname": "esi/Universe.js~get_universe_ancestriesOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1015,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 367,
    "kind": "variable",
    "name": "get_universe_asteroid_belts_asteroid_belt_idOperation",
    "memberof": "esi/Universe.js",
    "static": true,
    "longname": "esi/Universe.js~get_universe_asteroid_belts_asteroid_belt_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1020,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 368,
    "kind": "variable",
    "name": "get_universe_bloodlinesOperation",
    "memberof": "esi/Universe.js",
    "static": true,
    "longname": "esi/Universe.js~get_universe_bloodlinesOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1025,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 369,
    "kind": "variable",
    "name": "get_universe_categoriesOperation",
    "memberof": "esi/Universe.js",
    "static": true,
    "longname": "esi/Universe.js~get_universe_categoriesOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1030,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 370,
    "kind": "variable",
    "name": "get_universe_categories_category_idOperation",
    "memberof": "esi/Universe.js",
    "static": true,
    "longname": "esi/Universe.js~get_universe_categories_category_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1035,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 371,
    "kind": "variable",
    "name": "get_universe_constellationsOperation",
    "memberof": "esi/Universe.js",
    "static": true,
    "longname": "esi/Universe.js~get_universe_constellationsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1040,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 372,
    "kind": "variable",
    "name": "get_universe_constellations_constellation_idOperation",
    "memberof": "esi/Universe.js",
    "static": true,
    "longname": "esi/Universe.js~get_universe_constellations_constellation_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1045,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 373,
    "kind": "variable",
    "name": "get_universe_factionsOperation",
    "memberof": "esi/Universe.js",
    "static": true,
    "longname": "esi/Universe.js~get_universe_factionsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1050,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 374,
    "kind": "variable",
    "name": "get_universe_graphicsOperation",
    "memberof": "esi/Universe.js",
    "static": true,
    "longname": "esi/Universe.js~get_universe_graphicsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1055,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 375,
    "kind": "variable",
    "name": "get_universe_graphics_graphic_idOperation",
    "memberof": "esi/Universe.js",
    "static": true,
    "longname": "esi/Universe.js~get_universe_graphics_graphic_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1060,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 376,
    "kind": "variable",
    "name": "get_universe_groupsOperation",
    "memberof": "esi/Universe.js",
    "static": true,
    "longname": "esi/Universe.js~get_universe_groupsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1065,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 377,
    "kind": "variable",
    "name": "get_universe_groups_group_idOperation",
    "memberof": "esi/Universe.js",
    "static": true,
    "longname": "esi/Universe.js~get_universe_groups_group_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1070,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 378,
    "kind": "variable",
    "name": "post_universe_idsOperation",
    "memberof": "esi/Universe.js",
    "static": true,
    "longname": "esi/Universe.js~post_universe_idsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1075,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 379,
    "kind": "variable",
    "name": "get_universe_moons_moon_idOperation",
    "memberof": "esi/Universe.js",
    "static": true,
    "longname": "esi/Universe.js~get_universe_moons_moon_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1080,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 380,
    "kind": "variable",
    "name": "post_universe_namesOperation",
    "memberof": "esi/Universe.js",
    "static": true,
    "longname": "esi/Universe.js~post_universe_namesOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1085,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 381,
    "kind": "variable",
    "name": "get_universe_planets_planet_idOperation",
    "memberof": "esi/Universe.js",
    "static": true,
    "longname": "esi/Universe.js~get_universe_planets_planet_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1090,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 382,
    "kind": "variable",
    "name": "get_universe_racesOperation",
    "memberof": "esi/Universe.js",
    "static": true,
    "longname": "esi/Universe.js~get_universe_racesOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1095,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 383,
    "kind": "variable",
    "name": "get_universe_regionsOperation",
    "memberof": "esi/Universe.js",
    "static": true,
    "longname": "esi/Universe.js~get_universe_regionsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1100,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 384,
    "kind": "variable",
    "name": "get_universe_regions_region_idOperation",
    "memberof": "esi/Universe.js",
    "static": true,
    "longname": "esi/Universe.js~get_universe_regions_region_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1105,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 385,
    "kind": "variable",
    "name": "get_universe_stargates_stargate_idOperation",
    "memberof": "esi/Universe.js",
    "static": true,
    "longname": "esi/Universe.js~get_universe_stargates_stargate_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1110,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 386,
    "kind": "variable",
    "name": "get_universe_stars_star_idOperation",
    "memberof": "esi/Universe.js",
    "static": true,
    "longname": "esi/Universe.js~get_universe_stars_star_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1115,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 387,
    "kind": "variable",
    "name": "get_universe_stations_station_idOperation",
    "memberof": "esi/Universe.js",
    "static": true,
    "longname": "esi/Universe.js~get_universe_stations_station_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1120,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 388,
    "kind": "variable",
    "name": "get_universe_structuresOperation",
    "memberof": "esi/Universe.js",
    "static": true,
    "longname": "esi/Universe.js~get_universe_structuresOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1125,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 389,
    "kind": "variable",
    "name": "get_universe_structures_structure_idOperation",
    "memberof": "esi/Universe.js",
    "static": true,
    "longname": "esi/Universe.js~get_universe_structures_structure_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1130,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 390,
    "kind": "variable",
    "name": "get_universe_system_jumpsOperation",
    "memberof": "esi/Universe.js",
    "static": true,
    "longname": "esi/Universe.js~get_universe_system_jumpsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1141,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 391,
    "kind": "variable",
    "name": "get_universe_system_killsOperation",
    "memberof": "esi/Universe.js",
    "static": true,
    "longname": "esi/Universe.js~get_universe_system_killsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1146,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 392,
    "kind": "variable",
    "name": "get_universe_systemsOperation",
    "memberof": "esi/Universe.js",
    "static": true,
    "longname": "esi/Universe.js~get_universe_systemsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1151,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 393,
    "kind": "variable",
    "name": "get_universe_systems_system_idOperation",
    "memberof": "esi/Universe.js",
    "static": true,
    "longname": "esi/Universe.js~get_universe_systems_system_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1156,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 394,
    "kind": "variable",
    "name": "get_universe_typesOperation",
    "memberof": "esi/Universe.js",
    "static": true,
    "longname": "esi/Universe.js~get_universe_typesOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1161,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 395,
    "kind": "variable",
    "name": "get_universe_types_type_idOperation",
    "memberof": "esi/Universe.js",
    "static": true,
    "longname": "esi/Universe.js~get_universe_types_type_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Universe.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1166,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 396,
    "kind": "file",
    "name": "esi/UserInterface.js",
    "content": "/** @module UserInterface */\n// Auto-generated, edits will be overwritten\nimport * as gateway from './gateway'\n\n/**\n * Set a solar system as autopilot waypoint\n * \n * ---\n * Alternate route: `/dev/ui/autopilot/waypoint/`\n * \n * Alternate route: `/v2/ui/autopilot/waypoint/`\n * \n * @param {boolean} addToBeginning Whether this solar system should be added to the beginning of all waypoints\n * @param {boolean} clearOtherWaypoints Whether clean other waypoints beforing adding this one\n * @param {number} destinationId The destination to travel to, can be solar system, station or structure's id\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Open window request received\n */\nexport function post_ui_autopilot_waypoint(addToBeginning, clearOtherWaypoints, destinationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      add_to_beginning: addToBeginning,\n      clear_other_waypoints: clearOtherWaypoints,\n      datasource: options.datasource,\n      destination_id: destinationId,\n      token: options.token\n    }\n  }\n  return gateway.request(post_ui_autopilot_waypointOperation, parameters)\n}\n\n/**\n * Open the contract window inside the client\n * \n * ---\n * Alternate route: `/dev/ui/openwindow/contract/`\n * \n * Alternate route: `/legacy/ui/openwindow/contract/`\n * \n * Alternate route: `/v1/ui/openwindow/contract/`\n * \n * @param {number} contractId The contract to open\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Open window request received\n */\nexport function post_ui_openwindow_contract(contractId, options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      contract_id: contractId,\n      datasource: options.datasource,\n      token: options.token\n    }\n  }\n  return gateway.request(post_ui_openwindow_contractOperation, parameters)\n}\n\n/**\n * Open the information window for a character, corporation or alliance inside the client\n * \n * ---\n * Alternate route: `/dev/ui/openwindow/information/`\n * \n * Alternate route: `/legacy/ui/openwindow/information/`\n * \n * Alternate route: `/v1/ui/openwindow/information/`\n * \n * @param {number} targetId The target to open\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Open window request received\n */\nexport function post_ui_openwindow_information(targetId, options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource,\n      target_id: targetId,\n      token: options.token\n    }\n  }\n  return gateway.request(post_ui_openwindow_informationOperation, parameters)\n}\n\n/**\n * Open the market details window for a specific typeID inside the client\n * \n * ---\n * Alternate route: `/dev/ui/openwindow/marketdetails/`\n * \n * Alternate route: `/legacy/ui/openwindow/marketdetails/`\n * \n * Alternate route: `/v1/ui/openwindow/marketdetails/`\n * \n * @param {number} typeId The item type to open in market window\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Open window request received\n */\nexport function post_ui_openwindow_marketdetails(typeId, options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource,\n      token: options.token,\n      type_id: typeId\n    }\n  }\n  return gateway.request(post_ui_openwindow_marketdetailsOperation, parameters)\n}\n\n/**\n * Open the New Mail window, according to settings from the request if applicable\n * \n * ---\n * Alternate route: `/dev/ui/openwindow/newmail/`\n * \n * Alternate route: `/legacy/ui/openwindow/newmail/`\n * \n * Alternate route: `/v1/ui/openwindow/newmail/`\n * \n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Open window request received\n */\nexport function post_ui_openwindow_newmail(options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    }\n  }\n  return gateway.request(post_ui_openwindow_newmailOperation, parameters)\n}\n\nconst post_ui_autopilot_waypointOperation = {\n  path: '/ui/autopilot/waypoint/',\n  method: 'post',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-ui.write_waypoint.v1']\n    }\n  ]\n}\n\nconst post_ui_openwindow_contractOperation = {\n  path: '/ui/openwindow/contract/',\n  method: 'post',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-ui.open_window.v1']\n    }\n  ]\n}\n\nconst post_ui_openwindow_informationOperation = {\n  path: '/ui/openwindow/information/',\n  method: 'post',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-ui.open_window.v1']\n    }\n  ]\n}\n\nconst post_ui_openwindow_marketdetailsOperation = {\n  path: '/ui/openwindow/marketdetails/',\n  method: 'post',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-ui.open_window.v1']\n    }\n  ]\n}\n\nconst post_ui_openwindow_newmailOperation = {\n  path: '/ui/openwindow/newmail/',\n  method: 'post',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-ui.open_window.v1']\n    }\n  ]\n}\n",
    "static": true,
    "longname": "/Users/sebs/projects/opensource/es-next-modules/packages/esi/UserInterface.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 397,
    "kind": "function",
    "name": "post_ui_autopilot_waypoint",
    "memberof": "esi/UserInterface.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/UserInterface.js~post_ui_autopilot_waypoint",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/UserInterface.js",
    "importStyle": "{post_ui_autopilot_waypoint}",
    "description": "Set a solar system as autopilot waypoint\n\n---\nAlternate route: `/dev/ui/autopilot/waypoint/`\n\nAlternate route: `/v2/ui/autopilot/waypoint/`",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "addToBeginning",
        "description": "Whether this solar system should be added to the beginning of all waypoints"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "clearOtherWaypoints",
        "description": "Whether clean other waypoints beforing adding this one"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "destinationId",
        "description": "The destination to travel to, can be solar system, station or structure's id"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Open window request received"
    }
  },
  {
    "__docId__": 398,
    "kind": "function",
    "name": "post_ui_openwindow_contract",
    "memberof": "esi/UserInterface.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/UserInterface.js~post_ui_openwindow_contract",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/UserInterface.js",
    "importStyle": "{post_ui_openwindow_contract}",
    "description": "Open the contract window inside the client\n\n---\nAlternate route: `/dev/ui/openwindow/contract/`\n\nAlternate route: `/legacy/ui/openwindow/contract/`\n\nAlternate route: `/v1/ui/openwindow/contract/`",
    "lineNumber": 51,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "contractId",
        "description": "The contract to open"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Open window request received"
    }
  },
  {
    "__docId__": 399,
    "kind": "function",
    "name": "post_ui_openwindow_information",
    "memberof": "esi/UserInterface.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/UserInterface.js~post_ui_openwindow_information",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/UserInterface.js",
    "importStyle": "{post_ui_openwindow_information}",
    "description": "Open the information window for a character, corporation or alliance inside the client\n\n---\nAlternate route: `/dev/ui/openwindow/information/`\n\nAlternate route: `/legacy/ui/openwindow/information/`\n\nAlternate route: `/v1/ui/openwindow/information/`",
    "lineNumber": 79,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "targetId",
        "description": "The target to open"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Open window request received"
    }
  },
  {
    "__docId__": 400,
    "kind": "function",
    "name": "post_ui_openwindow_marketdetails",
    "memberof": "esi/UserInterface.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/UserInterface.js~post_ui_openwindow_marketdetails",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/UserInterface.js",
    "importStyle": "{post_ui_openwindow_marketdetails}",
    "description": "Open the market details window for a specific typeID inside the client\n\n---\nAlternate route: `/dev/ui/openwindow/marketdetails/`\n\nAlternate route: `/legacy/ui/openwindow/marketdetails/`\n\nAlternate route: `/v1/ui/openwindow/marketdetails/`",
    "lineNumber": 107,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "typeId",
        "description": "The item type to open in market window"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Open window request received"
    }
  },
  {
    "__docId__": 401,
    "kind": "function",
    "name": "post_ui_openwindow_newmail",
    "memberof": "esi/UserInterface.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/UserInterface.js~post_ui_openwindow_newmail",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/UserInterface.js",
    "importStyle": "{post_ui_openwindow_newmail}",
    "description": "Open the New Mail window, according to settings from the request if applicable\n\n---\nAlternate route: `/dev/ui/openwindow/newmail/`\n\nAlternate route: `/legacy/ui/openwindow/newmail/`\n\nAlternate route: `/v1/ui/openwindow/newmail/`",
    "lineNumber": 134,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Open window request received"
    }
  },
  {
    "__docId__": 402,
    "kind": "variable",
    "name": "post_ui_autopilot_waypointOperation",
    "memberof": "esi/UserInterface.js",
    "static": true,
    "longname": "esi/UserInterface.js~post_ui_autopilot_waypointOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/UserInterface.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 145,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 403,
    "kind": "variable",
    "name": "post_ui_openwindow_contractOperation",
    "memberof": "esi/UserInterface.js",
    "static": true,
    "longname": "esi/UserInterface.js~post_ui_openwindow_contractOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/UserInterface.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 156,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 404,
    "kind": "variable",
    "name": "post_ui_openwindow_informationOperation",
    "memberof": "esi/UserInterface.js",
    "static": true,
    "longname": "esi/UserInterface.js~post_ui_openwindow_informationOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/UserInterface.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 167,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 405,
    "kind": "variable",
    "name": "post_ui_openwindow_marketdetailsOperation",
    "memberof": "esi/UserInterface.js",
    "static": true,
    "longname": "esi/UserInterface.js~post_ui_openwindow_marketdetailsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/UserInterface.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 178,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 406,
    "kind": "variable",
    "name": "post_ui_openwindow_newmailOperation",
    "memberof": "esi/UserInterface.js",
    "static": true,
    "longname": "esi/UserInterface.js~post_ui_openwindow_newmailOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/UserInterface.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 189,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 407,
    "kind": "file",
    "name": "esi/Wallet.js",
    "content": "/** @module Wallet */\n// Auto-generated, edits will be overwritten\nimport * as gateway from './gateway'\n\n/**\n * Returns a character's wallet balance\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/wallet/`\n * \n * Alternate route: `/legacy/characters/{character_id}/wallet/`\n * \n * Alternate route: `/v1/characters/{character_id}/wallet/`\n * \n * ---\n * This route is cached for up to 120 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Wallet balance\n */\nexport function get_characters_character_id_wallet(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_walletOperation, parameters)\n}\n\n/**\n * Retrieve the given character's wallet journal going 30 days back\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/wallet/journal/`\n * \n * Alternate route: `/legacy/characters/{character_id}/wallet/journal/`\n * \n * Alternate route: `/v4/characters/{character_id}/wallet/journal/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.page] Which page of results to return\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Journal entries\n */\nexport function get_characters_character_id_wallet_journal(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      page: options.page,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_wallet_journalOperation, parameters)\n}\n\n/**\n * Get wallet transactions of a character\n * \n * ---\n * Alternate route: `/dev/characters/{character_id}/wallet/transactions/`\n * \n * Alternate route: `/legacy/characters/{character_id}/wallet/transactions/`\n * \n * Alternate route: `/v1/characters/{character_id}/wallet/transactions/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {number} characterId An EVE character ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {number} [options.fromId] Only show transactions happened before the one referenced by this id\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Wallet transactions\n */\nexport function get_characters_character_id_wallet_transactions(characterId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      character_id: characterId\n    },\n    query: {\n      datasource: options.datasource,\n      from_id: options.fromId,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_characters_character_id_wallet_transactionsOperation, parameters)\n}\n\n/**\n * Get a corporation's wallets\n * \n * ---\n * Alternate route: `/dev/corporations/{corporation_id}/wallets/`\n * \n * Alternate route: `/legacy/corporations/{corporation_id}/wallets/`\n * \n * Alternate route: `/v1/corporations/{corporation_id}/wallets/`\n * \n * ---\n * This route is cached for up to 300 seconds\n * \n * ---\n * Requires one of the following EVE corporation role(s): Accountant, Junior_Accountant\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} List of corporation wallets\n */\nexport function get_corporations_corporation_id_wallets(corporationId, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      corporation_id: corporationId\n    },\n    query: {\n      datasource: options.datasource,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_corporations_corporation_id_walletsOperation, parameters)\n}\n\n/**\n * Retrieve the given corporation's wallet journal for the given division going 30 days back\n * \n * ---\n * Alternate route: `/dev/corporations/{corporation_id}/wallets/{division}/journal/`\n * \n * Alternate route: `/legacy/corporations/{corporation_id}/wallets/{division}/journal/`\n * \n * Alternate route: `/v3/corporations/{corporation_id}/wallets/{division}/journal/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * ---\n * Requires one of the following EVE corporation role(s): Accountant, Junior_Accountant\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {number} division Wallet key of the division to fetch journals from\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.page] Which page of results to return\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Journal entries\n */\nexport function get_corporations_corporation_id_wallets_division_journal(corporationId, division, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      corporation_id: corporationId,\n      division\n    },\n    query: {\n      datasource: options.datasource,\n      page: options.page,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_corporations_corporation_id_wallets_division_journalOperation, parameters)\n}\n\n/**\n * Get wallet transactions of a corporation\n * \n * ---\n * Alternate route: `/dev/corporations/{corporation_id}/wallets/{division}/transactions/`\n * \n * Alternate route: `/legacy/corporations/{corporation_id}/wallets/{division}/transactions/`\n * \n * Alternate route: `/v1/corporations/{corporation_id}/wallets/{division}/transactions/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * ---\n * Requires one of the following EVE corporation role(s): Accountant, Junior_Accountant\n * \n * @param {number} corporationId An EVE corporation ID\n * @param {number} division Wallet key of the division to fetch journals from\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {number} [options.fromId] Only show journal entries happened before the transaction referenced by this id\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {string} [options.token] Access token to use if unable to set a header\n * @return {Promise<object>} Wallet transactions\n */\nexport function get_corporations_corporation_id_wallets_division_transactions(corporationId, division, options) {\n  if (!options) options = {}\n  const parameters = {\n    path: {\n      corporation_id: corporationId,\n      division\n    },\n    query: {\n      datasource: options.datasource,\n      from_id: options.fromId,\n      token: options.token\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_corporations_corporation_id_wallets_division_transactionsOperation, parameters)\n}\n\nconst get_characters_character_id_walletOperation = {\n  path: '/characters/{character_id}/wallet/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-wallet.read_character_wallet.v1']\n    }\n  ]\n}\n\nconst get_characters_character_id_wallet_journalOperation = {\n  path: '/characters/{character_id}/wallet/journal/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-wallet.read_character_wallet.v1']\n    }\n  ]\n}\n\nconst get_characters_character_id_wallet_transactionsOperation = {\n  path: '/characters/{character_id}/wallet/transactions/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-wallet.read_character_wallet.v1']\n    }\n  ]\n}\n\nconst get_corporations_corporation_id_walletsOperation = {\n  path: '/corporations/{corporation_id}/wallets/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-wallet.read_corporation_wallets.v1']\n    }\n  ]\n}\n\nconst get_corporations_corporation_id_wallets_division_journalOperation = {\n  path: '/corporations/{corporation_id}/wallets/{division}/journal/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-wallet.read_corporation_wallets.v1']\n    }\n  ]\n}\n\nconst get_corporations_corporation_id_wallets_division_transactionsOperation = {\n  path: '/corporations/{corporation_id}/wallets/{division}/transactions/',\n  method: 'get',\n  security: [\n    {\n      id: 'evesso',\n      scopes: ['esi-wallet.read_corporation_wallets.v1']\n    }\n  ]\n}\n",
    "static": true,
    "longname": "/Users/sebs/projects/opensource/es-next-modules/packages/esi/Wallet.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 408,
    "kind": "function",
    "name": "get_characters_character_id_wallet",
    "memberof": "esi/Wallet.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Wallet.js~get_characters_character_id_wallet",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Wallet.js",
    "importStyle": "{get_characters_character_id_wallet}",
    "description": "Returns a character's wallet balance\n\n---\nAlternate route: `/dev/characters/{character_id}/wallet/`\n\nAlternate route: `/legacy/characters/{character_id}/wallet/`\n\nAlternate route: `/v1/characters/{character_id}/wallet/`\n\n---\nThis route is cached for up to 120 seconds",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Wallet balance"
    }
  },
  {
    "__docId__": 409,
    "kind": "function",
    "name": "get_characters_character_id_wallet_journal",
    "memberof": "esi/Wallet.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Wallet.js~get_characters_character_id_wallet_journal",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Wallet.js",
    "importStyle": "{get_characters_character_id_wallet_journal}",
    "description": "Retrieve the given character's wallet journal going 30 days back\n\n---\nAlternate route: `/dev/characters/{character_id}/wallet/journal/`\n\nAlternate route: `/legacy/characters/{character_id}/wallet/journal/`\n\nAlternate route: `/v4/characters/{character_id}/wallet/journal/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 63,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Journal entries"
    }
  },
  {
    "__docId__": 410,
    "kind": "function",
    "name": "get_characters_character_id_wallet_transactions",
    "memberof": "esi/Wallet.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Wallet.js~get_characters_character_id_wallet_transactions",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Wallet.js",
    "importStyle": "{get_characters_character_id_wallet_transactions}",
    "description": "Get wallet transactions of a character\n\n---\nAlternate route: `/dev/characters/{character_id}/wallet/transactions/`\n\nAlternate route: `/legacy/characters/{character_id}/wallet/transactions/`\n\nAlternate route: `/v1/characters/{character_id}/wallet/transactions/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 102,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "characterId",
        "description": "An EVE character ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.fromId",
        "description": "Only show transactions happened before the one referenced by this id"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Wallet transactions"
    }
  },
  {
    "__docId__": 411,
    "kind": "function",
    "name": "get_corporations_corporation_id_wallets",
    "memberof": "esi/Wallet.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Wallet.js~get_corporations_corporation_id_wallets",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Wallet.js",
    "importStyle": "{get_corporations_corporation_id_wallets}",
    "description": "Get a corporation's wallets\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/wallets/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/wallets/`\n\nAlternate route: `/v1/corporations/{corporation_id}/wallets/`\n\n---\nThis route is cached for up to 300 seconds\n\n---\nRequires one of the following EVE corporation role(s): Accountant, Junior_Accountant",
    "lineNumber": 143,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "List of corporation wallets"
    }
  },
  {
    "__docId__": 412,
    "kind": "function",
    "name": "get_corporations_corporation_id_wallets_division_journal",
    "memberof": "esi/Wallet.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Wallet.js~get_corporations_corporation_id_wallets_division_journal",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Wallet.js",
    "importStyle": "{get_corporations_corporation_id_wallets_division_journal}",
    "description": "Retrieve the given corporation's wallet journal for the given division going 30 days back\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/wallets/{division}/journal/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/wallets/{division}/journal/`\n\nAlternate route: `/v3/corporations/{corporation_id}/wallets/{division}/journal/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Accountant, Junior_Accountant",
    "lineNumber": 185,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "division",
        "description": "Wallet key of the division to fetch journals from"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Journal entries"
    }
  },
  {
    "__docId__": 413,
    "kind": "function",
    "name": "get_corporations_corporation_id_wallets_division_transactions",
    "memberof": "esi/Wallet.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Wallet.js~get_corporations_corporation_id_wallets_division_transactions",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Wallet.js",
    "importStyle": "{get_corporations_corporation_id_wallets_division_transactions}",
    "description": "Get wallet transactions of a corporation\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/wallets/{division}/transactions/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/wallets/{division}/transactions/`\n\nAlternate route: `/v1/corporations/{corporation_id}/wallets/{division}/transactions/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Accountant, Junior_Accountant",
    "lineNumber": 229,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "corporationId",
        "description": "An EVE corporation ID"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "division",
        "description": "Wallet key of the division to fetch journals from"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.fromId",
        "description": "Only show journal entries happened before the transaction referenced by this id"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.token",
        "description": "Access token to use if unable to set a header"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Wallet transactions"
    }
  },
  {
    "__docId__": 414,
    "kind": "variable",
    "name": "get_characters_character_id_walletOperation",
    "memberof": "esi/Wallet.js",
    "static": true,
    "longname": "esi/Wallet.js~get_characters_character_id_walletOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Wallet.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 248,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 415,
    "kind": "variable",
    "name": "get_characters_character_id_wallet_journalOperation",
    "memberof": "esi/Wallet.js",
    "static": true,
    "longname": "esi/Wallet.js~get_characters_character_id_wallet_journalOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Wallet.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 259,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 416,
    "kind": "variable",
    "name": "get_characters_character_id_wallet_transactionsOperation",
    "memberof": "esi/Wallet.js",
    "static": true,
    "longname": "esi/Wallet.js~get_characters_character_id_wallet_transactionsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Wallet.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 270,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 417,
    "kind": "variable",
    "name": "get_corporations_corporation_id_walletsOperation",
    "memberof": "esi/Wallet.js",
    "static": true,
    "longname": "esi/Wallet.js~get_corporations_corporation_id_walletsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Wallet.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 281,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 418,
    "kind": "variable",
    "name": "get_corporations_corporation_id_wallets_division_journalOperation",
    "memberof": "esi/Wallet.js",
    "static": true,
    "longname": "esi/Wallet.js~get_corporations_corporation_id_wallets_division_journalOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Wallet.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 292,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 419,
    "kind": "variable",
    "name": "get_corporations_corporation_id_wallets_division_transactionsOperation",
    "memberof": "esi/Wallet.js",
    "static": true,
    "longname": "esi/Wallet.js~get_corporations_corporation_id_wallets_division_transactionsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Wallet.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 303,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string, \"security\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 420,
    "kind": "file",
    "name": "esi/Wars.js",
    "content": "/** @module Wars */\n// Auto-generated, edits will be overwritten\nimport * as gateway from './gateway'\n\n/**\n * Return a list of wars\n * \n * ---\n * Alternate route: `/dev/wars/`\n * \n * Alternate route: `/legacy/wars/`\n * \n * Alternate route: `/v1/wars/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.maxWarId] Only return wars with ID smaller than this\n * @return {Promise<object>} A list of war IDs, in descending order by war_id\n */\nexport function get_wars(options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource,\n      max_war_id: options.maxWarId\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    }\n  }\n  return gateway.request(get_warsOperation, parameters)\n}\n\n/**\n * Return details about a war\n * \n * ---\n * Alternate route: `/dev/wars/{war_id}/`\n * \n * Alternate route: `/legacy/wars/{war_id}/`\n * \n * Alternate route: `/v1/wars/{war_id}/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {number} warId ID for a war\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @return {Promise<object>} Details about a war\n */\nexport function get_wars_war_id(warId, options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    },\n    path: {\n      war_id: warId\n    }\n  }\n  return gateway.request(get_wars_war_idOperation, parameters)\n}\n\n/**\n * Return a list of kills related to a war\n * \n * ---\n * Alternate route: `/dev/wars/{war_id}/killmails/`\n * \n * Alternate route: `/legacy/wars/{war_id}/killmails/`\n * \n * Alternate route: `/v1/wars/{war_id}/killmails/`\n * \n * ---\n * This route is cached for up to 3600 seconds\n * \n * @param {number} warId A valid war ID\n * @param {object} options Optional options\n * @param {string} [options.datasource] The server name you would like data from\n * @param {string} [options.IfNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag\n * @param {number} [options.page] Which page of results to return\n * @return {Promise<object>} A list of killmail IDs and hashes\n */\nexport function get_wars_war_id_killmails(warId, options) {\n  if (!options) options = {}\n  const parameters = {\n    query: {\n      datasource: options.datasource,\n      page: options.page\n    },\n    header: {\n      'If-None-Match': options.IfNoneMatch\n    },\n    path: {\n      war_id: warId\n    }\n  }\n  return gateway.request(get_wars_war_id_killmailsOperation, parameters)\n}\n\nconst get_warsOperation = {\n  path: '/wars/',\n  method: 'get'\n}\n\nconst get_wars_war_idOperation = {\n  path: '/wars/{war_id}/',\n  method: 'get'\n}\n\nconst get_wars_war_id_killmailsOperation = {\n  path: '/wars/{war_id}/killmails/',\n  method: 'get'\n}\n",
    "static": true,
    "longname": "/Users/sebs/projects/opensource/es-next-modules/packages/esi/Wars.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 421,
    "kind": "function",
    "name": "get_wars",
    "memberof": "esi/Wars.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Wars.js~get_wars",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Wars.js",
    "importStyle": "{get_wars}",
    "description": "Return a list of wars\n\n---\nAlternate route: `/dev/wars/`\n\nAlternate route: `/legacy/wars/`\n\nAlternate route: `/v1/wars/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.maxWarId",
        "description": "Only return wars with ID smaller than this"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of war IDs, in descending order by war_id"
    }
  },
  {
    "__docId__": 422,
    "kind": "function",
    "name": "get_wars_war_id",
    "memberof": "esi/Wars.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Wars.js~get_wars_war_id",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Wars.js",
    "importStyle": "{get_wars_war_id}",
    "description": "Return details about a war\n\n---\nAlternate route: `/dev/wars/{war_id}/`\n\nAlternate route: `/legacy/wars/{war_id}/`\n\nAlternate route: `/v1/wars/{war_id}/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 57,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "warId",
        "description": "ID for a war"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "Details about a war"
    }
  },
  {
    "__docId__": 423,
    "kind": "function",
    "name": "get_wars_war_id_killmails",
    "memberof": "esi/Wars.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esi/Wars.js~get_wars_war_id_killmails",
    "access": "public",
    "export": true,
    "importPath": "@hiherto-elements/esi/esi/Wars.js",
    "importStyle": "{get_wars_war_id_killmails}",
    "description": "Return a list of kills related to a war\n\n---\nAlternate route: `/dev/wars/{war_id}/killmails/`\n\nAlternate route: `/legacy/wars/{war_id}/killmails/`\n\nAlternate route: `/v1/wars/{war_id}/killmails/`\n\n---\nThis route is cached for up to 3600 seconds",
    "lineNumber": 93,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "warId",
        "description": "A valid war ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.datasource",
        "description": "The server name you would like data from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.IfNoneMatch",
        "description": "ETag from a previous request. A 304 will be returned if this matches the current ETag"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.page",
        "description": "Which page of results to return"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A list of killmail IDs and hashes"
    }
  },
  {
    "__docId__": 424,
    "kind": "variable",
    "name": "get_warsOperation",
    "memberof": "esi/Wars.js",
    "static": true,
    "longname": "esi/Wars.js~get_warsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Wars.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 110,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 425,
    "kind": "variable",
    "name": "get_wars_war_idOperation",
    "memberof": "esi/Wars.js",
    "static": true,
    "longname": "esi/Wars.js~get_wars_war_idOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Wars.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 115,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 426,
    "kind": "variable",
    "name": "get_wars_war_id_killmailsOperation",
    "memberof": "esi/Wars.js",
    "static": true,
    "longname": "esi/Wars.js~get_wars_war_id_killmailsOperation",
    "access": "public",
    "export": false,
    "importPath": "@hiherto-elements/esi/esi/Wars.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 120,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": string, \"method\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 427,
    "kind": "file",
    "name": "esi/types.js",
    "content": "/** @module types */\n// Auto-generated, edits will be overwritten\n",
    "static": true,
    "longname": "/Users/sebs/projects/opensource/es-next-modules/packages/esi/types.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "kind": "index",
    "content": "# esi-es6\n\n\n[![npm](https://img.shields.io/npm/dt/esi-es6.svg)](https://www.npmjs.com/package/esi-es6)\n[![license](https://img.shields.io/github/license/sebs/esi-es6.svg)](https://github.com/sebs/esi-es6/blob/master/LICENSE.md)\n[![GitHub tag](https://img.shields.io/github/tag/sebs/esi-es6.svg)](https://github.com/sebs/esi-es6)\n[![Travis](https://img.shields.io/travis/sebs/esi-es6.svg)](https://travis-ci.org/sebs/esi-es6)\n[![GitHub issues](https://img.shields.io/github/issues/sebs/esi-es6.svg)](https://github.com/sebs/esi-es6/issues)\n\n\n```html\n<script type=\"module\">\n  import { get_alliances as getAlliances } from './node_modules/esi-es6-lib/Alliances.js';\n  getAlliances.then(console.log);\n</script>\n```\n\n\n```javascript\n  import { get_alliances as getAlliances } from 'esi-es6-lib/Alliances.js';\n  getAlliances.then(console.log);\n```\n",
    "longname": "/Users/sebs/projects/opensource/es-next-modules/packages/esi/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  }
]